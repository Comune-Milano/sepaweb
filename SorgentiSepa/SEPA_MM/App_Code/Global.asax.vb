Imports System.Web
Imports System.Web.SessionState
Imports System.IO
Imports System.Diagnostics
Imports System.Math
Imports ExpertPdf.HtmlToPdf
Imports ICSharpCode.SharpZipLib.Zip
Imports ICSharpCode.SharpZipLib.Checksums
Imports System.Collections.Generic
Imports iTextSharp
Imports System.Drawing
Imports System.Linq
Imports System.Text
Imports System.Security.Cryptography
Imports Oracle.DataAccess.Client
Imports System.Security.Cryptography.X509Certificates
Imports SepacomLock
Imports ICSharpCode.SharpZipLib.Core
Imports Telerik.Web.UI
Imports System.Globalization
Public Class PageSetMasterIdMode
    Inherits System.Web.UI.MasterPage
    Protected Overrides Sub OnInit(e As System.EventArgs)
        MyBase.OnInit(e)
        Me.Page.ClientIDMode = UI.ClientIDMode.AutoID
    End Sub
End Class
Public Class PageSetIdMode
    Inherits System.Web.UI.Page
    Protected Overrides Sub OnInit(e As System.EventArgs)
        MyBase.OnInit(e)
        Me.Page.ClientIDMode = UI.ClientIDMode.AutoID
    End Sub
End Class
Public Class UserControlSetIdMode
    Inherits System.Web.UI.UserControl
    Protected Overrides Sub OnInit(e As System.EventArgs)
        MyBase.OnInit(e)
        Me.Page.ClientIDMode = UI.ClientIDMode.AutoID
    End Sub
End Class



Namespace basetester
    Public Class Program
        Public Shared Sub Main(args As String())
            Dim output As String = ""
            Try
                'output = RSASign("Some Data to sign")
            Catch ex As Exception
                Console.WriteLine(ex.Message)
                Console.ReadLine()
            End Try
            Console.WriteLine(output)
        End Sub



        Public Shared Function GetPem(type As String, data As Byte()) As Byte()
            Dim pem As String = Encoding.UTF8.GetString(data)
            Dim header As String = [String].Format("-----BEGIN {0}-----\n", type)
            Dim footer As String = [String].Format("-----END {0}-----", type)
            Dim start As Integer = pem.IndexOf(header) + header.Length
            Dim [end] As Integer = pem.IndexOf(footer, start)
            Dim base64 As String = pem.Substring(start, ([end] - start))
            Return Convert.FromBase64String(base64)
        End Function

        Public Shared Function LoadCertificateFile(filename As String) As X509Certificate2
            Using fs As System.IO.FileStream = System.IO.File.OpenRead(filename)
                Dim data As Byte() = New Byte(fs.Length - 1) {}
                Dim res As Byte() = Nothing
                fs.Read(data, 0, data.Length)
                If data(0) <> &H30 Then
                    res = GetPem("CERTIFICATE", data)
                End If
                Dim x509 As New X509Certificate2(res)
                'Exception hit here
                Return x509
            End Using
        End Function
    End Class
End Namespace
Namespace LibCs
    Public Class CheckBancari
        Public codice As String = ""
        Public Sub New()

        End Sub
        Private mAbi As String = [String].Empty
        Private mCab As String = [String].Empty
        Private mContoCorrente As String = [String].Empty
        Private mCin As String = [String].Empty
        Private Const L_CONTO As Integer = 12
        Private Const L_ABI As Integer = 5
        Private Const L_CAB As Integer = 5
        Private mNormalizzaConto As Boolean = True
        Private mIBAN As String = [String].Empty
        Private mBBAN As String = [String].Empty
        Private mCheckDigitIBAN As String = [String].Empty
        Private mPaese As String = [String].Empty
        Private mDivisore As Integer = 97
        Public Property Abi() As String
            Get
                Return mAbi
            End Get
            Set(value As String)
                mAbi = NormalizzaDati(value, L_ABI)
            End Set
        End Property
        Public Property Cab() As String
            Get
                Return mCab
            End Get
            Set(value As String)
                mCab = NormalizzaDati(value, L_CAB)
            End Set
        End Property
        Public Property ContoCorrente() As String
            Get
                Return mContoCorrente
            End Get
            Set(value As String)
                mContoCorrente = value
            End Set
        End Property
        Public Property Cin() As String
            Get
                Return mCin
            End Get
            Set(value As String)
                mCin = value
            End Set
        End Property
        Public Property BBAN() As String
            Get
                Return mBBAN
            End Get
            Set(value As String)
                mBBAN = value
            End Set
        End Property
        Public Property IBAN() As String
            Get
                Return mIBAN
            End Get
            Set(value As String)
                mIBAN = value
            End Set
        End Property
        Public Property CheckDigitIBAN() As String
            Get
                Return mCheckDigitIBAN
            End Get
            Set(value As String)
                mCheckDigitIBAN = value
            End Set
        End Property
        Public Property Paese() As String
            Get
                Return mPaese
            End Get
            Set(value As String)
                mPaese = value
            End Set
        End Property
        Public Property NormalizzaConto() As Boolean
            Get
                Return mNormalizzaConto
            End Get
            Set(value As Boolean)
                mNormalizzaConto = value
            End Set
        End Property
        Public Property Divisore() As Integer
            Get
                Return mDivisore
            End Get
            Set(value As Integer)
                mDivisore = value
            End Set
        End Property

        Private Function NormalizzaDati(codice As String, lunghezza As Integer) As String
            codice = codice.Trim()
            Dim k As Integer = codice.Length
            If k < lunghezza Then
                codice = "".PadLeft(lunghezza, "0"c) & codice
                k += lunghezza
            End If
            k -= lunghezza
            If k < 0 Then
                k = 0
            End If
            codice = codice.Substring(k)
            Return codice
        End Function
        Public Function NormalizzaContoCorrente(contoCorrenteValue As String) As String
            contoCorrenteValue = contoCorrenteValue.Trim()
            Dim k As Integer = contoCorrenteValue.IndexOf(" "c)
            While k >= 0
                contoCorrenteValue = contoCorrenteValue.Remove(k, 1)
                k = contoCorrenteValue.IndexOf(" "c)
            End While
            Return NormalizzaDati(contoCorrenteValue, L_CONTO)
        End Function
        Public Function VerificaCin(cinCode As String) As Boolean
            Return (cinCode = CalcolaCin())
        End Function


        Public Function CalcolaCin() As String
            ' costanti e variabili per calcolo pesi
            Const numeri As String = "0123456789"
            Const lettere As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ-. "
            Const DIVISORE As Integer = 26
            Dim listaPari As Integer() = {0, 1, 2, 3, 4, 5,
             6, 7, 8, 9, 10, 11,
             12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23,
             24, 25, 26, 27, 28}
            Dim listaDispari As Integer() = {1, 0, 5, 7, 9, 13,
             15, 17, 19, 21, 2, 4,
             18, 20, 11, 3, 6, 8,
             12, 14, 16, 10, 22, 25,
             24, 23, 27, 28, 26}
            ' normalizzazione dati           
            If Me.Abi.Length <> L_ABI Then
                mAbi = NormalizzaDati(mAbi, L_ABI)
            End If
            If Me.Cab.Length <> L_CAB Then
                mCab = NormalizzaDati(mCab, L_CAB)
            End If
            If Me.NormalizzaConto Then
                Me.ContoCorrente = NormalizzaContoCorrente(Me.ContoCorrente)
            End If
            If Me.ContoCorrente.Length <> L_CONTO Then
                Me.ContoCorrente = Me.ContoCorrente.PadRight(L_CONTO)
            End If
            ' codice normalizzato
            Dim codice As String = Convert.ToString(Me.Abi & Me.Cab) & Me.ContoCorrente
            ' calcolo valori caratteri
            Dim somma As Integer = 0
            Dim c As Char() = codice.ToUpper().ToCharArray()
            For k As Integer = 0 To (L_CONTO + L_ABI + L_CAB) - 1
                Dim i As Integer = numeri.IndexOf(c(k))
                If i < 0 Then
                    i = lettere.IndexOf(c(k))
                End If
                ' se ci sono caratteri errati usciamo con un valore
                ' impossibile da trovare sul cin
                If i < 0 Then
                    Return Environment.NewLine
                End If
                If (k Mod 2) = 0 Then
                    ' valore dispari
                    somma += listaDispari(i)
                Else
                    ' valore pari
                    somma += listaPari(i)
                End If
            Next
            Return lettere.Substring(somma Mod DIVISORE, 1)
        End Function
        Public Function CheckIBAN() As Boolean
            If mIBAN <> "" Then
                Return CheckIBAN(codice)
            Else
                Return False
            End If
        End Function
        Public Function CheckIBAN(pIBAN As String) As Boolean
            Dim codice As String = NormalizzaIBAN(pIBAN)
            If Not CheckLength(codice) Then
                Return False
            End If
            codice = codice.Substring(4) + codice.Substring(0, 4)
            Dim r As String() = Funzioni.DivisioneIntera(AlfaToNumber(codice), Divisore.ToString())
            Dim resto As Integer = Integer.Parse(r(1))
            Return (resto = 1)
        End Function
        Public Function CalcolaBBAN() As String
            Dim codice As String
            If mIBAN <> "" Then
                codice = mIBAN
            Else
                Dim s As String = mCin
                If s = "" Then
                    s = CalcolaCin()
                End If
                codice = Convert.ToString(Convert.ToString(s & NormalizzaDati(mAbi, L_ABI)) & NormalizzaDati(mCab, L_CAB)) & NormalizzaContoCorrente(mContoCorrente)
            End If
            Return codice
        End Function
        Public Function CalcolaIBAN() As String
            Dim codice As String
            If mBBAN <> "" Then
                codice = mBBAN
            Else
                codice = CalcolaBBAN()
            End If
            Return CalcolaIBAN(mPaese, codice)
        End Function
        Public Function CalcolaCheckIBAN(pPaese As String, pBBAN As String) As String
            Return CalcolaIBAN(pPaese, pBBAN).Substring(2, 2)
        End Function
        Public Function CalcolaIBAN(pPaese As String, pBBAN As String) As String
            pBBAN = NormalizzaIBAN(pBBAN)
            Dim codice As String = Convert.ToString(pPaese & Convert.ToString("00")) & pBBAN
            codice = codice.Substring(4) + codice.Substring(0, 4)
            Dim numcode As String = AlfaToNumber(codice)
            Dim r As String() = Funzioni.DivisioneIntera(numcode, Divisore.ToString())
            Dim resto As Integer = Integer.Parse(r(1))
            resto = (Divisore + 1) - resto
            Return Convert.ToString(pPaese & resto.ToString("00")) & pBBAN
        End Function
        Public Function NormalizzaIBAN(pCodice As String) As String
            Const alfanum As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
            Dim sb As New StringBuilder()
            For Each c As Char In pCodice
                If alfanum.IndexOf(c) <> -1 Then
                    sb.Append(c)
                End If
            Next
            Return sb.ToString()
        End Function
        Private Function CheckLength(pCodice As String) As Boolean
            Return True
        End Function
        Private Function AlfaToNumber(pCodice As String) As String
            Const alfachars As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
            Dim sb As New StringBuilder()
            For Each c As Char In pCodice
                Dim k As Integer = alfachars.IndexOf(c)
                If k <> -1 Then
                    sb.Append(k + 10)
                Else
                    sb.Append(c)
                End If
            Next
            Return sb.ToString()
        End Function
    End Class
End Namespace
Namespace LibCs
    Public NotInheritable Class Funzioni
        Public Sub New()

        End Sub
        Public Shared Function DivisioneIntera(pDividendo As String, pDivisore As String) As String()
            Dim Intero As New StringBuilder()
            Dim Resto As New StringBuilder()
            Dim divisore As Double
            If Not Double.TryParse(pDivisore, System.Globalization.NumberStyles.[Integer], System.Globalization.NumberFormatInfo.InvariantInfo, divisore) Then
                Throw New Exception("Divisore errato")
            End If
            For x As Integer = 0 To pDividendo.Length - 1
                Resto.Append(pDividendo.Substring(x, 1))
                Dim s As String = Resto.ToString()
                Dim dividendo As Double = 0
                If Not Double.TryParse(s, NumberStyles.[Integer], NumberFormatInfo.InvariantInfo, dividendo) Then
                    Throw New Exception("Dividendo Errato")
                End If
                Dim volte As Integer = 0
                While dividendo >= divisore
                    dividendo -= divisore
                    volte += 1
                End While
                Intero.Append(volte)
                Dim r As String = dividendo.ToString("0")
                Resto = New StringBuilder()
                Resto.Append(r)
            Next
            Dim result As String() = New String(1) {}
            result(1) = Resto.ToString()
            result(0) = Intero.ToString()
            While result(0).StartsWith("0")
                result(0) = result(0).Substring(1)
            End While
            If result(0) = "" Then
                result(0) = "0"
            End If
            Return result
        End Function
    End Class
End Namespace
Namespace CM
    Public Enum immagineMessaggio
        alert = 1
        completo = 2
        conferma = 3
    End Enum

    Public Class datiConnessione
        Public Property Connessione As Oracle.DataAccess.Client.OracleConnection
        Private trans As Oracle.DataAccess.Client.OracleTransaction = Nothing
        Private cmd As Oracle.DataAccess.Client.OracleCommand
        Public Property Transazione As Oracle.DataAccess.Client.OracleTransaction


        ''' <summary>
        ''' Apre la connessione(se chiusa) e Inizializza la transazione
        ''' </summary>
        ''' <param name="par"></param>
        ''' <remarks></remarks>
        Public Sub New(ByVal par As [Global])
            Me.Connessione = par.OracleConn
            Me.Transazione = par.myTrans
            If Me.Connessione.State = Data.ConnectionState.Closed Then
                apri(True)
            Else
                Transazione = Connessione.BeginTransaction
            End If


        End Sub

        ''' <summary>
        ''' Apre la connessione, e su richiesta la transazione
        ''' </summary>
        ''' <param name="par"></param>
        ''' <param name="eseguiApertura"></param>
        ''' <param name="apriTrnasazione"></param>
        ''' <remarks></remarks>

        Public Sub New(ByRef par As [Global], ByVal eseguiApertura As Boolean, ByVal apriTrnasazione As Boolean)
            Me.Connessione = par.OracleConn
            Me.Transazione = par.myTrans
            If eseguiApertura = True Then
                If Me.Connessione.State = Data.ConnectionState.Closed Then
                    apri()
                End If
            End If
            If apriTrnasazione = True Then
                Transazione = Connessione.BeginTransaction
                par.myTrans = Transazione
            End If
            Me.cmd = Connessione.CreateCommand
            par.cmd = cmd
        End Sub

        ''' <summary>
        ''' Inizializza le variabili di CONNESSIONE e TRANSAZIONE
        ''' </summary>
        ''' <param name="Connessione"></param>
        ''' <param name="Transazione"></param>
        ''' <remarks></remarks>
        Public Sub New(ByVal Connessione As Oracle.DataAccess.Client.OracleConnection, ByVal Transazione As Oracle.DataAccess.Client.OracleTransaction)
            Me.Connessione = Connessione
            Me.Transazione = Transazione
        End Sub
        ''' <summary>
        ''' Chiude la connessione, se sotto transazione esegue COMMIT/ROLLBACK
        ''' </summary>
        ''' <param name="eseguiCommit"></param>
        ''' <remarks></remarks>

        Public Sub chiudi(Optional ByVal eseguiCommit As Boolean = False)

            If Connessione.State = Data.ConnectionState.Open Then
                If Not IsNothing(Transazione) Then
                    If eseguiCommit = True Then
                        Transazione.Commit()
                    Else
                        Transazione.Rollback()
                    End If
                    Transazione.Dispose()
                    Transazione = Nothing
                End If
                Connessione.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            End If

        End Sub

        Public Sub chiudiTransazione(ByVal eseguiCommit As Boolean)
            If Connessione.State = Data.ConnectionState.Open Then
                If Not IsNothing(Transazione) Then
                    If eseguiCommit = True Then
                        Transazione.Commit()
                    Else
                        Transazione.Rollback()
                    End If
                    Transazione.Dispose()
                    Transazione = Nothing
                End If

            End If

        End Sub

        Public Function apriTransazione() As OracleCommand
            If Connessione.State = Data.ConnectionState.Open Then
                Transazione = Connessione.BeginTransaction()
            End If
            Me.cmd = Connessione.CreateCommand
            Me.cmd.BindByName = True
            Return (Me.cmd)
        End Function

        Public Function apri(Optional ByVal apriTransazione As Boolean = False) As OracleCommand
            If Connessione.State = Data.ConnectionState.Closed Then
                Connessione.Open()
            End If
            If apriTransazione = True Then
                Transazione = Connessione.BeginTransaction()
            End If
            Me.cmd = Connessione.CreateCommand
            Me.cmd.BindByName = True
            Return (Me.cmd)
        End Function
        ''' <summary>Rimappa la Connessione e la Transazione; Ripristina il par.cmd con il comando della Connessione/Transazione esistente</summary>
        ''' <param name="par"></param>
        Public Sub RiempiPar(ByRef par As CM.Global)

            par.OracleConn = Me.Connessione
            par.myTrans = Me.Transazione
            par.cmd = Me.cmd
            par.cmd.BindByName = True
            Me.apri(False)
        End Sub

        Public Sub PulisciPool()
            Oracle.DataAccess.Client.OracleConnection.ClearPool(Me.Connessione)
        End Sub
    End Class


    Public Class [Global]
        Inherits System.Web.HttpApplication
        Public Const StCondominio = 105
        Const _maxItems As Integer = 100
        Private isGrouping As Boolean = False
        Public Function SelectCount() As Integer
            Return _maxItems
        End Function
        Public Enum TipoRigaProp
            Riga = 0
            Rownum = 1
        End Enum


        Public OracleConn As Oracle.DataAccess.Client.OracleConnection = New Oracle.DataAccess.Client.OracleConnection(System.Configuration.ConfigurationManager.AppSettings("ConnectionString"))
        Public myTrans As Oracle.DataAccess.Client.OracleTransaction
        Public cmd As New Oracle.DataAccess.Client.OracleCommand() With {.CommandType = Data.CommandType.Text, .BindByName = True}
        Public NumeroConnessione As String = ""

        'Public LicenzaHtmlToPdf As String = "GzAqOyM7Ii47LTUrOygqNSopNSIiIiI="
        'Public LicenzaPdfMerge As String = "5c7UxdzF3cXWy9XF1tTL1NfL3Nzc3A=="
        Public LicenzaHtmlToPdf As String = "GjErOisrOikuLjojNCo6KSs0Kyg0IyMjIw=="
        Public LicenzaPdfMerge As String = "GjErOisrOikuLjojNCo6KSs0Kyg0IyMjIw=="


        'MARIO
        Public lstAppalti As New System.Collections.Generic.List(Of Appalti)


        '********************PUCCIA**************************
        Public lstCompensi As New System.Collections.Generic.List(Of CompensiMensili)
        Public lstCompetenze As New System.Collections.Generic.List(Of Competenze)
        '******************END PUCCIA************************


        'Dim orConnection As Oracle.DataAccess.Client.OracleConnection
        'Public OracleCmd As New Oracle.DataAccess.Client.OracleCommand

        'Public GRiga As String
        'Public GLista As String
        'Public GSpese As String
        'Public GProgressivo As String
#Region "PeppePMethod"

        ''' <summary>
        ''' Gestisce il dato da passare in un command text to DB
        ''' </summary>
        ''' <param name="value">Valore da passare al comando</param>
        ''' <param name="isString">Definire se è una stringa aggiungerà automaticamente ' '</param>
        ''' <param name="isDate">Definire se è una data, la aggiusta al formato yyyyMMdd</param>
        ''' <param name="nullToMUno">Torna il valore null se il valore passato è -1 (utile solo in caso di combobox) </param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function insDbValue(ByVal value As String, ByVal isString As Boolean, Optional isDate As Boolean = False, Optional nullToMUno As Boolean = False, Optional isCheckBox As Boolean = False, Optional chkBox As Boolean = False) As String
            insDbValue = "null"
            If String.IsNullOrEmpty(Trim(value)) Then
                If isString = True Then
                    insDbValue = "''"
                End If
            Else
                If nullToMUno = True Then
                    If value <> "-1" Then
                        insDbValue = value
                        If isString = True Then
                            insDbValue = "'" & PulisciStrSql(insDbValue) & "'"
                        Else
                            insDbValue = value
                        End If
                    End If
                Else
                    If isDate = True Then
                        value = AggiustaData(value)
                    End If
                    insDbValue = value
                    If isString = True Then
                        insDbValue = "'" & PulisciStrSql(insDbValue) & "'"
                    Else
                        If insDbValue.Contains(".") Then
                            insDbValue = insDbValue.Replace(".", "")
                        End If
                        insDbValue = VirgoleInPunti(insDbValue)

                    End If
                    If isCheckBox = True Then
                        If chkBox = True Then
                            insDbValue = "1"
                        Else
                            insDbValue = "0"
                        End If

                    End If
                End If
            End If
            Return insDbValue
        End Function
        Public Sub caricaComboBox(ByVal query As String, ByVal combobox As DropDownList, ByVal value As String, ByVal descrizione As String, Optional ByVal spazio_vuoto As Boolean = True, Optional ByVal valueSpVuoto As String = "-1", Optional ByVal itemNullo As String = "- - -")

            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = query
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            Dim dt As New Data.DataTable
            da.Fill(dt)
            da.Dispose()
            Dim i As Integer = 0

            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
                'aggiunto da Max, perchè rimanevano appese connessioni
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
            combobox.Items.Clear()

            If spazio_vuoto Then
                combobox.Items.Add(New ListItem(itemNullo, valueSpVuoto))
                i = 1

            End If
            For Each row As Data.DataRow In dt.Rows
                combobox.Items.Add(New ListItem(IfNull(row.Item(descrizione), " "), IfNull(row.Item(value), -1)))
                combobox.Items(i).Attributes.Add("title", row.Item(descrizione).ToString)
                i += 1
            Next
        End Sub
        Public Function ctrlIsSolidarieta(ByVal idTipoPag As String) As Boolean
            ctrlIsSolidarieta = False
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = "SELECT COUNT(ID) FROM SISCOM_MI.TIPO_PAG_PARZ WHERE ID = " & idTipoPag & " AND NVL(FL_NO_CTRL_DATE,0) = 1"
            Dim conta As Integer = IfNull(cmd.ExecuteScalar, 0)
            If conta > 0 Then
                ctrlIsSolidarieta = True
            End If
            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
                'aggiunto da Max, perchè rimanevano appese connessioni
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If


        End Function

#End Region
#Region "MarcoMethod"
        Function FindIndexColRadGrid(ByVal dgv As RadGrid, ByVal nameCol As String) As Integer
            FindIndexColRadGrid = -1
            Dim Indice As Integer = 0
            Try
                For Each c As GridColumn In dgv.Columns
                    If c.GetType.Name = "GridBoundColumn" Then
                        If String.Equals(nameCol, DirectCast(c, GridBoundColumn).DataField, StringComparison.InvariantCultureIgnoreCase) Then
                            FindIndexColRadGrid = Indice
                            Exit For
                        End If
                    ElseIf c.GetType.Name = "GridTemplateColumn" Then
                        If String.Equals(nameCol, DirectCast(c, GridTemplateColumn).HeaderText, StringComparison.InvariantCultureIgnoreCase) Then
                            FindIndexColRadGrid = Indice
                            Exit For
                        End If
                    ElseIf c.GetType.Name = "GridHyperLinkColumn" Then
                        If String.Equals(nameCol, DirectCast(c, GridHyperLinkColumn).HeaderText, StringComparison.InvariantCultureIgnoreCase) Then
                            FindIndexColRadGrid = Indice
                            Exit For
                        End If
                    ElseIf c.GetType.Name = "GridNumericColumn" Then
                        If String.Equals(nameCol, DirectCast(c, GridNumericColumn).DataField, StringComparison.InvariantCultureIgnoreCase) Then
                            FindIndexColRadGrid = Indice
                            Exit For
                        End If
                    End If
                    Indice = Indice + 1
                Next
            Catch ex As Exception
                Return FindIndexColRadGrid
            End Try
            Return FindIndexColRadGrid
        End Function
        Public Sub SetModifyOggettoPage(ByVal Oggetto As Control, Optional ByVal HiddenFieldModify As String = "frmModify")
            Select Case Oggetto.GetType.Name.ToString
                Case "CheckBox"
                    If IsNothing(CType(Oggetto, CheckBox).Attributes.Item("onchange")) Then
                        CType(Oggetto, CheckBox).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadioButtonList"
                    If IsNothing(CType(Oggetto, RadioButtonList).Attributes.Item("onchange")) Then
                        CType(Oggetto, RadioButtonList).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadioButton"
                    If IsNothing(CType(Oggetto, RadioButton).Attributes.Item("onchange")) Then
                        CType(Oggetto, RadioButton).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadTextBox"
                    If IsNothing(CType(Oggetto, Telerik.Web.UI.RadTextBox).Attributes.Item("onchange")) Then
                        CType(Oggetto, Telerik.Web.UI.RadTextBox).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "TextBox"
                    If IsNothing(CType(Oggetto, TextBox).Attributes.Item("onchange")) Then
                        CType(Oggetto, TextBox).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadComboBox"
                    If IsNothing(CType(Oggetto, Telerik.Web.UI.RadComboBox).Attributes.Item("onchange")) Then
                        CType(Oggetto, Telerik.Web.UI.RadComboBox).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadAutoCompleteBox"
                    If IsNothing(CType(Oggetto, Telerik.Web.UI.RadAutoCompleteBox).Attributes.Item("onchange")) Then
                        CType(Oggetto, Telerik.Web.UI.RadAutoCompleteBox).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadMonthYearPicker"
                    If IsNothing(CType(Oggetto, Telerik.Web.UI.RadMonthYearPicker).Attributes.Item("onchange")) Then
                        CType(Oggetto, Telerik.Web.UI.RadMonthYearPicker).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadDatePicker"
                    If IsNothing(CType(Oggetto, Telerik.Web.UI.RadDatePicker).Attributes.Item("onchange")) Then
                        CType(Oggetto, Telerik.Web.UI.RadDatePicker).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
                Case "RadNumericTextBox"
                    If IsNothing(CType(Oggetto, Telerik.Web.UI.RadNumericTextBox).Attributes.Item("onchange")) Then
                        CType(Oggetto, Telerik.Web.UI.RadNumericTextBox).Attributes.Add("onchange", "javascript:document.getElementById('" & HiddenFieldModify & "').value='1';")
                    End If
            End Select
        End Sub
        Public Sub SetSolaLetturaOggettoPage(ByVal Oggetto As Control, Optional ByVal Disabilita As Boolean = True, Optional ByVal DaModificaAVisualizza As Boolean = False, Optional ByVal Nascondi As Boolean = False)
            Select Case Oggetto.GetType.Name.ToString
                Case "Button"
                    If DaModificaAVisualizza Then
                        CType(Oggetto, Button).Text = "Visualizza"
                        CType(Oggetto, Button).ToolTip = "Visualizza"
                    Else
                        If Disabilita Then
                            CType(Oggetto, Button).Visible = False
                        Else
                            CType(Oggetto, Button).Visible = True
                        End If
                    End If
                Case "RadButton"
                    If DaModificaAVisualizza Then
                        CType(Oggetto, Telerik.Web.UI.RadButton).Text = "Visualizza"
                        CType(Oggetto, Telerik.Web.UI.RadButton).ToolTip = "Visualizza"
                    Else
                        If Disabilita Then
                            CType(Oggetto, Telerik.Web.UI.RadButton).Visible = False
                        Else
                            CType(Oggetto, Telerik.Web.UI.RadButton).Visible = True
                        End If
                    End If
                Case "RadGrid"
                    If Nascondi Then
                        CType(Oggetto, Telerik.Web.UI.RadGrid).Visible = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadGrid).Visible = True
                        If Disabilita Then
                            CType(Oggetto, Telerik.Web.UI.RadGrid).Enabled = False
                        Else
                            CType(Oggetto, Telerik.Web.UI.RadGrid).Enabled = True
                        End If
                    End If
                Case "RadTextBox"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadTextBox).ReadOnly = True
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadTextBox).ReadOnly = False
                    End If
                Case "RadComboBox"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadComboBox).Enabled = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadComboBox).Enabled = True
                    End If
                Case "RadAutoCompleteBox"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadAutoCompleteBox).Enabled = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadAutoCompleteBox).Enabled = True
                    End If
                Case "RadMonthYearPicker"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadMonthYearPicker).Enabled = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadMonthYearPicker).Enabled = True
                    End If
                Case "RadDatePicker"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadDatePicker).Enabled = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadDatePicker).Enabled = True
                    End If
                Case "RadNumericTextBox"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadNumericTextBox).ReadOnly = True
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadNumericTextBox).ReadOnly = False
                    End If
                Case "RadTab"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadTab).Visible = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadTab).Visible = True
                    End If
                Case "HtmlTable"
                    If Disabilita Then
                        CType(Oggetto, HtmlTable).Visible = False
                    Else
                        CType(Oggetto, HtmlTable).Visible = True
                    End If
                Case "RadTabStrip"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadTabStrip).Visible = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadTabStrip).Visible = True
                    End If
                Case "RadMultiPage"
                    If Disabilita Then
                        CType(Oggetto, Telerik.Web.UI.RadMultiPage).Visible = False
                    Else
                        CType(Oggetto, Telerik.Web.UI.RadMultiPage).Visible = True
                    End If
                Case "CheckBox"
                    If Disabilita Then
                        CType(Oggetto, CheckBox).Enabled = False
                    Else
                        CType(Oggetto, CheckBox).Enabled = True
                    End If
                Case "RadioButtonList"
                    If Disabilita Then
                        CType(Oggetto, RadioButtonList).Enabled = False
                    Else
                        CType(Oggetto, RadioButtonList).Enabled = True
                    End If
            End Select
        End Sub
        Public Enum TipoNotifica
            Emergenza = 4
            Urgenza = 3
            UrgenzaDifferibile = 2
            UrgenzaMinore = 1
            NessunUrgenza = 0
            Alert = -1
        End Enum
        Public Function CreaTabellaNotifica(ByVal TestoIniziale As String, ByVal TipoNotifica As TipoNotifica, ByVal TestoNotifica As String, ByVal FunzioneNotifica As String, Optional ByVal Loading As Boolean = True) As String
            CreaTabellaNotifica = ""
            If Not String.IsNullOrEmpty(Trim(TestoIniziale)) Then
                CreaTabellaNotifica = TestoIniziale
            End If
            FunzioneNotifica = FunzioneNotifica.Replace("'", Chr(34))
            CreaTabellaNotifica &= "<table>"
            CreaTabellaNotifica &= "<tr>"
            CreaTabellaNotifica &= "<td style='width: 17px;'>"
            Select Case TipoNotifica
                Case TipoNotifica.Emergenza
                    CreaTabellaNotifica &= "<img alt='Emergenza' src='../StandardTelerik/Immagini/AlertPoint/rosso.png' />"
                Case TipoNotifica.Urgenza
                    CreaTabellaNotifica &= "<img alt='Urgenza' src='../StandardTelerik/Immagini/AlertPoint/giallo.png' />"
                Case TipoNotifica.UrgenzaDifferibile
                    CreaTabellaNotifica &= "<img alt='Urgenza Differibile' src='../StandardTelerik/Immagini/AlertPoint/verde.png' />"
                Case TipoNotifica.UrgenzaMinore
                    CreaTabellaNotifica &= "<img alt='Urgenza Minore' src='../StandardTelerik/Immagini/AlertPoint/blu.png' />"
                Case TipoNotifica.NessunUrgenza
                    CreaTabellaNotifica &= "<img alt='Nessun Urgenza' src='../StandardTelerik/Immagini/AlertPoint/bianco.png' />"
                Case TipoNotifica.Alert
                    CreaTabellaNotifica &= "<img alt='Attenzione' src='../StandardTelerik/Immagini/Alert.gif' />"
            End Select
            CreaTabellaNotifica &= "</td>"
            CreaTabellaNotifica &= "<td style='width: 5px;'>&nbsp;</td>"
            CreaTabellaNotifica &= "<td>"
            Dim LoadingText As String = ""
            If Loading Then LoadingText = "loadingMenu();"
            CreaTabellaNotifica &= "<a href='#' onclick='javascript:" & LoadingText & FunzioneNotifica & "'>" & TestoNotifica & "</a>"
            CreaTabellaNotifica &= "</td>"
            CreaTabellaNotifica &= "</tr>"
            CreaTabellaNotifica &= "</table>"
        End Function
        Public Sub EffettuaDownloadFile(ByVal Pagina As Page, ByVal NomeFile As String, Optional ByVal Percorso As String = "../FileTemp/")
            Dim ScriptDownload As String = "avvio(); " _
                                         & "function avvio() { " _
                                         & "if (document.getElementById('HFForceNoLoadingPanel')) { " _
                                         & "document.getElementById('HFForceNoLoadingPanel').value = 1; " _
                                         & "}; " _
                                         & "var altezza = (screen.height / 2) - 50; " _
                                         & "var larghezza = (screen.width / 2) - 100; " _
                                         & "var a = window.open('" & Percorso & NomeFile & "','_blank','top='+altezza+',left='+larghezza+',height=100,width=200'); " _
                                         & "};"
            ScriptManager.RegisterStartupScript(Pagina, Pagina.[GetType](), "Download" & Format(Now, "ddMMyyyyHHmmss"), ScriptDownload, True)
        End Sub
        Public Enum OrdiniIntervento
            Ordine = 1
            Intervento = 2
        End Enum
        Public Enum PreventivoConsuntivo
            Preventivo = 1
            Consuntivo = 2
        End Enum
        Public Enum Ritenuta
            Sì = 1
            No = 0
        End Enum
        ''' <summary>
        ''' Calcolo di tutti gli importi della manutenzione
        ''' </summary>
        ''' <param name="OrdiniIntervento">Determina il calcolo sull'ordine o sul singolo intervento</param>
        ''' <param name="PreventivoConsuntivo">Determina il calcolo per il preventivo o il consuntivo</param>
        ''' <param name="identificativo">ID dell'ordine o dell'intervento</param>
        ''' <param name="ordineNetto">Su Milano 0 di default</param>
        ''' <param name="iva">IVA da sovrascrivere</param>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Public Function CalcoloImportiOrdine(ByVal OrdiniIntervento As OrdiniIntervento, ByVal PreventivoConsuntivo As PreventivoConsuntivo, ByVal identificativo As Int64, ByVal ordineNetto As Int64, Optional ByVal iva As Int64 = -1) As Generic.Dictionary(Of String, Decimal)
            Dim DizionarioValoriOrdine As New Generic.Dictionary(Of String, Decimal)
            'APERTURA CONNESSIONE
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If

            '1) PASSAGGIO DELL'ORDINE
            '2) PASSAGGIO DELL'INTERVENTO
            Dim idOrdine As Int64
            Dim condizioneRicerca As String = ""
            If OrdiniIntervento = 1 Then
                condizioneRicerca = " AND MANUTENZIONI.ID=" & identificativo
                idOrdine = identificativo
            ElseIf OrdiniIntervento = 2 Then
                condizioneRicerca = " AND MANUTENZIONI_INTERVENTI.ID=" & identificativo
                cmd.CommandText = "SELECT ID_MANUTENZIONE FROM SISCOM_MI.MANUTENZIONI_INTERVENTI WHERE ID=" & identificativo
                idOrdine = IfNull(cmd.ExecuteScalar, 0)
            Else
                If ConOpenNow = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
                Return DizionarioValoriOrdine
            End If

            'TOTALI GENERALI
            Dim importoRimborso As Decimal = 0
            Dim totaleRimborso As Decimal = 0
            Dim importoPenale As Decimal = 0
            Dim totaleDefinitivo As Decimal = 0

            If PreventivoConsuntivo = 1 Then
                'PREVENTIVO
                Dim percentualeNonSoggettaRibassoPreventivato As Decimal = 0
                Dim importoPreventivato As Decimal = 0
                Dim percentualeIVAPreventivato As Decimal = 0
                Dim ritLeggePreventivato As Int64 = 0
                Dim oneriSicurezzaPreventivato As Decimal = 0
                Dim percentualeOneriPreventivato As Decimal = 0
                Dim percentualeScontoPreventivato As Decimal = 0
                Dim importoEsclusiOneriPreventivato As Decimal = 0
                Dim importoRibassatoEsclusiOneriPreventivato As Decimal = 0
                Dim risultato3Preventivato As Decimal = 0
                Dim risultato4Preventivato As Decimal = 0
                Dim risultato5Preventivato As Decimal = 0
                Dim ribassoDastaPreventivatoSoggetto As Decimal = 0
                Dim ribassoDastaPreventivatoNonSoggetto As Decimal = 0
                Dim ribassoDastaPreventivato As Decimal = 0
                Dim ritenutaPreventivato As Decimal = 0
                Dim ritenutaIvataPreventivato As Decimal = 0
                Dim ivaPreventivato As Decimal = 0
                Dim ImportoNonSoggettoRibassoPreventivato As Decimal = 0
                'TOTALE PREVENTIVO
                Dim totaleOneriSicurezzaPreventivato As Decimal = 0
                Dim totaleAstaPreventivato As Decimal = 0
                Dim totaleimportoRibassatoEsclusiOneriPreventivato As Decimal = 0
                Dim totaleImportoEsclusiOneriPreventivato As Decimal = 0
                Dim totaleRitenutaIvataPreventivato As Decimal = 0
                Dim totaleRisultato3Preventivato As Decimal = 0
                Dim totaleIvaPreventivato As Decimal = 0
                Dim totaleRisultato4Preventivato As Decimal = 0
                Dim totaleImportoPreventivato As Decimal = 0
                Dim totaleNonSoggettoRibassoPreventivato As Decimal = 0
                'PREVENTIVO
                cmd.CommandText = " SELECT MANUTENZIONI_INTERVENTI.IMPORTO_PRESUNTO AS IMPORTO_PREVENTIVATO," _
                    & " MANUTENZIONI.IVA_CONSUMO AS IVA, " _
                    & " APPALTI.FL_RIT_LEGGE, " _
                    & " APPALTI_LOTTI_SERVIZI.PERC_ONERI_SIC_CON AS ONERI, " _
                    & " APPALTI_LOTTI_SERVIZI.SCONTO_CONSUMO AS SCONTO, " _
                    & " 0 AS IMPORTO_RIMBORSO " _
                    & " FROM SISCOM_MI.MANUTENZIONI,SISCOM_MI.MANUTENZIONI_INTERVENTI,SISCOM_MI.APPALTI,SISCOM_MI.APPALTI_LOTTI_SERVIZI  " _
                    & " WHERE MANUTENZIONI.ID=MANUTENZIONI_INTERVENTI.ID_MANUTENZIONE " _
                    & " AND MANUTENZIONI.ID_APPALTO=APPALTI.ID " _
                    & " AND APPALTI.ID=APPALTI_LOTTI_SERVIZI.ID_APPALTO " _
                    & " AND MANUTENZIONI.ID_PF_VOCE_IMPORTO=APPALTI_LOTTI_SERVIZI.ID_PF_VOCE_IMPORTO " _
                    & condizioneRicerca
                Dim lettore As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                While lettore.Read
                    'PREVENTIVO
                    If ordineNetto = 1 Then
                        importoPreventivato = Math.Round(IfNull(lettore("IMPORTO_PREVENTIVATO"), 0) + (IfNull(lettore("IMPORTO_PREVENTIVATO"), 0) * IfNull(lettore("ONERI"), 0) / 100), 2)
                    Else
                        importoPreventivato = IfNull(lettore("IMPORTO_PREVENTIVATO"), 0)
                    End If
                    totaleImportoPreventivato += importoPreventivato

                    importoRimborso = IfNull(lettore("IMPORTO_RIMBORSO"), 0)
                    totaleRimborso += importoRimborso

                    percentualeScontoPreventivato = IfNull(lettore("SCONTO"), 0)
                    percentualeOneriPreventivato = IfNull(lettore("ONERI"), 0)
                    percentualeIVAPreventivato = IfNull(lettore("IVA"), 0)
                    ritLeggePreventivato = IfNull(lettore("FL_RIT_LEGGE"), 0)

                    'A) Importo
                    'V) perc_oneri
                    'Y) perc_sconto
                    'Z) perc_iva

                    'B) A-(A*100)/(100+V) ONERI di SICUREZZA= (IMPORTO*perc_oneri)/100 ora diventa (IMPORTO*100)/(100+perc_oneri)
                    oneriSicurezzaPreventivato = Math.Round(importoPreventivato - ((importoPreventivato * 100) / (100 + percentualeOneriPreventivato)), 2)
                    totaleOneriSicurezzaPreventivato += oneriSicurezzaPreventivato

                    ImportoNonSoggettoRibassoPreventivato = Math.Round(importoPreventivato - ((importoPreventivato * 100) / (100 + percentualeNonSoggettaRibassoPreventivato)), 2)
                    totaleNonSoggettoRibassoPreventivato += ImportoNonSoggettoRibassoPreventivato


                    'C) A-B LORDO senza ONERI= IMPORTO-oneri
                    importoEsclusiOneriPreventivato = Math.Round(importoPreventivato - oneriSicurezzaPreventivato - ImportoNonSoggettoRibassoPreventivato, 2)
                    totaleImportoEsclusiOneriPreventivato += importoEsclusiOneriPreventivato

                    'D) RIBASSO ASTA= (LORDO senza oneri*perc_sconto)/100
                    ribassoDastaPreventivato = Math.Round((importoEsclusiOneriPreventivato * percentualeScontoPreventivato) / 100, 2)
                    totaleAstaPreventivato += ribassoDastaPreventivato

                    'E) C-D NETTO senza ONERI= (LORDO senza oneri-asta)
                    importoRibassatoEsclusiOneriPreventivato = Math.Round(importoEsclusiOneriPreventivato - ribassoDastaPreventivato, 2)
                    totaleimportoRibassatoEsclusiOneriPreventivato += importoRibassatoEsclusiOneriPreventivato

                    'AGGIUNTO
                    'G) E-F+B  NETTO con ONERI= (IMPORTO-asta) invece diventa NETTO SENZA ONERI - RITENUTA + ONERI  (risultato2-ritenuta+oneri)
                    risultato3Preventivato = Math.Round(importoRibassatoEsclusiOneriPreventivato + oneriSicurezzaPreventivato + ImportoNonSoggettoRibassoPreventivato, 2)
                    totaleRisultato3Preventivato += risultato3Preventivato

                    'F) ALIQUOTA 0,5% sul NETTO senza ONERI ora in data 12/05/2011 la ritenuta va calcolato con gli ONERI
                    If ritLeggePreventivato = 1 Then
                        ritenutaPreventivato = Math.Round((risultato3Preventivato * 0.5) / 100, 2) '(risultato2 * 0.5) / 100
                        ritenutaIvataPreventivato = Math.Round((ritenutaPreventivato + ((ritenutaPreventivato * percentualeIVAPreventivato) / 100)), 2)
                    Else
                        ritenutaPreventivato = 0
                        ritenutaIvataPreventivato = 0
                    End If
                    totaleRitenutaIvataPreventivato += ritenutaIvataPreventivato

                    'G) E-F+B  NETTO con ONERI= (IMPORTO-asta) invece diventa NETTO SENZA ONERI - RITENUTA + ONERI  (risultato2-ritenuta+oneri)
                    risultato5Preventivato = Math.Round(risultato3Preventivato - ritenutaPreventivato, 2) 'risultato2 - ritenuta + oneri

                    'H) (G*Z)/100 IVA= (NETTO con oneri*perc_iva)/100
                    'ivaPreventivato = Math.Round((risultato5Preventivato * percentualeIVAPreventivato) / 100, 2)
                    ivaPreventivato = Math.Round((risultato5Preventivato * percentualeIVAPreventivato) / 100, 2)
                    'ivaPreventivato = IfNull(lettore("IVA_CONSUNTIVATA"), 0)
                    totaleIvaPreventivato += ivaPreventivato

                    'I) NETTO+ONERI+IVA
                    risultato4Preventivato = Math.Round(risultato5Preventivato + ivaPreventivato + importoRimborso, 2)
                    totaleRisultato4Preventivato += risultato4Preventivato
                    '***********************************************************************************************************
                    '***********************************************************************************************************
                End While
                lettore.Close()

                'penale da calcolare su tutto l'appalto ma va lasciata a 0 per il preventivo
                importoPenale = 0

                'TotImpPreventivato = totaleRisultato4Preventivato
                '16/04/2014 dopo attenta verifica con quanto accade nelle manutenzioni vecchie
                totaleDefinitivo = totaleRisultato4Preventivato + totaleRitenutaIvataPreventivato - importoPenale
                '***********************************************************************************************************
                DizionarioValoriOrdine.Add("SCONTO", percentualeScontoPreventivato)
                DizionarioValoriOrdine.Add("ONERI", percentualeOneriPreventivato)
                DizionarioValoriOrdine.Add("PERC_IVA", percentualeIVAPreventivato)
                DizionarioValoriOrdine.Add("LORDO_COMPRESI_ONERI", totaleImportoPreventivato)
                DizionarioValoriOrdine.Add("ONERI_SICUREZZA", totaleOneriSicurezzaPreventivato)
                DizionarioValoriOrdine.Add("LORDO_ESCLUSI_ONERI", totaleImportoEsclusiOneriPreventivato)
                DizionarioValoriOrdine.Add("RIBASSO", totaleAstaPreventivato)
                DizionarioValoriOrdine.Add("NETTO_ESCLUSI_ONERI", totaleimportoRibassatoEsclusiOneriPreventivato)
                DizionarioValoriOrdine.Add("RIT_LEGGE_IVATA", totaleRitenutaIvataPreventivato)
                DizionarioValoriOrdine.Add("NETTO_COMPRESI_ONERI", totaleRisultato3Preventivato)
                DizionarioValoriOrdine.Add("IVA", totaleIvaPreventivato)
                DizionarioValoriOrdine.Add("RIMBORSO", totaleRimborso)
                DizionarioValoriOrdine.Add("NETTO_COMPRESI_ONERI_IVA", totaleRisultato4Preventivato)
                DizionarioValoriOrdine.Add("PENALE", importoPenale)
                DizionarioValoriOrdine.Add("TOTALE", totaleDefinitivo)
            ElseIf PreventivoConsuntivo = 2 Then
                'CONSUNTIVO
                Dim percentualeNonSoggettaRibassoConsuntivato As Decimal = 0
                Dim importoConsuntivato As Decimal = 0
                Dim percentualeIVAConsuntivato As Decimal = 0
                Dim ritLeggeConsuntivato As Int64 = 0
                Dim oneriSicurezzaConsuntivato As Decimal = 0
                Dim percentualeOneriConsuntivato As Decimal = 0
                Dim percentualeScontoConsuntivato As Decimal = 0
                Dim importoEsclusiOneriConsuntivato As Decimal = 0
                Dim importoRibassatoEsclusiOneriConsuntivato As Decimal = 0
                Dim risultato3Consuntivato As Decimal = 0
                Dim risultato4Consuntivato As Decimal = 0
                Dim risultato5Consuntivato As Decimal = 0
                Dim ribassoDastaConsuntivatoSoggetto As Decimal = 0
                Dim ribassoDastaConsuntivatoNonSoggetto As Decimal = 0
                Dim ribassoDastaConsuntivato As Decimal = 0
                Dim ritenutaConsuntivato As Decimal = 0
                Dim ritenutaIvataConsuntivato As Decimal = 0
                Dim ivaConsuntivato As Decimal = 0
                Dim ImportoNonSoggettoRibassoConsuntivato As Decimal = 0
                'TOTALE CONSUNTIVO
                Dim totaleOneriSicurezzaConsuntivato As Decimal = 0
                Dim totaleAstaConsuntivato As Decimal = 0
                Dim totaleimportoRibassatoEsclusiOneriConsuntivato As Decimal = 0
                Dim totaleImportoEsclusiOneriConsuntivato As Decimal = 0
                Dim totaleRitenutaIvataConsuntivato As Decimal = 0
                Dim totaleRisultato3Consuntivato As Decimal = 0
                Dim totaleIvaConsuntivato As Decimal = 0
                Dim totaleRisultato4Consuntivato As Decimal = 0
                Dim totaleImportoConsuntivato As Decimal = 0
                Dim totaleNonSoggettoRibassoConsuntivato As Decimal = 0
                Dim totalePenale As Decimal = 0
                'CONSUNTIVO
                cmd.CommandText = " SELECT " _
                    & "(SELECT SUM (MANUTENZIONI_CONSUNTIVI.PREZZO_UNITARIO) FROM SISCOM_MI.MANUTENZIONI_CONSUNTIVI WHERE MANUTENZIONI_CONSUNTIVI.ID_MANUTENZIONI_INTERVENTI = MANUTENZIONI_INTERVENTI.ID AND COD_ARTICOLO<>'RIMBORSO OPERE SPECIALISTICHE') AS IMPORTO_CONSUNTIVATO," _
                    & "ROUND((SELECT SUM (MANUTENZIONI_CONSUNTIVI.PREZZO_UNITARIO) FROM SISCOM_MI.MANUTENZIONI_CONSUNTIVI WHERE MANUTENZIONI_CONSUNTIVI.ID_MANUTENZIONI_INTERVENTI = MANUTENZIONI_INTERVENTI.ID)/" _
                    & "(SELECT SUM (B.PREZZO_UNITARIO) FROM SISCOM_MI.MANUTENZIONI_CONSUNTIVI B WHERE B.ID_MANUTENZIONI_INTERVENTI IN (SELECT C.ID FROM SISCOM_MI.MANUTENZIONI_INTERVENTI C WHERE C.ID_MANUTENZIONE=MANUTENZIONI.ID)),6) AS INCIDENZA," _
                    & " MANUTENZIONI.IVA_CONSUMO AS IVA, " _
                    & " APPALTI.FL_RIT_LEGGE, " _
                    & " APPALTI_LOTTI_SERVIZI.PERC_ONERI_SIC_CON AS ONERI, " _
                    & " APPALTI_LOTTI_SERVIZI.SCONTO_CONSUMO AS SCONTO, " _
                    & " (SELECT SUM(round(NVL(MANUTENZIONI_CONSUNTIVI.IMPONIBILE_RIMBORSO,0)+NVL(MANUTENZIONI_CONSUNTIVI.IMPONIBILE_RIMBORSO,0)/100*NVL(PERC_IVA_RIMBORSO,0),2)) FROM SISCOM_MI.MANUTENZIONI_CONSUNTIVI WHERE MANUTENZIONI_CONSUNTIVI.ID_MANUTENZIONI_INTERVENTI=MANUTENZIONI_INTERVENTI.ID) AS IMPORTO_RIMBORSO " _
                    & " FROM SISCOM_MI.MANUTENZIONI,SISCOM_MI.MANUTENZIONI_INTERVENTI,SISCOM_MI.APPALTI,SISCOM_MI.APPALTI_LOTTI_SERVIZI  " _
                    & " WHERE MANUTENZIONI.ID=MANUTENZIONI_INTERVENTI.ID_MANUTENZIONE " _
                    & " AND MANUTENZIONI.ID_APPALTO=APPALTI.ID " _
                    & " AND APPALTI.ID=APPALTI_LOTTI_SERVIZI.ID_APPALTO " _
                    & " AND MANUTENZIONI.ID_PF_VOCE_IMPORTO=APPALTI_LOTTI_SERVIZI.ID_PF_VOCE_IMPORTO " _
                    & condizioneRicerca
                Dim lettore As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                While lettore.Read
                    'PREVENTIVO
                    If ordineNetto = 1 Then
                        importoConsuntivato = Math.Round(IfNull(lettore("IMPORTO_CONSUNTIVATO"), 0) + (IfNull(lettore("IMPORTO_CONSUNTIVATO"), 0) * IfNull(lettore("ONERI"), 0) / 100), 2)
                    Else
                        importoConsuntivato = IfNull(lettore("IMPORTO_CONSUNTIVATO"), 0)
                    End If
                    totaleImportoConsuntivato += importoConsuntivato

                    importoRimborso = IfNull(lettore("IMPORTO_RIMBORSO"), 0)
                    totaleRimborso += importoRimborso

                    percentualeScontoConsuntivato = IfNull(lettore("SCONTO"), 0)
                    percentualeOneriConsuntivato = IfNull(lettore("ONERI"), 0)
                    If iva = -1 Then
                        percentualeIVAConsuntivato = IfNull(lettore("IVA"), 0)
                    Else
                        percentualeIVAConsuntivato = iva
                    End If
                    ritLeggeConsuntivato = IfNull(lettore("FL_RIT_LEGGE"), 0)

                    'A) Importo
                    'V) perc_oneri
                    'Y) perc_sconto
                    'Z) perc_iva

                    'B) A-(A*100)/(100+V) ONERI di SICUREZZA= (IMPORTO*perc_oneri)/100 ora diventa (IMPORTO*100)/(100+perc_oneri)
                    oneriSicurezzaConsuntivato = Math.Round(importoConsuntivato - ((importoConsuntivato * 100) / (100 + percentualeOneriConsuntivato)), 2)
                    totaleOneriSicurezzaConsuntivato += oneriSicurezzaConsuntivato

                    ImportoNonSoggettoRibassoConsuntivato = Math.Round(importoConsuntivato - ((importoConsuntivato * 100) / (100 + percentualeNonSoggettaRibassoConsuntivato)), 2)
                    totaleNonSoggettoRibassoConsuntivato += ImportoNonSoggettoRibassoConsuntivato


                    'C) A-B LORDO senza ONERI= IMPORTO-oneri
                    importoEsclusiOneriConsuntivato = Math.Round(importoConsuntivato - oneriSicurezzaConsuntivato - ImportoNonSoggettoRibassoConsuntivato, 2)
                    totaleImportoEsclusiOneriConsuntivato += importoEsclusiOneriConsuntivato

                    'D) RIBASSO ASTA= (LORDO senza oneri*perc_sconto)/100
                    ribassoDastaConsuntivato = Math.Round((importoEsclusiOneriConsuntivato * percentualeScontoConsuntivato) / 100, 2)
                    totaleAstaConsuntivato += ribassoDastaConsuntivato

                    'E) C-D NETTO senza ONERI= (LORDO senza oneri-asta)
                    importoRibassatoEsclusiOneriConsuntivato = Math.Round(importoEsclusiOneriConsuntivato - ribassoDastaConsuntivato, 2)
                    totaleimportoRibassatoEsclusiOneriConsuntivato += importoRibassatoEsclusiOneriConsuntivato

                    'AGGIUNTO
                    'G) E-F+B  NETTO con ONERI= (IMPORTO-asta) invece diventa NETTO SENZA ONERI - RITENUTA + ONERI  (risultato2-ritenuta+oneri)
                    risultato3Consuntivato = Math.Round(importoRibassatoEsclusiOneriConsuntivato + oneriSicurezzaConsuntivato + ImportoNonSoggettoRibassoConsuntivato, 2)
                    totaleRisultato3Consuntivato += risultato3Consuntivato

                    'F) ALIQUOTA 0,5% sul NETTO senza ONERI ora in data 12/05/2011 la ritenuta va calcolato con gli ONERI
                    If ritLeggeConsuntivato = 1 Then
                        ritenutaConsuntivato = Math.Round((risultato3Consuntivato * 0.5) / 100, 2) '(risultato2 * 0.5) / 100
                        ritenutaIvataConsuntivato = Math.Round((ritenutaConsuntivato + ((ritenutaConsuntivato * percentualeIVAConsuntivato) / 100)), 2)
                    Else
                        ritenutaConsuntivato = 0
                        ritenutaIvataConsuntivato = 0
                    End If
                    totaleRitenutaIvataConsuntivato += ritenutaIvataConsuntivato

                    'G) E-F+B  NETTO con ONERI= (IMPORTO-asta) invece diventa NETTO SENZA ONERI - RITENUTA + ONERI  (risultato2-ritenuta+oneri)
                    risultato5Consuntivato = Math.Round(risultato3Consuntivato - ritenutaConsuntivato, 2) 'risultato2 - ritenuta + oneri

                    'H) (G*Z)/100 IVA= (NETTO con oneri*perc_iva)/100
                    'ivaConsuntivato = Math.Round((risultato5Consuntivato * percentualeIVAConsuntivato) / 100, 2)
                    ivaConsuntivato = Math.Round((risultato5Consuntivato * percentualeIVAConsuntivato) / 100, 2)
                    'ivaConsuntivato = IfNull(lettore("IVA_CONSUNTIVATA"), 0)
                    totaleIvaConsuntivato += ivaConsuntivato

                    'I) NETTO+ONERI+IVA
                    risultato4Consuntivato = Math.Round(risultato5Consuntivato + ivaConsuntivato + importoRimborso, 2)
                    totaleRisultato4Consuntivato += risultato4Consuntivato
                    '***********************************************************************************************************
                    '***********************************************************************************************************

                    cmd.CommandText = "select sum(importo)*" & VirgoleInPunti(IfNull(lettore("INCIDENZA"), 0)) & " from SISCOM_MI.appalti_penali where appalti_penali.id_manutenzione=" & idOrdine
                    importoPenale = IfNull(cmd.ExecuteScalar, 0)
                    totalePenale += importoPenale

                End While
                lettore.Close()

                totalePenale = Round(totalePenale, 2)
                totaleDefinitivo = totaleRisultato4Consuntivato + totaleRitenutaIvataConsuntivato - totalePenale
                '***********************************************************************************************************
                DizionarioValoriOrdine.Add("SCONTO", percentualeScontoConsuntivato)
                DizionarioValoriOrdine.Add("ONERI", percentualeOneriConsuntivato)
                DizionarioValoriOrdine.Add("PERC_IVA", percentualeIVAConsuntivato)
                DizionarioValoriOrdine.Add("LORDO_COMPRESI_ONERI", totaleImportoConsuntivato)
                DizionarioValoriOrdine.Add("ONERI_SICUREZZA", totaleOneriSicurezzaConsuntivato)
                DizionarioValoriOrdine.Add("LORDO_ESCLUSI_ONERI", totaleImportoEsclusiOneriConsuntivato)
                DizionarioValoriOrdine.Add("RIBASSO", totaleAstaConsuntivato)
                DizionarioValoriOrdine.Add("NETTO_ESCLUSI_ONERI", totaleimportoRibassatoEsclusiOneriConsuntivato)
                DizionarioValoriOrdine.Add("RIT_LEGGE_IVATA", totaleRitenutaIvataConsuntivato)
                DizionarioValoriOrdine.Add("NETTO_COMPRESI_ONERI", totaleRisultato3Consuntivato)
                DizionarioValoriOrdine.Add("IVA", totaleIvaConsuntivato)
                DizionarioValoriOrdine.Add("RIMBORSO", totaleRimborso)
                DizionarioValoriOrdine.Add("NETTO_COMPRESI_ONERI_IVA", totaleRisultato4Consuntivato)
                DizionarioValoriOrdine.Add("PENALE", totalePenale)
                DizionarioValoriOrdine.Add("TOTALE", totaleDefinitivo)
            Else
                If ConOpenNow = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
                Return DizionarioValoriOrdine
            End If
            'chiusura connessione   
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
            Return DizionarioValoriOrdine
        End Function

        Public Function CalcoloImportiOrdineConParametri(ByVal PercentualeSconto As Decimal,
                                                         ByVal PercentualeOneri As Decimal,
                                                         ByVal PercentualeIVA As Decimal,
                                                         ByVal LordoCompresiOneri As Decimal,
                                                         ByVal Ritenuta As Ritenuta,
                                                         Optional ByVal ImportoOneriFisso As Decimal = -1,
                                                         Optional ByVal Rimborso As Decimal = 0,
                                                         Optional ByVal Penale As Decimal = 0
                                                         ) As Generic.Dictionary(Of String, Decimal)
            Dim DizionarioValoriOrdine As New Generic.Dictionary(Of String, Decimal)

            Dim OneriSicurezza As Decimal = 0
            Dim LordoEsclusiOneri As Decimal = 0
            Dim Ribasso As Decimal = 0
            Dim NettoEsclusiOneri As Decimal = 0
            Dim RitenutaDiLeggeIvata As Decimal = 0
            Dim NettoCompresiOneri As Decimal = 0
            Dim Iva As Decimal = 0
            Dim NettoCompresiOneriIva As Decimal = 0
            Dim Totale As Decimal = 0
            Dim RitenutaDiLeggeNonIvata As Decimal = 0

            If ImportoOneriFisso <> -1 Then
                OneriSicurezza = Round(CDec(ImportoOneriFisso), 2)
            Else
                OneriSicurezza = LordoCompresiOneri - Round(LordoCompresiOneri * 100 / (100 + Round(PercentualeOneri, 4)), 2)
            End If

            LordoEsclusiOneri = LordoCompresiOneri - OneriSicurezza
            Ribasso = Round((LordoEsclusiOneri) * PercentualeSconto / 100, 2)
            NettoEsclusiOneri = LordoEsclusiOneri - Ribasso
            NettoCompresiOneri = NettoEsclusiOneri + OneriSicurezza
            RitenutaDiLeggeNonIvata = Round(Ritenuta * NettoCompresiOneri * 0.005, 2)
            RitenutaDiLeggeIvata = Round(RitenutaDiLeggeNonIvata * (1 + PercentualeIVA / 100), 2)
            Iva = Round((NettoCompresiOneri - RitenutaDiLeggeNonIvata) * PercentualeIVA / 100, 2)
            NettoCompresiOneriIva = NettoCompresiOneri - RitenutaDiLeggeNonIvata + Iva
            Totale = NettoCompresiOneriIva + RitenutaDiLeggeIvata + Rimborso - Penale

            DizionarioValoriOrdine.Add("SCONTO", PercentualeSconto)
            DizionarioValoriOrdine.Add("ONERI", PercentualeOneri)
            DizionarioValoriOrdine.Add("PERC_IVA", PercentualeIVA)
            DizionarioValoriOrdine.Add("LORDO_COMPRESI_ONERI", LordoCompresiOneri)
            DizionarioValoriOrdine.Add("ONERI_SICUREZZA", OneriSicurezza)
            DizionarioValoriOrdine.Add("LORDO_ESCLUSI_ONERI", LordoEsclusiOneri)
            DizionarioValoriOrdine.Add("RIBASSO", Ribasso)
            DizionarioValoriOrdine.Add("NETTO_ESCLUSI_ONERI", NettoEsclusiOneri)
            DizionarioValoriOrdine.Add("RIT_LEGGE_IVATA", RitenutaDiLeggeIvata)
            DizionarioValoriOrdine.Add("NETTO_COMPRESI_ONERI", NettoCompresiOneri)
            DizionarioValoriOrdine.Add("IVA", Iva)
            DizionarioValoriOrdine.Add("RIMBORSO", Rimborso)
            DizionarioValoriOrdine.Add("NETTO_COMPRESI_ONERI_IVA", NettoCompresiOneriIva)
            DizionarioValoriOrdine.Add("PENALE", Penale)
            DizionarioValoriOrdine.Add("TOTALE", Totale)

            Return DizionarioValoriOrdine
        End Function

        ''' <summary>
        ''' Gestisce la scrittura nello schema bollette dell'importo nel numero di rate indicato
        ''' </summary>
        ''' <param name="idContratto">Identificativo del contratto</param>
        ''' <param name="idUnita">Identificativo dell'unità immobiliare</param>
        ''' <param name="idVoce">Identifivativo della voce di bolletta</param>
        ''' <param name="importoTotale">Importo totale da suddividere nello schema</param>
        ''' <param name="numeroRate">Numero di rate massimo applicabili</param>
        ''' <param name="annoMesePartenza">Anno e mese di partenza dell'applicazione nello schema (da inserire nel formato YYYYMM) </param>
        ''' <param name="datafinale">Valore opzionale della data entro la quale devono essere generate le scritture nello schema (da inserire nel formato dd/mm/yyyy)</param>


        Public Sub scritturaSchemaBollette(ByVal idContratto As Long, ByVal idUnita As Long, ByVal idVoce As Integer, ByVal importoTotale As Decimal,
                                           ByVal numeroRate As Integer, ByVal annoMesePartenza As String, Optional ByVal datafinale As String = "", Optional ByVal idVoceGest As String = "NULL", Optional ByVal ProssimaRata As String = "", Optional ByVal TipoImporto As Integer = 1, Optional ByVal rataDaMantenere As Boolean = False)
            Dim DaChiudere As Boolean = False
            Dim ImportoGiaScritto As Decimal = 0
            Try
                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    DaChiudere = True
                    cmd = OracleConn.CreateCommand()
                End If
                'NUMERO ANNUALE DELLE RATE DEFINITO PER CONTRATTO
                Dim numeroRateContratto As Integer = 12
                'MESE E ANNO PROSSIMA BOLLETTAZIONE
                Dim prossimaBoll As String = annoMesePartenza
                cmd.CommandText = "SELECT NRO_RATE,PROSSIMA_BOLLETTA FROM siscom_mi.RAPPORTI_UTENZA,siscom_mi.RAPPORTI_UTENZA_PROSSIMA_BOL WHERE ID=" & idContratto & " AND RAPPORTI_UTENZA.ID=RAPPORTI_UTENZA_PROSSIMA_BOL.ID_CONTRATTO"
                Dim LettoreContratto As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                If LettoreContratto.Read Then
                    numeroRateContratto = IfNull(LettoreContratto("NRO_RATE"), 12)
                    prossimaBoll = IfNull(LettoreContratto("PROSSIMA_BOLLETTA"), "")
                End If
                LettoreContratto.Close()
                If ProssimaRata <> "" And prossimaBoll = "" Then
                    cmd.CommandText = "SELECT NRO_RATE FROM siscom_mi.RAPPORTI_UTENZA WHERE ID=" & idContratto
                    LettoreContratto = cmd.ExecuteReader
                    If LettoreContratto.Read Then
                        numeroRateContratto = IfNull(LettoreContratto("NRO_RATE"), 12)
                        prossimaBoll = ProssimaRata
                    End If
                    LettoreContratto.Close()
                End If
                If ProssimaRata = "" Then
                    ProssimaRata = annoMesePartenza
                End If
                If rataDaMantenere = True Then
                    If ProssimaRata > prossimaBoll Then
                        prossimaBoll = ProssimaRata
                    End If
                End If
                '12-MENSILE
                '6-BIMESTRALE
                '4-TRIMESTRALE
                '3-QUADRIMESTRALE
                '1-ANNUALE
                Dim annoPartenzaDefinitivo As Integer = 0
                Dim mesePartenzaDefinitivo As Integer = 0
                If CInt(annoMesePartenza) > CInt(prossimaBoll) Then
                    annoPartenzaDefinitivo = CInt(Left(annoMesePartenza, 4))
                    mesePartenzaDefinitivo = CInt(Right(annoMesePartenza, 2))
                Else
                    annoPartenzaDefinitivo = CInt(Left(prossimaBoll, 4))
                    mesePartenzaDefinitivo = CInt(Right(prossimaBoll, 2))
                End If
                If rataDaMantenere = True Then
                    mesePartenzaDefinitivo = CInt(mesePartenzaDefinitivo * 12 / numeroRateContratto)
                End If
                'Select Case numeroRateContratto
                '    Case 12
                '        'RESTA QUELLO ESTRATTO
                '    Case 6
                '        If mesePartenzaDefinitivo = 1 Then
                '            mesePartenzaDefinitivo = 1
                '        ElseIf mesePartenzaDefinitivo <= 3 Then
                '            mesePartenzaDefinitivo = 3
                '        ElseIf mesePartenzaDefinitivo <= 5 Then
                '            mesePartenzaDefinitivo = 5
                '        ElseIf mesePartenzaDefinitivo <= 7 Then
                '            mesePartenzaDefinitivo = 7
                '        ElseIf mesePartenzaDefinitivo <= 9 Then
                '            mesePartenzaDefinitivo = 9
                '        ElseIf mesePartenzaDefinitivo <= 11 Then
                '            mesePartenzaDefinitivo = 11
                '        Else
                '            annoPartenzaDefinitivo += 1
                '            mesePartenzaDefinitivo = 1
                '        End If
                '    Case 4
                '        If mesePartenzaDefinitivo = 1 Then
                '            mesePartenzaDefinitivo = 1
                '        ElseIf mesePartenzaDefinitivo <= 4 Then
                '            mesePartenzaDefinitivo = 4
                '        ElseIf mesePartenzaDefinitivo <= 7 Then
                '            mesePartenzaDefinitivo = 7
                '        ElseIf mesePartenzaDefinitivo <= 10 Then
                '            mesePartenzaDefinitivo = 10
                '        Else
                '            annoPartenzaDefinitivo += 1
                '            mesePartenzaDefinitivo = 1
                '        End If
                '    Case 3
                '        If mesePartenzaDefinitivo = 1 Then
                '            mesePartenzaDefinitivo = 1
                '        ElseIf mesePartenzaDefinitivo <= 5 Then
                '            mesePartenzaDefinitivo = 5
                '        ElseIf mesePartenzaDefinitivo <= 9 Then
                '            mesePartenzaDefinitivo = 9
                '        Else
                '            annoPartenzaDefinitivo += 1
                '            mesePartenzaDefinitivo = 1
                '        End If
                '    Case 2
                '        If mesePartenzaDefinitivo = 1 Then
                '            mesePartenzaDefinitivo = 1
                '        ElseIf mesePartenzaDefinitivo <= 7 Then
                '            mesePartenzaDefinitivo = 7
                '        Else
                '            annoPartenzaDefinitivo += 1
                '            mesePartenzaDefinitivo = 1
                '        End If
                '    Case 1
                '        mesePartenzaDefinitivo = CInt(Right(prossimaBoll, 2))
                '    Case Else
                'End Select
                'MODIFICA NUMERO RATE IN FUNZIONE DELLA DATA FINALE
                If datafinale <> "" Then
                    numeroRate = Min(numeroRate, Ceiling((DateDiff(DateInterval.Month, CDate(FormattaData(annoPartenzaDefinitivo & Format(mesePartenzaDefinitivo, "00") & "01")), CDate(FormattaData(datafinale))) + 1) / 12 * numeroRateContratto))
                End If
                'IMPORTO SINGOLA RATA
                'If TipoImporto = 1 Then
                'Dim importoSingolaRata As Decimal = Round(importoTotale / numeroRate, 2)
                'Else
                Dim importoSingolaRata As Decimal = Round(importoTotale / numeroRate, 2)
                Dim Resto As Decimal = 0
                'End If
                Dim numeroRateRestanti As Integer = 0
                Dim anno As Integer = annoPartenzaDefinitivo
                For i As Integer = 1 To numeroRate Step 1
                    If numeroRate > 0 Then
                        If anno = annoPartenzaDefinitivo Then
                            numeroRateRestanti = Min(numeroRateContratto + 1 - Math.Ceiling(mesePartenzaDefinitivo / (12 / numeroRateContratto)), numeroRate)
                            'INSERT NELLO SCHEMA BOLLETTE
                            numeroRate = numeroRate - numeroRateRestanti
                            ImportoGiaScritto = ImportoGiaScritto + (importoSingolaRata * numeroRateRestanti)

                            If numeroRate = 0 And TipoImporto = 2 Then
                                Resto = importoTotale - ImportoGiaScritto

                                If Resto = 0 Then
                                    If numeroRateRestanti > 0 Then
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti) & " , " _
                                            & Math.Ceiling(mesePartenzaDefinitivo / 12 * numeroRateContratto) & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                    End If
                                Else
                                    If numeroRateRestanti = 1 Then
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti + Resto) & " , " _
                                            & Math.Ceiling(mesePartenzaDefinitivo / 12 * numeroRateContratto) & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                    ElseIf numeroRateRestanti > 1 Then
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti) & " , " _
                                            & Math.Ceiling(mesePartenzaDefinitivo / 12 * numeroRateContratto) & ", " & numeroRateRestanti - 1 & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti + Resto) & " , " _
                                            & Math.Ceiling(mesePartenzaDefinitivo / 12 * numeroRateContratto) + numeroRateRestanti - 1 & ", " & 1 & ", " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                    End If

                                End If

                                'If Resto = 0 Then
                                '    cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '                        & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '                        & " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * (numeroRateRestanti - 1)) & " , " _
                                '                        & mesePartenzaDefinitivo & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                '    cmd.ExecuteNonQuery()
                                'Else
                                '    If numeroRateRestanti - 1 <> 0 Then
                                '        cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '                        & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '                        & " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * (numeroRateRestanti - 1)) & " , " _
                                '                        & mesePartenzaDefinitivo & ", " & numeroRateRestanti - 1 & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                '        cmd.ExecuteNonQuery()
                                '    End If
                                '    cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '                    & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '                    & " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti((importoSingolaRata) + Resto) & " , " _
                                '                    & mesePartenzaDefinitivo + numeroRateRestanti - 1 & ", 1, " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                '    cmd.ExecuteNonQuery()
                                'End If
                            Else
                                If numeroRateRestanti > 0 Then
                                    cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                                        & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                                        & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti) & " , " _
                                                        & Math.Ceiling(Round(mesePartenzaDefinitivo / 12 * numeroRateContratto, 4)) & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                    cmd.ExecuteNonQuery()
                                End If
                            End If
                            anno += 1
                        Else
                            numeroRateRestanti = Min(numeroRateContratto, numeroRate)
                            'INSERT NELLO SCHEMA BOLLETTE

                            numeroRate = numeroRate - numeroRateRestanti
                            ImportoGiaScritto = ImportoGiaScritto + (importoSingolaRata * numeroRateRestanti)

                            If numeroRate = 0 And TipoImporto = 2 Then
                                Resto = importoTotale - ImportoGiaScritto

                                If Resto = 0 Then
                                    If numeroRateRestanti > 0 Then
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti) & " , " _
                                            & 1 & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                    End If
                                Else
                                    If numeroRateRestanti = 1 Then
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti + Resto) & " , " _
                                            & 1 & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                    ElseIf numeroRateRestanti > 1 Then
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti) & " , " _
                                            & 1 & ", " & numeroRateRestanti - 1 & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                        cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                            & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                            & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti + Resto) & " , " _
                                            & numeroRateRestanti & ", " & 1 & ", " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                        cmd.ExecuteNonQuery()
                                    End If

                                End If

                                'If Resto = 0 Then
                                '    cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '                    & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '                    & " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * (numeroRateRestanti - 1)) & " , " _
                                '                    & 1 & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                '    cmd.ExecuteNonQuery()
                                'Else
                                '    cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '                    & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '                    & " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * (numeroRateRestanti - 1)) & " , " _
                                '                    & 1 & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                '    cmd.ExecuteNonQuery()
                                'cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '                & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '                & " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * (numeroRateRestanti - 1)) & " , " _
                                '                & 1 & ", " & numeroRateRestanti - 1 & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                'cmd.ExecuteNonQuery()
                                '
                                'cmd.CommandText = "INSERT INTO BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                '& " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                '& " VALUES (SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno, "") & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata + Resto) & " , " _
                                '& 1 + numeroRateRestanti - 1 & ", 1, " & VirgoleInPunti(importoSingolaRata + Resto) & " , " & anno & "," & idVoceGest & ")"
                                'cmd.ExecuteNonQuery()
                                'End If

                            Else
                                If numeroRateRestanti > 0 Then
                                    cmd.CommandText = "INSERT INTO siscom_mi.BOL_SCHEMA (ID, ID_CONTRATTO, ID_UNITA, ID_ESERCIZIO_F, ID_VOCE, IMPORTO, " _
                                    & " DA_RATA, PER_RATE, IMPORTO_SINGOLA_RATA, ANNO,ID_VOCE_BOLLETTA_GEST) " _
                                    & " VALUES (siscom_mi.SEQ_BOL_SCHEMA.NEXTVAL, " & idContratto & ", " & idUnita & ", " & RicavaEsercizio(anno) & ", " & idVoce & ", " & VirgoleInPunti(importoSingolaRata * numeroRateRestanti) & " , " _
                                    & 1 & ", " & numeroRateRestanti & ", " & VirgoleInPunti(importoSingolaRata) & " , " & anno & "," & idVoceGest & ")"
                                    cmd.ExecuteNonQuery()
                                End If
                            End If
                            anno += 1
                        End If
                    Else
                        Exit For
                    End If
                Next
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            Catch ex As Exception
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            End Try
        End Sub


        Public Sub setComboTelerik(ByVal combobox As Telerik.Web.UI.RadComboBox, ByVal value As String)
            If Not IsNothing(combobox.Items.FindItemByValue(value)) Then
                combobox.SelectedValue = value
                combobox.Text = combobox.SelectedItem.Text.ToString
            End If
        End Sub
        Public Sub caricaComboTelerik(ByVal query As String, ByVal combobox As Telerik.Web.UI.RadComboBox, ByVal value As String, ByVal descrizione As String, Optional ByVal spazio_vuoto As Boolean = True, Optional ByVal valueSpVuoto As String = "-1", Optional ByVal itemVuoto As String = "", Optional ByVal unicoRisultato As Boolean = False, Optional ByVal enabled As Boolean = True, Optional ByVal listaidChecked As SortedList(Of Decimal, Decimal) = Nothing)
            combobox.ClearSelection()
            Dim ConOpenNow As Boolean = False
            combobox.Items.Clear()
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = query
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            Dim dt As New Data.DataTable
            da.Fill(dt)
            da.Dispose()
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
            Dim item As Telerik.Web.UI.RadComboBoxItem
            If spazio_vuoto = True Then
                If unicoRisultato = False Or dt.Rows.Count <> 1 Then
                    item = New Telerik.Web.UI.RadComboBoxItem()
                    item.Text = itemVuoto
                    item.Value = valueSpVuoto
                    combobox.Items.Add(item)
                    combobox.SelectedValue = valueSpVuoto
                End If
            End If
            For Each row As Data.DataRow In dt.Rows
                item = New Telerik.Web.UI.RadComboBoxItem()
                item.Text = IfNull(row.Item(descrizione), "")
                item.Value = IfNull(row.Item(value), "")

                If Not IsNothing(listaidChecked) AndAlso listaidChecked.ContainsKey(item.Value) Then
                    item.Checked = True
                End If

                combobox.Items.Add(item)
            Next
            If combobox.Items.Count > 0 Then
                If combobox.Items.Count = 1 Then
                    combobox.Enabled = False
                Else
                    combobox.Enabled = True
                End If
                combobox.SelectedValue = combobox.Items(0).Value
            End If
            If Not enabled Then
                combobox.Enabled = False
            End If
        End Sub

        Function Pasqua(iAnno As Integer) As Date
            Dim a As Integer
            Dim b As Integer
            Dim c As Integer
            Dim d As Integer
            Dim e As Integer
            Dim f As Integer
            Dim g As Integer
            Dim h As Integer
            Dim k As Integer
            Dim m As Integer
            Dim sTmp As String
            a = iAnno Mod 19
            b = iAnno Mod 4
            c = iAnno Mod 7
            h = 19 * a + 24
            d = h Mod 30
            k = 5 + 2 * b + 4 * c + 6 * d
            e = k Mod 7
            m = d + e
            If m <= 9 Then
                g = 31 - (9 - m)
                m = 3
            Else
                f = m - 9
                If f = 26 Then
                    g = 19
                    m = 4
                Else
                    If f = 25 Then
                        If d <> 28 Then
                            g = f
                            m = 4
                        Else
                            g = 18
                            m = 4
                        End If
                    Else
                        g = f
                        m = 4
                    End If
                End If
            End If
            sTmp = Mid(Str(g), 2) + "/" + Mid(Str(m), 2) + "/" + Mid(Str(iAnno), 2)
            Pasqua = CDate(sTmp)
        End Function
        Public Function IsFestivo(ByVal Data As Date, Optional ByVal sabatoFestivo As Boolean = False, Optional orario As Integer = 0, Optional filiale As Object = Nothing, Optional sportello As Object = Nothing) As Boolean
            'Riferito ai festivi del calendario italiano
            Dim Giorni_Festivi As New Generic.List(Of Date)
            Dim Data_Pasqua As Date
            Dim Data_PasquaPiu1 As Date
            Dim DataDB As String = CStr(Year(Data)).PadLeft(4, "0") & CStr(Month(Data)).PadLeft(2, "0") & CStr(Day(Data)).PadLeft(2, "0")
            Data_Pasqua = Pasqua(Year(Data))
            Data_PasquaPiu1 = Data_Pasqua.AddDays(1)
            Giorni_Festivi.Clear()
            Giorni_Festivi.Add("1-1")
            Giorni_Festivi.Add("6-1")
            Giorni_Festivi.Add("25-04")
            Giorni_Festivi.Add("1-5")
            Giorni_Festivi.Add("2-6")
            Giorni_Festivi.Add("15-8")
            Giorni_Festivi.Add("1-11")
            Giorni_Festivi.Add("8-12")
            Giorni_Festivi.Add("25-12")
            Giorni_Festivi.Add("26-12")
            Giorni_Festivi.Add(Data_Pasqua)
            Giorni_Festivi.Add(Data_PasquaPiu1)
            IsFestivo = False
            If IsWeekEnd(Data, sabatoFestivo) Then
                IsFestivo = True
            End If
            If Not IsFestivo Then
                For Each Festivo In Giorni_Festivi
                    If Day(Data) = Day(Festivo) And Month(Data) = Month(Festivo) Then
                        IsFestivo = True
                        Exit For
                    End If
                Next Festivo
            End If
            'CONTROLLO PARTICOLARE PER CALENDARIO NATALIZIO 2014-2015
            '02/01/2015-CHIUSURA COMPLETA
            '05/01/2015-CHIUSURA COMPLETA
            '24/12/2014-CHIUSURA POMERIDIANA
            '31/12/2014-CHIUSURA POMERIDIANA
            Dim dataPonte2Gennaio As Date = "02/01/2015"
            If Data = dataPonte2Gennaio Then
                IsFestivo = True
            End If
            Dim dataPonte5Gennaio As Date = "05/01/2015"
            If Data = dataPonte5Gennaio Then
                IsFestivo = True
            End If
            Dim dataVigiliaNatale As Date = "24/12/2014"
            If Data = dataVigiliaNatale AndAlso (orario = 6 Or orario = 7 Or orario = 8) Then
                IsFestivo = True
            End If
            Dim dataVigiliaCapodanno As Date = "31/12/2014"
            If Data = dataVigiliaCapodanno AndAlso (orario = 6 Or orario = 7 Or orario = 8) Then
                IsFestivo = True
            End If
            If Not IsNothing(sportello) AndAlso IsNumeric(sportello) And Not IsNothing(filiale) AndAlso IsNumeric(filiale) Then
                Dim Lettore As Oracle.DataAccess.Client.OracleDataReader
                Dim Lettore2 As Oracle.DataAccess.Client.OracleDataReader
                cmd.CommandText = "SELECT * FROM SISCOM_MI.APPUNTAMENTI_SPORTELLI WHERE FL_ATTIVO=1 AND ID=" & sportello
                Lettore = cmd.ExecuteReader
                If Lettore.Read Then
                    'sportello attivo
                    cmd.CommandText = "SELECT * FROM SISCOM_MI.APPUNTAMENTI_SPORTELLI_CHIUS WHERE ID_FILIALE=" & filiale & " AND GIORNO=" & DataDB & " AND ID_ORARIO=" & orario & " AND ID_SPORTELLO=" & sportello
                    Lettore2 = cmd.ExecuteReader
                    If Lettore2.Read Then
                        'giorno chiuso
                        IsFestivo = True
                    End If
                    Lettore2.Close()
                Else
                    'sportello non abilitato
                    IsFestivo = True
                End If
                Lettore.Close()
            End If
        End Function

        Public Function IsWeekEnd(ByVal Data As Date, Optional ByVal sabatoFestivo As Boolean = False) As Boolean
            'Fine Settimana In Italia (Sabato e Domenica)
            Dim n As Integer = 7
            If sabatoFestivo Then
                n = 6
            End If
            If Weekday(Data, vbMonday) < n Then
                IsWeekEnd = False
            Else
                IsWeekEnd = True
            End If
        End Function
        Public Function primoGiornoFerialeUtile(ByVal data As Date, Optional ByVal sabatoFestivo As Boolean = False) As Date
            Dim dataDarestituire As Date = data
            Dim festivo As Boolean = True
            While festivo
                If IsFestivo(dataDarestituire, sabatoFestivo) Then
                    dataDarestituire = dataDarestituire.AddDays(1)
                Else
                    festivo = False
                End If
            End While
            Return dataDarestituire
        End Function
        '19/10/2012
        'Metodo per stampare in una pagina vuota un PDF.
        'Requisiti fondamentali sono jquery, un'immagine con id "imgStampa" nella pagina o nella masterPage
        Public Sub VisualizzaStampaPDF(ByVal nomeFile As String, ByVal pagina As Page)
            Dim sb As StringBuilder = New StringBuilder
            sb.Append("jQuery(function($){$('#imgStampa').attr('onclick','javascript:window.open(\'..\/FileTemp\/" & nomeFile & "\',\'StampaPDF\',\'fullscreen=0,resizable=1,statusbar=0,width=1000,height=800\',true);');$('#imgStampa').click();}); ")
            pagina.ClientScript.RegisterClientScriptBlock(GetType(Page), "StampaPDF", sb.ToString(), True)
        End Sub

        Public Sub RimuoviNodoMenu(ByVal menu As WebControls.TreeView, ByVal nodo As String)
            If Not IsNothing(menu) And Not String.IsNullOrEmpty(nodo) Then
                For i As Integer = 0 To menu.Nodes.Count - 1
                    If menu.Nodes(i).Value.ToString = nodo Then
                        menu.Nodes.Remove(menu.Nodes(i))
                        Exit Sub
                    Else
                        If RimuoviNodoFiglio(menu.Nodes(i), nodo) Then
                            Exit Sub
                        End If
                    End If
                Next
            End If
        End Sub
        Private Function RimuoviNodoFiglio(ByVal subnodo As TreeNode, ByVal nodo As String) As Boolean
            RimuoviNodoFiglio = False
            If (subnodo Is Nothing) Then
                Exit Function
            End If
            For i As Integer = 0 To subnodo.ChildNodes.Count - 1
                If subnodo.ChildNodes(i).Value.ToString = nodo Then
                    subnodo.ChildNodes.Remove(subnodo.ChildNodes(i))
                    RimuoviNodoFiglio = True
                    Exit Function
                Else
                    RimuoviNodoFiglio(subnodo.ChildNodes(i), nodo)
                End If
            Next
        End Function

        Public Function QueryINSplit(ByVal InCondition As String, ByVal q As String, ByVal sostituzione As String) As Generic.List(Of String)
            Dim s As String = ""
            Dim query As String = ""
            Dim listaquery As New System.Collections.Generic.List(Of String)
            Dim i As Integer = 0
            Dim fine As Boolean = False
            Dim listaElementi As String = ""
            Dim m As Integer = 0
            Dim primoGiro As Boolean = True
            Dim numeroFor As Integer = 0
            While fine = False
                listaElementi = ""
                s = ""
                Dim primo As Boolean = True

                If primoGiro = True Then
                    numeroFor = 999
                    primoGiro = False
                Else
                    numeroFor = (i - 1) + 1000
                End If
                For j As Integer = m To numeroFor
                    If 999 * i + j < InCondition.Split(",").Length Then
                        If primo = True Then
                            listaElementi = listaElementi & InCondition.Split(",")(999 * i + j)
                            primo = False
                        Else
                            listaElementi = listaElementi & "," & InCondition.Split(",")(999 * i + j)
                        End If
                    Else
                        fine = True
                        Exit For
                    End If
                Next
                s = q.Replace(sostituzione, listaElementi)
                listaquery.Add(s)
                i += 1
                m = m + 1
            End While
            QueryINSplit = listaquery

        End Function


        Public Sub caricaCheckBoxList(ByVal query As String, ByVal CheckBoxList As CheckBoxList, ByVal valueField As String, ByVal textField As String)
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = query
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            Dim dt As New Data.DataTable
            da.Fill(dt)
            da.Dispose()
            If ConOpenNow = True Then
                OracleConn.Close()
            End If
            CheckBoxList.DataSource = dt
            CheckBoxList.DataTextField = textField
            CheckBoxList.DataValueField = valueField
            CheckBoxList.DataBind()
            dt.Dispose()
        End Sub

        Public Function formatoStringaDB(ByVal stringa As String) As String
            Dim stringaDB As String = ""
            stringaDB = Replace(stringa, "'", "''")
            Return stringaDB
        End Function

        'Public Sub progressBar(ByVal pagina As Page, ByVal titolo As String, ByVal valore As String)
        '    Dim sb As StringBuilder = New StringBuilder
        '    sb.Append("$(function(){")
        '    sb.Append("$('#progressbar').progressbar({value: " & valore & "});")
        '    sb.Append("$('#dialogProgressbar').dialog({")
        '    sb.Append("closeOnEscape: false,")
        '    sb.Append("draggable: false,")
        '    sb.Append("resizable: false,")
        '    sb.Append("dialogClass:'loadingScreenWindow',")
        '    sb.Append("title:'" & titolo & "',")
        '    sb.Append("modal: true,buttons:{Ok:function(){$(this).dialog('close');")
        '    sb.Append("}}")
        '    sb.Append("});")
        '    sb.Append("});")
        '    pagina.ClientScript.RegisterClientScriptBlock(GetType(Page), "progressBar", sb.ToString(), True)
        'End Sub

        Public Sub modalDialogMessage(ByVal titolo As String, ByVal testo As String, ByVal pagina As Page, Optional ByVal tipo As String = "info", Optional ByVal redirect As String = "", Optional ByVal selfClose As Boolean = False)
            If titolo = "" Then
                titolo = "Spese reversibili"
            End If
            Dim sb As StringBuilder = New StringBuilder
            sb.Append("$(function(){")
            Select Case tipo
                Case "info"
                    sb.Append("$('#dialog').html('<p><span class=""ui-icon ui-icon-info"" style=""float: left; margin: 0 7px 50px 0;""></span>")
                Case "successo"
                    sb.Append("$('#dialog').html('<p><span class=""ui-icon ui-icon-circle-check"" style=""float: left; margin: 0 7px 50px 0;""></span>")
                Case "alert"
                    sb.Append("$('#dialog').html('<p><span class=""ui-icon ui-icon-alert"" style=""float: left; margin: 0 7px 50px 0;""></span>")
                Case "errore"
                    sb.Append("$('#dialog').html('<p><span class=""ui-icon ui-icon-circle-close"" style=""float: left; margin: 0 7px 50px 0;""></span>")
                Case Else
                    sb.Append("$('#dialog').html('<p><span class=""ui-icon ui-icon-info"" style=""float: left; margin: 0 7px 50px 0;""></span>")
            End Select
            sb.Append(testo)
            sb.Append("</p>');")
            sb.Append("$('#dialog').dialog({")
            sb.Append("closeOnEscape: false,")
            sb.Append("draggable: false,")
            sb.Append("resizable: false,")
            sb.Append("dialogClass:'loadingScreenWindow',")
            sb.Append("title:'" & titolo & "',")
            sb.Append("modal: true,buttons:{Ok:function(){$(this).dialog('close');")
            If redirect <> "" Then
                sb.Append("location.replace('" & redirect & "');")
            Else
                If selfClose Then
                    sb.Append("self.close();")
                End If
            End If
            sb.Append("}}")
            sb.Append("});")
            sb.Append("});")
            pagina.ClientScript.RegisterClientScriptBlock(GetType(Page), "modalDialogMessage" & Format(Now, "ddMMyyyyHHmmss"), sb.ToString(), True)
        End Sub
        Public Sub EstraiZipFile(ByVal archiveFilenameIn As String, outFolder As String, ByVal password As String)
            Dim zf As ZipFile = Nothing
            Try
                Dim fs As FileStream = File.OpenRead(archiveFilenameIn)
                zf = New ZipFile(fs)
                If Not [String].IsNullOrEmpty(password) Then
                    zf.Password = password
                End If
                For Each zipEntry As ZipEntry In zf
                    If Not zipEntry.IsFile Then
                        Continue For
                    End If
                    Dim entryFileName As [String] = zipEntry.Name
                    Dim buffer As Byte() = New Byte(4095) {}
                    Dim zipStream As Stream = zf.GetInputStream(zipEntry)
                    Dim fullZipToPath As [String] = Path.Combine(outFolder, entryFileName)
                    Dim directoryName As String = Path.GetDirectoryName(fullZipToPath)
                    If directoryName.Length > 0 Then
                        Directory.CreateDirectory(directoryName)
                    End If
                    Using streamWriter As FileStream = File.Create(fullZipToPath)
                        StreamUtils.Copy(zipStream, streamWriter, buffer)
                    End Using
                Next
            Finally
                If zf IsNot Nothing Then
                    zf.IsStreamOwner = True
                    zf.Close()
                End If
            End Try
        End Sub

        Public Function getSepaInjection() As String()
            getSepaInjection = Nothing
            Dim connData As New CM.datiConnessione(Me, False, False)
            Try
                connData.apri(False)
                cmd.CommandText = "SELECT VALORE FROM PARAMETER WHERE DESCRIZIONE = 'INJECTION'"
                Dim Injection As String = DeCripta(IfNull(cmd.ExecuteScalar, ""))
                connData.chiudi(False)
                If Not String.IsNullOrEmpty(Trim(Injection)) Then
                    getSepaInjection = Injection.Split(",")
                End If
            Catch ex As Exception
                If OracleConn.State = Data.ConnectionState.Open Then
                    connData.chiudi(False)
                End If
            End Try
        End Function


        Public Sub modalDialogConfirm(ByVal Titolo As String, ByVal Testo As String, ByVal Button1 As String, ByVal Funzione1 As String, ByVal Button2 As String, ByVal Funzione2 As String, ByVal pagina As Page)
            Dim sb As StringBuilder = New StringBuilder
            sb.Append("$(function(){")
            sb.Append("$('#confirm').html('<p><span class=""ui-icon ui-icon-info"" style=""float: left; margin: 0 7px 50px 0;""></span>")
            sb.Append(Testo)
            sb.Append("</p>');")
            sb.Append("$('#confirm').dialog({ autoOpen:true, modal:true, show:'blind', closeOnEscape: false, draggable: false, resizable: false, title:'" & Titolo & "', buttons: {'" & Button1 & "': function() { {$(this).dialog('close');" & Funzione1 & "}},'" & Button2 & "': function() {$(this).dialog('close');" & Funzione2 & "}}});")
            sb.Append("});")
            pagina.ClientScript.RegisterClientScriptBlock(GetType(Page), "modalDialogMessage" & Format(Now, "ddMMyyyyHHmmss"), sb.ToString(), True)
        End Sub
        Public Function ConvertiCaratteriItalia(ByVal stringa As String) As String
            stringa = Replace(stringa, "&nbsp;", " ")
            stringa = Replace(stringa, "&#224;", "à")
            stringa = Replace(stringa, "&#232;", "è")
            stringa = Replace(stringa, "&#233;", "é")
            stringa = Replace(stringa, "&#236;", "ì")
            stringa = Replace(stringa, "&#242;", "ò")
            stringa = Replace(stringa, "&#249;", "ù")
            stringa = Replace(stringa, "&#192;", "À")
            stringa = Replace(stringa, "&#200;", "È")
            stringa = Replace(stringa, "&#201;", "É")
            stringa = Replace(stringa, "&#204;", "Ì")
            stringa = Replace(stringa, "&#210;", "Ò")
            stringa = Replace(stringa, "&#217;", "Ù")
            stringa = Replace(stringa, "&amp;", "&")
            stringa = Replace(stringa, "&#39;", "'")
            stringa = Replace(stringa, "&#180;", "´")
            Return stringa
        End Function
        '--------------ELIMINA LINK IPERTESTUALI DA UNA STRINGA------------'
        '##################################################################'

        Function EsportaExcelAutomaticoDaGridViewAutogenerato(ByVal GridView As GridView, Optional ByVal nomeFile As String = "", Optional ByVal ControllaFormatoNumerico As Boolean = True, Optional ByVal CreaZip As Boolean = True) As String
            Try
                Dim FileName As String = nomeFile & Format(Now, "yyyyMMddHHmmss")
                Dim FileExcel As New CM.ExcelFile
                Dim indiceRighe As Integer = 1
                Dim indiceColonne As Integer = 1
                With FileExcel
                    .CreateFile(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls"))
                    .PrintGridLines = False
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsTopMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsLeftMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsRightMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsBottomMargin, 1.5)
                    .SetDefaultRowHeight(14)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsNoFormat)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold + CM.ExcelFile.FontFormatting.xlsUnderline)
                    For Each cell As TableCell In GridView.HeaderRow.Cells
                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, indiceColonne, ConvertiCaratteriItalia(cell.Text), 0)
                        .SetColumnWidth(indiceColonne, indiceColonne, 30)
                        indiceColonne += 1
                    Next
                    indiceRighe += 1
                    indiceColonne -= 1

                    If ControllaFormatoNumerico = True Then
                        Dim NUMERO As Boolean = False
                        For Each riga As GridViewRow In GridView.Rows
                            For i As Integer = 1 To indiceColonne
                                If IsNumeric(riga.Cells(i - 1).Text) Then
                                    If InStr(riga.Cells(i - 1).Text, ",") <> 0 Then
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, i, CDec(riga.Cells(i - 1).Text), 4)
                                    Else
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, i, riga.Cells(i - 1).Text, 0)
                                    End If

                                Else
                                    .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, i, ConvertiCaratteriItalia(IfNull(riga.Cells(i - 1).Text, "")), 0)
                                End If

                            Next
                            indiceRighe += 1
                        Next
                    Else
                        For Each riga As GridViewRow In GridView.Rows
                            For i As Integer = 1 To indiceColonne
                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, i, ConvertiCaratteriItalia(IfNull(riga.Cells(i - 1).Text, "")), 0)
                            Next
                            indiceRighe += 1
                        Next
                    End If
                    .CloseFile()
                End With

                If CreaZip = True Then
                    'COSTRUZIONE ZIPFILE
                    Dim objCrc32 As New Crc32()
                    Dim strmZipOutputStream As ZipOutputStream
                    Dim strFile As String
                    strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls")
                    Dim strmFile As FileStream = File.OpenRead(strFile)
                    Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
                    strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                    Dim sFile As String = Path.GetFileName(strFile)
                    Dim theEntry As ZipEntry = New ZipEntry(sFile)
                    Dim fi As New FileInfo(strFile)
                    theEntry.DateTime = fi.LastWriteTime
                    theEntry.Size = strmFile.Length
                    strmFile.Close()
                    objCrc32.Reset()
                    objCrc32.Update(abyBuffer)
                    theEntry.Crc = objCrc32.Value
                    Dim zipfic As String
                    zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".zip")
                    strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
                    strmZipOutputStream.SetLevel(6)
                    strmZipOutputStream.PutNextEntry(theEntry)
                    strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                    strmZipOutputStream.Finish()
                    strmZipOutputStream.Close()
                    File.Delete(strFile)
                    Dim FileNameZip As String = FileName & ".zip"
                    Return FileNameZip
                Else
                    Return FileName & ".xls"
                End If

            Catch ex As Exception
                Return ""
            End Try
        End Function
        Function EliminaLink(ByVal html As String) As String
            Dim html_old As String = html
            Try
                Dim check As Integer = 0
                Dim nuovoHtml_parte1 As String = ""
                Dim nuovoHtml_parte2 As String = ""
                Dim nuovoHtml As String = html
                While check = 0
                    Dim inizioStringa As Integer = 0
                    Dim fineStringa As Integer = nuovoHtml.IndexOf("<a href")
                    If fineStringa <> -1 Then
                        nuovoHtml_parte1 = nuovoHtml.Substring(inizioStringa, fineStringa)
                        nuovoHtml_parte2 = nuovoHtml.Substring(fineStringa + 1)
                        Dim finestringa_parte2 As Integer = nuovoHtml_parte2.IndexOf(">")
                        nuovoHtml = Replace(nuovoHtml_parte1 & nuovoHtml_parte2.Substring(finestringa_parte2 + 1), "</a>", "")
                    Else
                        check = 1
                    End If
                End While
                Return nuovoHtml
            Catch ex As Exception
                Return html_old
            End Try
        End Function

        '##################################################################'
        '--------------ELIMINA TAG FONT DA UNA STRINGA------------'
        '##################################################################'
        Function EliminaFont(ByVal html As String) As String
            Dim html_old As String = html
            Try
                Dim check As Integer = 0
                Dim nuovoHtml_parte1 As String = ""
                Dim nuovoHtml_parte2 As String = ""
                Dim nuovoHtml As String = html
                While check = 0
                    Dim inizioStringa As Integer = 0
                    Dim fineStringa As Integer = nuovoHtml.IndexOf("<font")
                    If fineStringa <> -1 Then
                        nuovoHtml_parte1 = nuovoHtml.Substring(inizioStringa, fineStringa)
                        nuovoHtml_parte2 = nuovoHtml.Substring(fineStringa + 1)
                        Dim finestringa_parte2 As Integer = nuovoHtml_parte2.IndexOf(">")
                        nuovoHtml = Replace(nuovoHtml_parte1 & nuovoHtml_parte2.Substring(finestringa_parte2 + 1), "</font>", "")
                    Else
                        check = 1
                    End If
                End While
                Return nuovoHtml
            Catch ex As Exception
                Return html_old
            End Try
        End Function
        '##################################################################'
        '##################################################################'
        Function EsportaExcelAutomaticoDaDataGrid(ByVal datagrid As DataGrid, Optional ByVal nomeFile As String = "", Optional ByVal FattoreLarghezzaColonne As Decimal = 4.75, Optional ByVal EliminazioneLink As Boolean = True, Optional ByVal Titolo As String = "", Optional ByVal creazip As Boolean = True) As String
            Try
                'CONTO IL NUMERO DELLE COLONNE DEL DATAGRID
                Dim NumeroColonneDatagrid As Integer = datagrid.Columns.Count
                'CONTO IL NUMERO DELLE COLONNE VISIBILI DEL DATAGRID
                Dim NumeroColonneVisibiliDatagrid As Integer = 0
                For indiceColonna As Integer = 0 To NumeroColonneDatagrid - 1 Step 1
                    If datagrid.Columns.Item(indiceColonna).Visible = True Then
                        NumeroColonneVisibiliDatagrid = NumeroColonneVisibiliDatagrid + 1
                    End If
                Next
                'INIZIALIZZAZIONE RIGHE, COLONNE E FILENAME
                Dim FileExcel As New CM.ExcelFile
                Dim indiceRighe As Long = 0
                Dim IndiceColonne As Long = 1
                Dim FileName As String = nomeFile & Format(Now, "yyyyMMddHHmmss")
                Dim LarghezzaMinimaColonna As Integer = 30
                Dim allineamentoCella As String = "Center"
                Dim LarghezzaDataGrid As Integer = Max(datagrid.Width.Value, 200)
                Dim TipoLarghezzaDataGrid As UnitType = datagrid.Width.Type
                Dim LarghezzaColonnaHeader As Decimal = 0
                Dim LarghezzaColonnaItem As Decimal = 0
                'SETTO A ZERO LA VARIABILE DELLE RIGHE
                indiceRighe = 0
                With FileExcel
                    'CREO IL FILE 
                    .CreateFile(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls"))
                    .PrintGridLines = False
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsTopMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsLeftMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsRightMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsBottomMargin, 1.5)
                    .SetDefaultRowHeight(14)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsNoFormat)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold + CM.ExcelFile.FontFormatting.xlsUnderline)
                    'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                    Dim indiceVisibile As Integer = 1
                    If Titolo <> "" Then
                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, 1, 1, Titolo, 0)
                        indiceRighe += 1
                        IndiceColonne += 1
                    End If
                    For j = 0 To NumeroColonneDatagrid - 1 Step 1
                        'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                        If datagrid.Columns.Item(j).Visible = True Then
                            If datagrid.Columns.Item(j).HeaderStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid = UnitType.Pixel Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value * 100 / LarghezzaDataGrid
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid = UnitType.Percentage Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            End If

                            If datagrid.Columns.Item(j).ItemStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid = UnitType.Pixel Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value * 100 / LarghezzaDataGrid
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid = UnitType.Percentage Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            End If
                            LarghezzaMinimaColonna = FattoreLarghezzaColonne * Max(LarghezzaColonnaHeader, LarghezzaColonnaItem)
                            .SetColumnWidth(indiceVisibile, indiceVisibile, Max(LarghezzaMinimaColonna, 30))
                            'GESTIONE DELLE INTESTAZIONI

                            .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, IndiceColonne, indiceVisibile, datagrid.Columns.Item(j).HeaderText, 0)
                            indiceVisibile = indiceVisibile + 1
                        End If
                    Next
                    indiceRighe = indiceRighe + 1
                    For Each Items As DataGridItem In datagrid.Items
                        indiceRighe = indiceRighe + 1
                        Dim Cella As Integer = 0
                        For IndiceColonne = 0 To NumeroColonneDatagrid - 1
                            'RIEPILOGO ALLINEAMENTI
                            'CENTER 2,LEFT 1,RIGHT 3
                            'CONSIDERO DI FORMATO NUMERICO TUTTE LE CELLE CON ALLINEAMENTO A DESTRA
                            If datagrid.Columns.Item(IndiceColonne).Visible = True Then
                                allineamentoCella = datagrid.Columns.Item(IndiceColonne).ItemStyle.HorizontalAlign
                                Select Case EliminazioneLink
                                    Case False
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                            Case 3
                                                If Not String.IsNullOrEmpty(Replace(Items.Cells(IndiceColonne).Text, "&nbsp;", "")) Then

                                                    If Items.Cells(IndiceColonne).Text.IndexOf("&euro;") = "-1" And Items.Cells(IndiceColonne).Text.IndexOf("€") = "-1" And Items.Cells(IndiceColonne).Text.IndexOf("/") = "-1" Then
                                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", ""), 4)
                                                    ElseIf (Items.Cells(IndiceColonne).Text.IndexOf("&euro;") <> "-1" Or Items.Cells(IndiceColonne).Text.IndexOf("€") <> "-1") And Items.Cells(IndiceColonne).Text.IndexOf("/") = "-1" Then
                                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(Replace(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", ""), "&euro;", ""), "€", ""), 7)
                                                    ElseIf Items.Cells(IndiceColonne).Text.IndexOf("/") <> "-1" Then
                                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                                    End If
                                                Else
                                                    .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                                End If

                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                        End Select

                                    Case True
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 3
                                                If Not String.IsNullOrEmpty(Replace(Items.Cells(IndiceColonne).Text, "&nbsp;", "")) Then

                                                    If EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("&euro;") = "-1" And EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("€") = "-1" And EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("/") = "-1" Then
                                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
                                                    ElseIf (EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("&euro;") <> "-1" Or EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("€") <> "-1") And EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("/") = "-1" Then
                                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(Replace(EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), "&euro;", ""), "€", ""), 7)
                                                    ElseIf EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("/") <> "-1" Then
                                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                                    End If
                                                Else
                                                    .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                                End If

                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                        End Select
                                    Case Else
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 3
                                                If EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("&euro;") = "-1" And EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("€") = "-1" And EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("/") = "-1" Then
                                                    .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", ""), 4)
                                                ElseIf (EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("&euro;") <> "-1" Or EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("€") <> "-1") And EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("/") = "-1" Then
                                                    .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(Replace(EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), "&euro;", ""), "€", ""), 7)
                                                ElseIf EliminaLink(Items.Cells(IndiceColonne).Text).IndexOf("/") <> "-1" Then
                                                    .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)

                                                End If
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                        End Select
                                End Select
                                Cella = Cella + 1
                            End If
                        Next

                    Next
                    'CHIUSURA FILE
                    .CloseFile()
                End With
                If creazip = True Then
                    'COSTRUZIONE ZIPFILE
                    Dim objCrc32 As New Crc32()
                    Dim strmZipOutputStream As ZipOutputStream

                    Dim strFile As String
                    strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls")
                    Dim strmFile As FileStream = File.OpenRead(strFile)
                    Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
                    strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                    Dim sFile As String = Path.GetFileName(strFile)
                    Dim theEntry As ZipEntry = New ZipEntry(sFile)
                    Dim fi As New FileInfo(strFile)
                    theEntry.DateTime = fi.LastWriteTime
                    theEntry.Size = strmFile.Length
                    strmFile.Close()
                    objCrc32.Reset()
                    objCrc32.Update(abyBuffer)
                    theEntry.Crc = objCrc32.Value
                    Dim zipfic As String
                    zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".zip")
                    strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
                    strmZipOutputStream.SetLevel(6)
                    strmZipOutputStream.PutNextEntry(theEntry)
                    strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                    strmZipOutputStream.Finish()
                    strmZipOutputStream.Close()
                    File.Delete(strFile)
                    Dim FileNameZip As String = FileName & ".zip"
                    Return FileNameZip
                Else
                    Dim FileNameExcel As String = FileName & ".xls"
                    Return FileNameExcel
                End If
            Catch ex As Exception
                Return ""
            End Try
        End Function        'Function EsportaExcelAutomaticoDaDataGrid(ByVal datagrid As DataGrid, Optional ByVal nomeFile As String = "", Optional ByVal FattoreLarghezzaColonne As Decimal = 4.75, Optional ByVal EliminazioneLink As Boolean = True) As String
        '    Try
        '        'CONTO IL NUMERO DELLE COLONNE DEL DATAGRID
        '        Dim NumeroColonneDatagrid As Integer = datagrid.Columns.Count
        '        'CONTO IL NUMERO DELLE COLONNE VISIBILI DEL DATAGRID
        '        Dim NumeroColonneVisibiliDatagrid As Integer = 0
        '        For indiceColonna As Integer = 0 To NumeroColonneDatagrid - 1 Step 1
        '            If datagrid.Columns.Item(indiceColonna).Visible = True Then
        '                NumeroColonneVisibiliDatagrid = NumeroColonneVisibiliDatagrid + 1
        '            End If
        '        Next
        '        'INIZIALIZZAZIONE RIGHE, COLONNE E FILENAME
        '        Dim FileExcel As New CM.ExcelFile
        '        Dim indiceRighe As Long = 0
        '        Dim IndiceColonne As Long = 1
        '        Dim FileName As String = nomeFile & Format(Now, "yyyyMMddHHmmss")
        '        Dim LarghezzaMinimaColonna As Integer = 30
        '        Dim allineamentoCella As String = "Center"
        '        Dim LarghezzaDataGrid As Integer = Max(datagrid.Width.Value, 200)
        '        Dim TipoLarghezzaDataGrid As UnitType = datagrid.Width.Type
        '        Dim LarghezzaColonnaHeader As Decimal = 0
        '        Dim LarghezzaColonnaItem As Decimal = 0
        '        'SETTO A ZERO LA VARIABILE DELLE RIGHE
        '        indiceRighe = 0
        '        With FileExcel
        '            'CREO IL FILE 
        '            .CreateFile(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls"))
        '            .PrintGridLines = False
        '            .SetMargin(CM.ExcelFile.MarginTypes.xlsTopMargin, 1.5)
        '            .SetMargin(CM.ExcelFile.MarginTypes.xlsLeftMargin, 1.5)
        '            .SetMargin(CM.ExcelFile.MarginTypes.xlsRightMargin, 1.5)
        '            .SetMargin(CM.ExcelFile.MarginTypes.xlsBottomMargin, 1.5)
        '            .SetDefaultRowHeight(14)
        '            .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsNoFormat)
        '            .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold)
        '            .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold + CM.ExcelFile.FontFormatting.xlsUnderline)
        '            'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
        '            Dim indiceVisibile As Integer = 1
        '            For j = 0 To NumeroColonneDatagrid - 1 Step 1
        '                'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
        '                If datagrid.Columns.Item(j).Visible = True Then
        '                    If datagrid.Columns.Item(j).HeaderStyle.Width.Type = UnitType.Pixel Then
        '                        If TipoLarghezzaDataGrid = UnitType.Pixel Then
        '                            LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value * 100 / LarghezzaDataGrid
        '                        Else
        '                            LarghezzaColonnaHeader = 0
        '                        End If
        '                    Else
        '                        If TipoLarghezzaDataGrid = UnitType.Percentage Then
        '                            LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value
        '                        Else
        '                            LarghezzaColonnaHeader = 0
        '                        End If
        '                    End If

        '                    If datagrid.Columns.Item(j).ItemStyle.Width.Type = UnitType.Pixel Then
        '                        If TipoLarghezzaDataGrid = UnitType.Pixel Then
        '                            LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value * 100 / LarghezzaDataGrid
        '                        Else
        '                            LarghezzaColonnaHeader = 0
        '                        End If
        '                    Else
        '                        If TipoLarghezzaDataGrid = UnitType.Percentage Then
        '                            LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value
        '                        Else
        '                            LarghezzaColonnaHeader = 0
        '                        End If
        '                    End If
        '                    LarghezzaMinimaColonna = FattoreLarghezzaColonne * Max(LarghezzaColonnaHeader, LarghezzaColonnaItem)
        '                    .SetColumnWidth(indiceVisibile, indiceVisibile, Max(LarghezzaMinimaColonna, 30))
        '                    'GESTIONE DELLE INTESTAZIONI
        '                    .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, IndiceColonne, indiceVisibile, datagrid.Columns.Item(j).HeaderText, 0)
        '                    indiceVisibile = indiceVisibile + 1
        '                End If
        '            Next
        '            indiceRighe = indiceRighe + 1
        '            For Each Items As DataGridItem In datagrid.Items
        '                indiceRighe = indiceRighe + 1
        '                Dim Cella As Integer = 0
        '                For IndiceColonne = 0 To NumeroColonneDatagrid - 1
        '                    'RIEPILOGO ALLINEAMENTI
        '                    'CENTER 2,LEFT 1,RIGHT 3
        '                    'CONSIDERO DI FORMATO NUMERICO TUTTE LE CELLE CON ALLINEAMENTO A DESTRA
        '                    If datagrid.Columns.Item(IndiceColonne).Visible = True Then
        '                        allineamentoCella = datagrid.Columns.Item(IndiceColonne).ItemStyle.HorizontalAlign
        '                        Select Case EliminazioneLink
        '                            Case False
        '                                Select Case allineamentoCella
        '                                    Case 1
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
        '                                    Case 2
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
        '                                    Case 3
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", ""), 4)
        '                                    Case Else
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
        '                                End Select

        '                            Case True
        '                                Select Case allineamentoCella
        '                                    Case 1
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
        '                                    Case 2
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
        '                                    Case 3
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
        '                                    Case Else
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
        '                                End Select
        '                            Case Else
        '                                Select Case allineamentoCella
        '                                    Case 1
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
        '                                    Case 2
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
        '                                    Case 3
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
        '                                    Case Else
        '                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
        '                                End Select
        '                        End Select
        '                        Cella = Cella + 1
        '                    End If
        '                Next

        '            Next
        '            'CHIUSURA FILE
        '            .CloseFile()
        '        End With
        '        'COSTRUZIONE ZIPFILE
        '        Dim objCrc32 As New Crc32()
        '        Dim strmZipOutputStream As ZipOutputStream

        '        Dim strFile As String
        '        strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls")
        '        Dim strmFile As FileStream = File.OpenRead(strFile)
        '        Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
        '        strmFile.Read(abyBuffer, 0, abyBuffer.Length)
        '        Dim sFile As String = Path.GetFileName(strFile)
        '        Dim theEntry As ZipEntry = New ZipEntry(sFile)
        '        Dim fi As New FileInfo(strFile)
        '        theEntry.DateTime = fi.LastWriteTime
        '        theEntry.Size = strmFile.Length
        '        strmFile.Close()
        '        objCrc32.Reset()
        '        objCrc32.Update(abyBuffer)
        '        theEntry.Crc = objCrc32.Value
        '        Dim zipfic As String
        '        zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".zip")
        '        strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
        '        strmZipOutputStream.SetLevel(6)
        '        strmZipOutputStream.PutNextEntry(theEntry)
        '        strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
        '        strmZipOutputStream.Finish()
        '        strmZipOutputStream.Close()
        '        File.Delete(strFile)
        '        Dim FileNameZip As String = FileName & ".zip"
        '        Return FileNameZip
        '    Catch ex As Exception
        '        Return ""
        '    End Try
        'End Function

        Function MultiEsportaExcelAutomaticoDaDataGrid(ByVal datagrid As DataGrid, ByVal datagrid2 As DataGrid, Optional ByVal nomeFile As String = "", Optional ByVal FattoreLarghezzaColonne As Decimal = 4.75, Optional ByVal FattoreLarghezzaColonne2 As Decimal = 4.75, Optional ByVal EliminazioneLink As Boolean = True, Optional ByVal NcolonnaOttimizzazione1 As Integer = 0, Optional ByVal NcolonnaOttimizzazione2 As Integer = 0, Optional ByVal creazip As Boolean = True) As String
            'IN QUESTA VERSIONE è PREVISTO L'ESPORTAZIONE DI 2 DATAGRID
            Try
                'CONTO IL NUMERO DELLE COLONNE DEL DATAGRID
                Dim NumeroColonneDatagrid As Integer = datagrid.Columns.Count
                'CONTO IL NUMERO DELLE COLONNE VISIBILI DEL DATAGRID
                Dim NumeroColonneVisibiliDatagrid As Integer = 0
                For indiceColonna As Integer = 0 To NumeroColonneDatagrid - 1 Step 1
                    If datagrid.Columns.Item(indiceColonna).Visible = True Then
                        NumeroColonneVisibiliDatagrid = NumeroColonneVisibiliDatagrid + 1
                    End If
                Next
                'INIZIALIZZAZIONE RIGHE, COLONNE E FILENAME
                Dim FileExcel As New CM.ExcelFile
                Dim indiceRighe As Long = 0
                Dim IndiceColonne As Long = 1
                Dim FileName As String = nomeFile & Format(Now, "yyyyMMddHHmmss")
                Dim LarghezzaMinimaColonna As Integer = 30
                Dim allineamentoCella As String = "Center"
                Dim LarghezzaDataGrid As Integer = Max(datagrid.Width.Value, 200)
                Dim TipoLarghezzaDataGrid As UnitType = datagrid.Width.Type
                Dim LarghezzaColonnaHeader As Decimal = 0
                Dim LarghezzaColonnaItem As Decimal = 0

                'CONTO IL NUMERO DELLE COLONNE DEL DATAGRID
                Dim NumeroColonneDatagrid2 As Integer = datagrid2.Columns.Count
                'CONTO IL NUMERO DELLE COLONNE VISIBILI DEL DATAGRID
                Dim NumeroColonneVisibiliDatagrid2 As Integer = 0
                For indiceColonna2 As Integer = 0 To NumeroColonneDatagrid2 - 1 Step 1
                    If datagrid2.Columns.Item(indiceColonna2).Visible = True Then
                        NumeroColonneVisibiliDatagrid2 = NumeroColonneVisibiliDatagrid2 + 1
                    End If
                Next
                'INIZIALIZZAZIONE RIGHE, COLONNE E FILENAME
                Dim IndiceColonne2 As Long = 1
                Dim LarghezzaMinimaColonna2 As Integer = 30
                Dim LarghezzaDataGrid2 As Integer = Max(datagrid.Width.Value, 200)
                Dim TipoLarghezzaDataGrid2 As UnitType = datagrid.Width.Type
                Dim LarghezzaColonnaHeader2 As Decimal = 0
                Dim LarghezzaColonnaItem2 As Decimal = 0
                'SETTO A ZERO LA VARIABILE DELLE RIGHE
                indiceRighe = 0
                With FileExcel
                    'CREO IL FILE 
                    .CreateFile(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls"))
                    .PrintGridLines = False
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsTopMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsLeftMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsRightMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsBottomMargin, 1.5)
                    .SetDefaultRowHeight(14)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsNoFormat)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold + CM.ExcelFile.FontFormatting.xlsUnderline)
                    'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                    Dim indiceVisibile As Integer = 1 + NcolonnaOttimizzazione1
                    For j = 0 To NumeroColonneDatagrid - 1 Step 1
                        'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                        If datagrid.Columns.Item(j).Visible = True Then
                            If datagrid.Columns.Item(j).HeaderStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid = UnitType.Pixel Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value * 100 / LarghezzaDataGrid
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid = UnitType.Percentage Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            End If

                            If datagrid.Columns.Item(j).ItemStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid = UnitType.Pixel Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value * 100 / LarghezzaDataGrid
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid = UnitType.Percentage Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            End If
                            LarghezzaMinimaColonna = FattoreLarghezzaColonne * Max(LarghezzaColonnaHeader, LarghezzaColonnaItem)
                            .SetColumnWidth(indiceVisibile, indiceVisibile, Max(LarghezzaMinimaColonna, 30))
                            'GESTIONE DELLE INTESTAZIONI
                            .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, IndiceColonne, indiceVisibile, datagrid.Columns.Item(j).HeaderText, 0)
                            indiceVisibile = indiceVisibile + 1
                        End If
                    Next
                    indiceRighe = indiceRighe + 1
                    For Each Items As DataGridItem In datagrid.Items
                        indiceRighe = indiceRighe + 1
                        Dim Cella As Integer = 0 + NcolonnaOttimizzazione1
                        For IndiceColonne = 0 To NumeroColonneDatagrid - 1
                            'RIEPILOGO ALLINEAMENTI
                            'CENTER 2,LEFT 1,RIGHT 3
                            'CONSIDERO DI FORMATO NUMERICO TUTTE LE CELLE CON ALLINEAMENTO A DESTRA
                            If datagrid.Columns.Item(IndiceColonne).Visible = True Then
                                allineamentoCella = datagrid.Columns.Item(IndiceColonne).ItemStyle.HorizontalAlign
                                Select Case EliminazioneLink
                                    Case False
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", ""), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                        End Select

                                    Case True
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                        End Select
                                    Case Else
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                        End Select
                                End Select
                                Cella = Cella + 1
                            End If
                        Next

                    Next
                    indiceRighe = indiceRighe + 5
                    IndiceColonne = indiceRighe
                    indiceVisibile = 1 + NcolonnaOttimizzazione2
                    For j = 0 To NumeroColonneDatagrid2 - 1 Step 1
                        'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                        If datagrid2.Columns.Item(j).Visible = True Then
                            If datagrid2.Columns.Item(j).HeaderStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid2 = UnitType.Pixel Then
                                    LarghezzaColonnaHeader2 = datagrid2.Columns.Item(j).HeaderStyle.Width.Value * 100 / LarghezzaDataGrid2
                                Else
                                    LarghezzaColonnaHeader2 = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid2 = UnitType.Percentage Then
                                    LarghezzaColonnaHeader2 = datagrid2.Columns.Item(j).HeaderStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader2 = 0
                                End If
                            End If

                            If datagrid2.Columns.Item(j).ItemStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid2 = UnitType.Pixel Then
                                    LarghezzaColonnaHeader2 = datagrid2.Columns.Item(j).ItemStyle.Width.Value * 100 / LarghezzaDataGrid2
                                Else
                                    LarghezzaColonnaHeader2 = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid2 = UnitType.Percentage Then
                                    LarghezzaColonnaHeader2 = datagrid2.Columns.Item(j).ItemStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader2 = 0
                                End If
                            End If
                            LarghezzaMinimaColonna = FattoreLarghezzaColonne2 * Max(LarghezzaColonnaHeader2, LarghezzaColonnaItem2)
                            .SetColumnWidth(indiceVisibile, indiceVisibile, Max(LarghezzaMinimaColonna2, 30))
                            'GESTIONE DELLE INTESTAZIONI
                            .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, IndiceColonne, indiceVisibile, datagrid2.Columns.Item(j).HeaderText, 0)
                            indiceVisibile = indiceVisibile + 1
                        End If
                    Next
                    indiceRighe = indiceRighe + 1
                    For Each Items As DataGridItem In datagrid2.Items
                        indiceRighe = indiceRighe + 1
                        Dim Cella As Integer = 0 + NcolonnaOttimizzazione2
                        For IndiceColonne = 0 To NumeroColonneDatagrid2 - 1
                            'RIEPILOGO ALLINEAMENTI
                            'CENTER 2,LEFT 1,RIGHT 3
                            'CONSIDERO DI FORMATO NUMERICO TUTTE LE CELLE CON ALLINEAMENTO A DESTRA
                            If datagrid2.Columns.Item(IndiceColonne).Visible = True Then
                                allineamentoCella = datagrid2.Columns.Item(IndiceColonne).ItemStyle.HorizontalAlign
                                Select Case EliminazioneLink
                                    Case False
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", ""), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", ""), 0)
                                        End Select

                                    Case True
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                        End Select
                                    Case Else
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, 0), "&nbsp;", "")), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(Items.Cells(IndiceColonne).Text, ""), "&nbsp;", "")), 0)
                                        End Select
                                End Select
                                Cella = Cella + 1
                            End If
                        Next

                    Next
                    'CHIUSURA FILE
                    .CloseFile()
                End With
                If creazip = True Then
                    'COSTRUZIONE ZIPFILE
                    Dim objCrc32 As New Crc32()
                    Dim strmZipOutputStream As ZipOutputStream
                    Dim strFile As String
                    strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls")
                    Dim strmFile As FileStream = File.OpenRead(strFile)
                    Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
                    strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                    Dim sFile As String = Path.GetFileName(strFile)
                    Dim theEntry As ZipEntry = New ZipEntry(sFile)
                    Dim fi As New FileInfo(strFile)
                    theEntry.DateTime = fi.LastWriteTime
                    theEntry.Size = strmFile.Length
                    strmFile.Close()
                    objCrc32.Reset()
                    objCrc32.Update(abyBuffer)
                    theEntry.Crc = objCrc32.Value
                    Dim zipfic As String
                    zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".zip")
                    strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
                    strmZipOutputStream.SetLevel(6)
                    strmZipOutputStream.PutNextEntry(theEntry)
                    strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                    strmZipOutputStream.Finish()
                    strmZipOutputStream.Close()
                    File.Delete(strFile)
                    Dim FileNameZip As String = FileName & ".zip"
                    Return FileNameZip
                Else
                    Dim FileNameExcel As String = FileName & ".xls"
                    Return FileNameExcel
                End If
            Catch ex As Exception
                Return ""
            End Try
        End Function

        '--------------STAMPA PDF DA DATAGRID------------'
        '###############################################'

        Function StampaDataGridPDF(ByVal datagrid As DataGrid, ByVal nomeStampa As String, Optional ByVal titolo As String = "", Optional ByVal footer As String = "", Optional ByVal larghezzaPagina As Integer = 1200, Optional ByVal orientamentoLandscape As Boolean = True, Optional ByVal mostraNumeriPagina As Boolean = True, Optional ByVal contaRighe As Boolean = False, Optional ByVal righe As Integer = 25, Optional ByVal ripetiIntestazioniSoloConContaRighe As Boolean = False, Optional ByVal sottotitolo As String = "") As String
            Try
                'RENDERCONTROL DEL DATAGRID
                Dim Html As String = ""
                Dim stringWriter As New System.IO.StringWriter
                Dim sourcecode As New HtmlTextWriter(stringWriter)
                stringWriter = New System.IO.StringWriter
                sourcecode = New HtmlTextWriter(stringWriter)
                datagrid.RenderControl(sourcecode)
                sourcecode.Flush()
                Html = Html & stringWriter.ToString
                'ELIMINAZIONE EVENTUALI HYPERLINK
                Html = EliminaLink(Html)
                If contaRighe = True And righe > 0 Then
                    Dim TitoliDaRipetere As String = ""
                    If ripetiIntestazioniSoloConContaRighe = True Then
                        Dim indiceInizioPrimoTR As Integer = Html.IndexOf("</tr>")
                        TitoliDaRipetere = Left(Html, indiceInizioPrimoTR + 5)
                    End If


                    Dim htmldaConsiderare As String = Html
                    Dim nuovoHtml As String = ""
                    Dim indiceTRiniziale As Integer = 0
                    Dim indiceTRfinale As Integer = 0
                    Dim contatoreRighe As Integer = 0
                    Dim stringaAdd As String = ""
                    While indiceTRiniziale <> -1
                        indiceTRiniziale = htmldaConsiderare.IndexOf("<tr ")
                        If indiceTRiniziale <> -1 Then
                            contatoreRighe += 1
                            htmldaConsiderare = Right(htmldaConsiderare, Len(htmldaConsiderare) - indiceTRiniziale)
                            indiceTRfinale = htmldaConsiderare.IndexOf("</tr>") + 5
                            If indiceTRfinale <> -1 Then
                                stringaAdd = Left(htmldaConsiderare, indiceTRfinale)
                                htmldaConsiderare = Right(htmldaConsiderare, Len(htmldaConsiderare) - indiceTRfinale)
                            End If
                            If contatoreRighe = righe Then
                                nuovoHtml &= stringaAdd & "</table><p style='page-break-after: always'>&nbsp;</p><table>" & TitoliDaRipetere & Left(Html, Html.IndexOf("<tr ") - 1)
                                contatoreRighe = 0
                            Else
                                nuovoHtml &= stringaAdd
                            End If
                        End If
                    End While
                    Html = Left(Html, Html.IndexOf("<tr ") - 1) & nuovoHtml
                End If
                Dim url As String = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\")
                Dim pdfConverter1 As PdfConverter = New PdfConverter
                Dim Licenza As String = System.Web.HttpContext.Current.Session.Item("LicenzaHtmlToPdf")
                If Licenza <> "" Then
                    pdfConverter1.LicenseKey = Licenza
                End If
                pdfConverter1.PageWidth = larghezzaPagina
                If orientamentoLandscape = True Then
                    pdfConverter1.PdfDocumentOptions.PdfPageOrientation = PDFPageOrientation.Landscape
                Else
                    pdfConverter1.PdfDocumentOptions.PdfPageOrientation = PDFPageOrientation.Portrait
                End If
                pdfConverter1.PdfDocumentOptions.PdfPageSize = PdfPageSize.A4
                pdfConverter1.PdfDocumentOptions.PdfCompressionLevel = PdfCompressionLevel.NoCompression
                pdfConverter1.PdfDocumentOptions.ShowHeader = True
                pdfConverter1.PdfDocumentOptions.ShowFooter = True
                pdfConverter1.PdfDocumentOptions.LeftMargin = 10
                pdfConverter1.PdfDocumentOptions.RightMargin = 15
                pdfConverter1.PdfDocumentOptions.TopMargin = 10
                pdfConverter1.PdfDocumentOptions.BottomMargin = 10
                pdfConverter1.PdfDocumentOptions.GenerateSelectablePdf = True
                pdfConverter1.PdfHeaderOptions.HeaderHeight = 40
                pdfConverter1.PdfHeaderOptions.HeaderText = UCase(titolo)
                pdfConverter1.PdfHeaderOptions.HeaderTextFontName = "Arial"
                pdfConverter1.PdfHeaderOptions.HeaderTextFontSize = 7
                pdfConverter1.PdfHeaderOptions.HeaderTextAlign = HorizontalTextAlign.Left
                pdfConverter1.PdfHeaderOptions.HeaderTextFontType = PdfFontType.HelveticaBold
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleText = UCase(sottotitolo)
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleTextFontName = "Arial"
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleTextFontSize = 6
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleTextColor = Drawing.ColorTranslator.FromHtml("#507CD1")
                pdfConverter1.PdfHeaderOptions.HeaderBackColor = Drawing.Color.WhiteSmoke
                pdfConverter1.PdfHeaderOptions.HeaderTextColor = Drawing.ColorTranslator.FromHtml("#507CD1")
                pdfConverter1.PdfFooterOptions.FooterText = titolo & ", stampato da " & System.Web.HttpContext.Current.Session.Item("NOME_OPERATORE") & " il " & Format(Now, "dd/MM/yyyy") & " alle " & Format(Now, "HH:mm")
                pdfConverter1.PdfFooterOptions.FooterTextFontName = "Arial"
                pdfConverter1.PdfFooterOptions.FooterTextFontType = PdfFontType.HelveticaBold
                pdfConverter1.PdfFooterOptions.FooterTextFontSize = 8
                'pdfConverter1.PdfFooterOptions.FooterText = UCase(footer)
                pdfConverter1.PdfFooterOptions.FooterTextColor = Drawing.ColorTranslator.FromHtml("#507CD1")
                pdfConverter1.PdfFooterOptions.FooterHeight = 30
                pdfConverter1.PdfFooterOptions.DrawFooterLine = True
                If mostraNumeriPagina = True Then
                    pdfConverter1.PdfFooterOptions.PageNumberText = "Pag."
                    pdfConverter1.PdfFooterOptions.PageNumberTextFontName = "Arial"
                    pdfConverter1.PdfFooterOptions.PageNumberTextFontSize = 8
                    pdfConverter1.PdfFooterOptions.ShowPageNumber = True
                    pdfConverter1.PdfFooterOptions.PageNumberTextColor = Drawing.ColorTranslator.FromHtml("#507CD1")
                Else
                    pdfConverter1.PdfFooterOptions.PageNumberText = ""
                    pdfConverter1.PdfFooterOptions.ShowPageNumber = False
                End If
                Dim nomefile As String = nomeStampa & Format(Now, "yyyyMMddHHmmss") & ".pdf"
                pdfConverter1.SavePdfFromHtmlStringToFile(Html, url & nomefile)
                Return nomefile
            Catch ex As Exception
                Return ""
            End Try
        End Function
        Public Function FormatoDataDB(ByVal dataItaliana As String) As String
            Dim dataDB As String = ""
            If IsDate(dataItaliana) Then
                dataDB = Right(dataItaliana, 4) & Mid(dataItaliana, 4, 2) & Left(dataItaliana, 2)
            End If
            Return dataDB
        End Function
        Function MultiStampaDataGridPDF(ByVal datagrid As DataGrid, ByVal datagrid2 As DataGrid, ByVal nomeStampa As String, Optional ByVal titolo As String = "", Optional ByVal intestazione As String = "", Optional ByVal intestazione2 As String = "", Optional ByVal footer As String = "", Optional ByVal larghezzaPagina As Integer = 1200, Optional ByVal orientamentoLandscape As Boolean = True, Optional ByVal mostraNumeriPagina As Boolean = True) As String
            Try
                'RENDERCONTROL DEL DATAGRID
                Dim Html As String = "<p><center><b><span style=""font-family:Arial; font-size:xx-medium"">" & intestazione & "</span></b></center></p>"
                Dim stringWriter As New System.IO.StringWriter
                Dim sourcecode As New HtmlTextWriter(stringWriter)
                stringWriter = New System.IO.StringWriter
                sourcecode = New HtmlTextWriter(stringWriter)
                datagrid.RenderControl(sourcecode)
                sourcecode.Flush()
                Html = Html & stringWriter.ToString
                stringWriter = New System.IO.StringWriter
                sourcecode = New HtmlTextWriter(stringWriter)
                datagrid2.RenderControl(sourcecode)
                sourcecode.Flush()
                Html = Html & "<p style='page-break-before: always'>&nbsp;</p><p><center><b><span style=""font-family:Arial; font-size:xx-medium"">" & intestazione2 & "</span></b></center></p>" & stringWriter.ToString
                'ELIMINAZIONE EVENTUALI HYPERLINK
                Html = EliminaLink(Html)
                Dim url As String = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\")
                Dim pdfConverter1 As PdfConverter = New PdfConverter
                Dim Licenza As String = System.Web.HttpContext.Current.Session.Item("LicenzaHtmlToPdf")
                If Licenza <> "" Then
                    pdfConverter1.LicenseKey = Licenza
                End If
                pdfConverter1.PageWidth = larghezzaPagina
                If orientamentoLandscape = True Then
                    pdfConverter1.PdfDocumentOptions.PdfPageOrientation = PDFPageOrientation.Landscape
                Else
                    pdfConverter1.PdfDocumentOptions.PdfPageOrientation = PDFPageOrientation.Portrait
                End If
                pdfConverter1.PdfDocumentOptions.PdfPageSize = PdfPageSize.A4
                pdfConverter1.PdfDocumentOptions.PdfCompressionLevel = PdfCompressionLevel.NoCompression
                pdfConverter1.PdfDocumentOptions.ShowHeader = True
                pdfConverter1.PdfDocumentOptions.ShowFooter = True
                pdfConverter1.PdfDocumentOptions.LeftMargin = 10
                pdfConverter1.PdfDocumentOptions.RightMargin = 15
                pdfConverter1.PdfDocumentOptions.TopMargin = 10
                pdfConverter1.PdfDocumentOptions.BottomMargin = 10
                pdfConverter1.PdfDocumentOptions.GenerateSelectablePdf = True
                pdfConverter1.PdfHeaderOptions.HeaderHeight = 60
                pdfConverter1.PdfHeaderOptions.HeaderText = UCase(titolo)
                pdfConverter1.PdfHeaderOptions.HeaderTextFontName = "Arial"
                pdfConverter1.PdfHeaderOptions.HeaderTextFontSize = 14
                pdfConverter1.PdfHeaderOptions.HeaderTextFontType = PdfFontType.HelveticaBold
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleTextFontType = PdfFontType.HelveticaBold
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleTextFontSize = 10
                pdfConverter1.PdfHeaderOptions.HeaderBackColor = Drawing.Color.WhiteSmoke
                pdfConverter1.PdfHeaderOptions.HeaderTextColor = Drawing.Color.Blue
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleText = ""
                pdfConverter1.PdfHeaderOptions.HeaderSubtitleTextColor = Drawing.Color.Red
                pdfConverter1.PdfFooterOptions.FooterText = UCase(footer)
                pdfConverter1.PdfFooterOptions.FooterTextColor = Drawing.Color.Blue
                pdfConverter1.PdfFooterOptions.DrawFooterLine = False
                If mostraNumeriPagina = True Then
                    pdfConverter1.PdfFooterOptions.PageNumberText = "PAG."
                    pdfConverter1.PdfFooterOptions.ShowPageNumber = True
                Else
                    pdfConverter1.PdfFooterOptions.PageNumberText = ""
                    pdfConverter1.PdfFooterOptions.ShowPageNumber = False
                End If
                Dim nomefile As String = nomeStampa & Format(Now, "yyyyMMddHHmmss") & ".pdf"
                pdfConverter1.SavePdfFromHtmlStringToFile(Html, url & nomefile)
                Return nomefile
            Catch ex As Exception
                Return ""
            End Try
        End Function
        '###############################################'
        '--------------CONTROLLI IBAN E PIVA------------'
        '###############################################'
        '--------------CONTROLLO IBAN-------------------'
        Function ControllaIBAN(ByVal iban As String) As Boolean
            ControllaIBAN = True

            '---SE L'IBAN NON è DI 27 CARATTERI è ERRATO---'
            If Len(iban) <> 27 Then
                ControllaIBAN = False
                Exit Function
            End If

            '---RIPORTO IN UCASE L'IBAN---'
            iban = UCase(iban)

            '---SPOSTO I PRIMI 4 CARATTERI DELL'IBAN ALLA FINE DELL'IBAN STESSO---'
            iban = Mid(iban, 5, Len(iban) - 4) & Mid(iban, 1, 4)

            '---DEFINISCO LA STRINGA DI CARATTERI ALFABETICI UTILIZZATI NELL'IBAN---'
            Dim stringaCaratteri As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
            Dim stringaCaratteriConsentita As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
            Dim i As Integer


            Dim numero As String = ""
            For i = 1 To 27

                '---CONTROLLO CHE I CARATTERI SIANO ALFANUMERICI---'
                If InStr(1, stringaCaratteriConsentita, Mid(iban, i, 1)) = 0 Then
                    ControllaIBAN = False
                    Exit Function
                End If


                '---CONTROLLO CHE IL PRIMO CARATTERE (ADESSO 24ESIMO) E 
                '---IL SECONDO CARATTERE (ADESSO 25ESIMO) SIANO
                '---OBBLIGATORIAMENTE DEI CARATTERI ALFABETICI
                If i = 24 Or i = 25 Then
                    If InStr(1, stringaCaratteri, Mid(iban, i, 1)) = 0 Then
                        ControllaIBAN = False
                        Exit Function
                    End If
                End If
                '----------------------------------------------------------'

                '---CONTROLLO CHE IL TERZO CARATTERE (ADESSO 26ESIMO) E 
                '---IL QUARTO CARATTERE (ADESSO 27ESIMO) SIANO
                '---OBBLIGATORIAMENTE DEI CARATTERI NUMERICI 
                '---(SONO I CARATTERI DI CONTROLLO)

                If i = 26 Or i = 27 Then
                    If InStr(1, stringaCaratteri, Mid(iban, i, 1)) > 0 Then
                        ControllaIBAN = False
                        Exit Function
                    End If
                End If
                '-----------------------------------------------------------'


                '---SOSTITUISCO AD OGNI CARATTERE NUMERICO IL NUMERO STESSO
                '---E SOSTITUISCO AD OGNI CARATTERE ALFABETICO IL NUMERO RELATIVO
                '---PARTENDO DA A=10,B=11, ECC...
                If InStr(1, stringaCaratteri, Mid(iban, i, 1)) > 0 Then
                    Dim posizione As Integer = InStr(1, stringaCaratteri, Mid(iban, i, 1))
                    numero = numero & CStr(posizione + 9)
                Else
                    numero = numero & CStr(Mid(iban, i, 1))
                End If

            Next

            '---IL NUMERO OTTENUTO è ADESSO LA STRINGA SOSTITUTIVA DELL'IBAN E VA DIVISO PER 97
            '---SE IL RESTO è 1 L'IBAN è FORMALMENTE CORRETTO 
            '---SICCOME IL NUMERO è TROPPO GRANDE SI PROCEDE CON UNA DIVISIONE PROGRESSIVA IN 
            '---QUESTA MANIERA: SI FRAMMENTA IL NUMERO IN N PARTI DA 8 CARATTERI CIASCUNA PIù 
            '---L'ULTIMA PARTE CON 8 O MENO CARATTERI.
            '---SI DIVIDE IL PRIMO NUMERO OTTENUTO PER 97 E  SE NE RICAVA IL RESTO. AL RESTO 
            '---SI ACCODA LA SECONDA PARTE E SI PROCEDE CON LA DIVISIONE PER 97 E SI PROSEGUE
            '---COSì FINO ALL'ULTIMA PARTE. SI CONTROLLA QUINDI CHE IL RESTO DI QUESTE N+1 DIVISIONI
            '---SIA 1. 
            '###################################################################################
            '#  ESEMPIO PRATICO--> IBAN: IT60Q0123412345000000753XYZ
            '#  DOPO AVERE SPOSTATO I PRIMI 4 CARATTERI AL TERMINE DELLA STRINGA:
            '#  Q0123412345000000753XYZIT60
            '#  SI SOTITUISCE AD OGNI CARATTERE ALFABETICO IL RELATIVO NUMERO (SEGUENDO L'ORDINE
            '#  A=10,B=11,C=12,D=13,ECC..), 
            '#  QUINDI AD ESEMPIO ALLA Q SI ASSOCIA IL NUMERO 26, OTTENENDO LA SEGUENTE STRINGA:
            '#  260123412345000000753333435182960
            '#  SI DIVIDE LA STRINGA OGNI 8 CARATTERI OTTENENDO 5 PARTI
            '#  26012341  23450000  00753333  43518296  0
            '#  SI DIVIDE LA PRIMA PARTE PER 97 OTTENENDO RESTO PARI A 45
            '#  SI ACCODA A 45 LA SECONDA PARTE OTTENENDO 4523450000
            '#  SI DIVIDE 4523450000 PER 97 OTTENENDO RESTO PARI A 15
            '#  SI ACCODA A 15 LA TERZA PARTE OTTENENDO 1500753333 
            '#  SI DIVIDE 1500753333 PER 97 OTTENENDO RESTO PARI A 82
            '#  SI ACCODA A 82 LA QUARTA PARTE OTTENENDO 8243518296
            '#  SI DIVIDE 8243518296 PER 97 OTTENENDO RESTO PARI A 68
            '#  SI ACCODA A 68 LA QUINTA PARTE OTTENENDO 680
            '#  SI DIVIDE 680 PER 97 OTTENENDO RESTO PARI A 1
            '#  QUINDI L'IBAN è FORMALMENTE CORRETTO
            '###################################################################################

            Dim resto As String = ""
            While Len(numero) > 8
                Dim parte As String = resto & Mid(numero, 1, 8)
                Dim subparte As Long = CLng(parte)
                resto = CStr(subparte Mod 97)
                numero = Right(numero, Len(numero) - 8)

            End While
            Dim restoIBAN As Integer
            If Len(numero) > 0 Then
                restoIBAN = CLng(resto & numero) Mod 97
            Else
                restoIBAN = resto
            End If
            If CInt(restoIBAN) <> 1 Then
                ControllaIBAN = False
            End If
        End Function

        '###############################################'


        '-------------CONTROLLO PARTITA IVA-----------------'
        '###################################################'
        Function ControllaPIVA(ByVal piva As String) As Boolean
            ControllaPIVA = True
            '---CONTROLLO CHE LA PIVA INSERITA SIA LUNGA 11 CARATTERI---'
            If Len(Trim(piva)) <> 11 Or Not IsNumeric(Trim(piva)) Then
                ControllaPIVA = False
                Exit Function
            End If
            '-----------------------------------------------------------'




            '---X=SOMMA DEGLI ELEMENTI DISPARI---'
            Dim X As Integer = CInt(Mid(piva, 1, 1)) + CInt(Mid(piva, 3, 1)) + CInt(Mid(piva, 5, 1)) + CInt(Mid(piva, 7, 1)) + CInt(Mid(piva, 9, 1)) + CInt(Mid(piva, 11, 1))

            '---Y=2*(SOMMA DEGLI ELEMENTI PARI)---'
            Dim Y As Integer = 2 * (CInt(Mid(piva, 2, 1)) + CInt(Mid(piva, 4, 1)) + CInt(Mid(piva, 6, 1)) + CInt(Mid(piva, 8, 1)) + CInt(Mid(piva, 10, 1)))

            '---Z=NUMERO DI CIFRE IN POSIZIONE PARI MAGGIORI O UGUALI A 5---'
            Dim i As Integer = 0
            Dim Z As Integer = 0
            For i = 2 To 10
                If CInt(Mid(piva, i, 1)) >= 5 Then
                    Z = Z + 1
                End If
                i = i + 1
            Next

            '---CALCOLO T MOD 10 DELLA SOMMA DI X Y Z---'
            Dim T As Integer = (X + Y + Z) Mod 10

            '---SE T è DIVERSO DA 0 LA PIVA è FORMALMENTE SCORRETTA---'
            If T <> 0 Then
                ControllaPIVA = False
            End If

        End Function
        '###############################################'
#End Region

#Region "Telerik"
        Public Sub caricaDropdownListTelerik(ByVal query As String, ByVal combobox As RadDropDownList, ByVal value As String, ByVal descrizione As String, Optional spazio_vuoto As Boolean = True, Optional valueSpVuoto As String = "-1", Optional itemVuoto As String = "")
            Dim ConOpenNow As Boolean = False
            combobox.ClearSelection()
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = query
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            Dim dt As New Data.DataTable
            da.Fill(dt)
            da.Dispose()
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
            Dim item As New DropDownListItem()
            If spazio_vuoto = True Then
                item = New DropDownListItem
                item.Text = itemVuoto
                item.Value = valueSpVuoto
                combobox.Items.Add(item)
            End If
            For Each row As Data.DataRow In dt.Rows
                item = New DropDownListItem()
                item.Text = IfNull(row.Item(descrizione), "")
                item.Value = IfNull(row.Item(value), "")
                combobox.Items.Add(item)
            Next
        End Sub
        Public Function CreaBarCode128(ByVal Codice As String) As String
            Try
                Dim barcode As RadBarcode = New RadBarcode()

                barcode.Height = 100
                barcode.Type = Telerik.Web.UI.BarcodeType.Code128
                barcode.LineWidth = 2
                barcode.OutputType = BarcodeOutputType.EmbeddedPNG
                barcode.ShowText = False
                barcode.Text = Codice

                Dim image As System.Drawing.Image = barcode.GetImage()
                Dim NomeFile As String = "CodeBar_" & Codice & "_" & Format(Now, "yyyyMMddHHmmss") & ".png"
                image.Save(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\") & NomeFile)
                CreaBarCode128 = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\") & NomeFile
            Catch ex As Exception
                CreaBarCode128 = "ERRORE: " & ex.Message
            End Try
        End Function
#End Region

#Region "SepaComLock"
        ''' <summary>
        ''' Esegue il lock sui db senza for update nowait
        ''' </summary>
        ''' <param name="pageid"> id della pagina (di norma pageid.value as hiddenfield)</param>
        ''' <param name="key">Nome della tabella concatenato a _id (trattino basso ed id)</param>
        ''' <returns> Lock del record per registrazione tabella semafori</returns>
        ''' <remarks></remarks>
        Public Function EseguiLock(pageid As String, key As String) As RispostaLockUnlock
            Dim X As New SepacomLock
            Dim risp As RispostaLockUnlock = Nothing
            Dim ret As String
            ret = X.GestioneLock("lock", pageid, key)
            risp = JsonHelper(Of RispostaLockUnlock).JsonDeserialize(ret)
            Return risp
        End Function
        Public Function EseguiReleaseLock(pageid As String, key As String) As RispostaLockUnlock
            Dim X As New SepacomLock
            Dim risp As RispostaLockUnlock = Nothing
            Dim ret As String
            ret = X.GestioneLock("releaselock", pageid, key)
            risp = JsonHelper(Of RispostaLockUnlock).JsonDeserialize(ret)
            Return risp
        End Function
        Public Function getPageId() As String
            getPageId = ""
            Dim R As New Random(DateTime.Now.Millisecond + DateTime.Now.Second * 1000 + DateTime.Now.Minute * 60000 + DateTime.Now.Minute * 3600000)
            getPageId = R.Next()
        End Function
        Public Function getLockSessione() As Boolean
            getLockSessione = False
            Dim ConOpenNow As Boolean = False
            Dim par As New CM.Global
            Dim connData As New CM.datiConnessione(par, False, False)

            Try
                If par.OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    par.OracleConn.Open()
                    par.cmd = par.OracleConn.CreateCommand()
                End If
                par.cmd.CommandText = "SELECT LOCK_SESSIONE FROM SEPACOM_LOCK_OP WHERE ID_OPERATORE = " & System.Web.HttpContext.Current.Session.Item("ID_OPERATORE")
                Dim LockSessione As String = par.IfNull(par.cmd.ExecuteScalar, "")
                If LockSessione = System.Web.HttpContext.Current.Session.Item("LOCK_SESSIONE") Then
                    getLockSessione = True
                End If
                If ConOpenNow = True Then
                    par.OracleConn.Close()
                End If
            Catch ex As Exception
                getLockSessione = False
                If ConOpenNow = True Then
                    par.OracleConn.Close()
                End If
            Finally
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function
        Public Function getLockPage(ByVal IdPageKey As String) As Boolean
            getLockPage = False
            Dim ConOpenNow As Boolean = False
            Dim par As New CM.Global
            Dim connData As New CM.datiConnessione(par, False, False)
            Try
                If par.OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    par.OracleConn.Open()
                    par.cmd = par.OracleConn.CreateCommand()
                End If
                If Not String.IsNullOrEmpty(Trim(IdPageKey)) Then
                    If IdPageKey <> "ERRORE" Then
                        par.cmd.CommandText = "SELECT LOCK_PAGE FROM SEPACOM_LOCK_OP WHERE ID_OPERATORE = " & System.Web.HttpContext.Current.Session.Item("ID_OPERATORE")
                        Dim LockPage As String = par.IfNull(par.cmd.ExecuteScalar, "")
                        If LockPage = par.DeCripta(IdPageKey) Then
                            getLockPage = True
                        End If
                    End If
                End If
                par.cmd.CommandText = "UPDATE SEPACOM_LOCK_OP SET LOCK_PAGE = NULL WHERE ID_OPERATORE = " & System.Web.HttpContext.Current.Session.Item("ID_OPERATORE")
                par.cmd.ExecuteNonQuery()
                If ConOpenNow = True Then
                    par.OracleConn.Close()
                End If
            Catch ex As Exception
                getLockPage = False
                If ConOpenNow = True Then
                    par.OracleConn.Close()
                End If
            Finally
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function
#End Region
#Region "ValoriPredefiniti"
        Public successo As String = "Operazione effettuata con successo! "
        Public correlato As String = "Attenzione... Impossibile eliminare il dato poichè risulta vincolato ad altri dati! "
        Public esiste As String = "Attenzione... Dato già esistente! "
        Public Messaggio_Elemento_Elimina As String = "Eliminare l\'elemento selezionato?"
        Public Messaggio_Elemento_Modifica As String = "Modificare l\'elemento selezionato?"
        Public Messaggio_Elemento_No_Selezione As String = "Nessun elemento selezionato!"
        Public Messaggio_Elemento_Presente As String = "Elemento già presente!"
        Public Messaggio_Operazione_Eff As String = "Operazione effettuata!"
        Public Messaggio_Uscita_Messaggio As String = "Sono state apportate delle modifiche. Uscire senza salvare?"
        Public Messaggio_Campi_Obbligatori As String = "Campi obbligatori!"
        Public Messaggio_Funzione_Non_Disponibile As String = "Funzione non disponibile al momento!"
        Public Messaggio_Dato_Correlato As String = "Impossibile eliminare il dato poichè risulta vincolato ad altri dati!"
        Public Messaggio_Dato_Esistente As String = "Dato già esistente!"
        Public Messaggio_BlockDB As String = "Il dato è utilizzato da altri operatori, non saranno possibili altre modifiche"
        Public Messaggio_NoExport As String = "Nessun risultato da esportare!"
        Public Messaggio_NoGo As String = "Chiudere la pagina in cui si sta lavorando prima di Procedere!"
#End Region

#Region "Antonello"
        Public Function getIdOggettoTipoAllegatiWs(ByVal Oggetto As String, Optional ByVal idOggetto As String = "") As String
            getIdOggettoTipoAllegatiWs = ""
            Dim ConOpenNow As Boolean = False
            Dim filtroOggetto As String = ""
            Try
                If OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                End If
                If Not String.IsNullOrEmpty(idOggetto) Then
                    filtroOggetto = " AND ID_OGGETTO = " & idOggetto
                End If
                cmd.CommandText = "SELECT ID " _
                                & "FROM SISCOM_MI.ALLEGATI_WS_TIPI " _
                                & "WHERE UPPER(DESCRIZIONE) = " & insDbValue(Oggetto.ToUpper, True) _
                                & filtroOggetto
                Dim MyReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                If MyReader.Read Then
                    getIdOggettoTipoAllegatiWs = IfNull(MyReader("ID"), "")
                End If
                MyReader.Close()
                If ConOpenNow = True Then
                    OracleConn.Close()
                End If
            Catch ex As Exception
                getIdOggettoTipoAllegatiWs = ""
                If ConOpenNow = True Then
                    OracleConn.Close()
                End If
            End Try
        End Function
        Public Function getIdOggettoAllegatiWs(ByVal Oggetto As String) As String
            getIdOggettoAllegatiWs = ""
            Dim ConOpenNow As Boolean = False
            Try
                If OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                End If
                cmd.CommandText = "SELECT ID " _
                                & "FROM SISCOM_MI.ALLEGATI_WS_OGGETTI " _
                                & "WHERE UPPER(DESCRIZIONE) = " & insDbValue(Oggetto.ToUpper, True)
                Dim MyReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                If MyReader.Read Then
                    getIdOggettoAllegatiWs = IfNull(MyReader("ID"), "")
                End If
                MyReader.Close()
                If ConOpenNow = True Then
                    OracleConn.Close()
                End If
            Catch ex As Exception
                getIdOggettoAllegatiWs = ""
                If ConOpenNow = True Then
                    OracleConn.Close()
                End If
            End Try
        End Function

        ''' <summary>Procedura per l'inserimento di una immagine nel file rtf</summary>
        ''' <param name="img">Immagine da codificare in hex</param>
        Public Function InsertImageToRTF(ByVal img As System.Drawing.Image) As String
            Dim str As String = "{\pict\pngblip\picw24\pich24 " + imageToHex(img) + "}"
            InsertImageToRTF = str
        End Function

        Private Function imageToHex(ByVal img As System.Drawing.Image) As String
            Dim ms As New MemoryStream()
            img.Save(ms, System.Drawing.Imaging.ImageFormat.Jpeg)
            Dim bytes As Byte() = ms.ToArray()
            Dim hex As String = BitConverter.ToString(bytes)
            Return hex.Replace("-", "")
        End Function

        Public Sub AllegaDocumentoWS(ByVal FileDocument As String, ByVal Titolo As String, ByVal cartella As String, ByVal DescrizioneAllegato As String,
                                     ByVal TipoAllegato As String, ByVal Oggetto As String, ByVal IdOggetto As String, ByVal PathCartella As String,
                                     Optional ByVal extraAllegati As Boolean = True, Optional NomeFileAlternativo As String = "")
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            If String.IsNullOrEmpty(Trim(PathCartella)) Then
                cmd.CommandText = "SELECT PATH FROM SISCOM_MI.ALLEGATI_WS_CARTELLE " _
                                & "WHERE ID = " & cartella
                Dim MyReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                If MyReader.Read Then
                    PathCartella = IfNull(MyReader("PATH"), "")
                End If
                MyReader.Close()
            End If
            'If System.IO.Path.GetExtension(Titolo) <> ".zip" And System.IO.Path.GetExtension(Titolo) <> ".rar" Then
            '    Titolo = ZipAllegatoDownload(Titolo, Titolo)
            'End If
            If Not Directory.Exists(System.Web.HttpContext.Current.Server.MapPath(PathCartella)) Then
                Directory.CreateDirectory(System.Web.HttpContext.Current.Server.MapPath(PathCartella))
            End If
            Dim percorso As String = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\")
            Dim nomeTitolo As String = ""
            If Not String.IsNullOrEmpty(NomeFileAlternativo) Then
                File.Copy(percorso & Titolo, System.Web.HttpContext.Current.Server.MapPath(PathCartella & "\" & NomeFileAlternativo))
                nomeTitolo = NomeFileAlternativo
            Else
                File.Copy(percorso & Titolo, System.Web.HttpContext.Current.Server.MapPath(PathCartella & "\" & Titolo))
                nomeTitolo = Titolo
            End If

            If extraAllegati Then
                cmd.CommandText = "SELECT PATH FROM SISCOM_MI.ALLEGATI_WS_CARTELLE " _
                                & "WHERE ID = " & cartella
                Dim MyReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
                If MyReader.Read Then
                    PathCartella = IfNull(MyReader("PATH"), "")
                End If
                MyReader.Close()
            End If
            If IdOggetto.ToString.ToUpper = "NULL" Then IdOggetto = ""
            cmd.CommandText = "SELECT SISCOM_MI.SEQ_ALLEGATI_WS.NEXTVAL FROM DUAL"
            Dim AllegaDocumento As String = cmd.ExecuteScalar
            cmd.CommandText = "INSERT INTO SISCOM_MI.ALLEGATI_WS (ID, ID_ALLEGATO, NOME, CARTELLA, PATH, " _
                            & "DESCRIZIONE, TIPO, OGGETTO, ID_OGGETTO, STATO, ID_OPERATORE, DATA_ORA, FL_PROTOCOLLO) VALUES " _
                            & "(" & AllegaDocumento & ", null, " & insDbValue(nomeTitolo, True) & ", " & cartella & ", " _
                            & insDbValue(PathCartella & "/" & nomeTitolo, True) & ", " & insDbValue(DescrizioneAllegato, True) & ", " _
                            & insDbValue(TipoAllegato, True) & ", " & insDbValue(Oggetto, True) & ", " & insDbValue(IdOggetto, True) & ", 0, " _
                            & insDbValue(System.Web.HttpContext.Current.Session.Item("ID_OPERATORE"), True) & ", " & insDbValue(Format(Now, "yyyyMMddHHmmss"), True) & ", 0)"
            cmd.ExecuteNonQuery()
            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
        End Sub
        Private Function ZipAllegatoDownload(ByVal strFile As String, ByVal nomeFile As String) As String
            ZipAllegatoDownload = ""
            Try
                Dim zipFic As String = ""
                Dim estensioneAllegato As String = System.IO.Path.GetExtension(strFile)
                Dim AllegatoCompleto As String = nomeFile.Replace(estensioneAllegato, ".zip")
                Dim objCrc32 As New Crc32()
                Dim strmZipOutputStream As ZipOutputStream

                Dim strmFile As FileStream = File.OpenRead(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & strFile))
                Dim abyBuffer(strmFile.Length - 1) As Byte
                strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                Dim sFile As String = Path.GetFileName(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & strFile))
                Dim theEntry As ZipEntry = New ZipEntry(sFile)
                Dim fi As New FileInfo(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & strFile))
                theEntry.DateTime = fi.LastWriteTime
                theEntry.Size = strmFile.Length
                strmFile.Close()
                objCrc32.Reset()
                objCrc32.Update(abyBuffer)
                theEntry.Crc = objCrc32.Value
                If File.Exists(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\") & AllegatoCompleto) Then
                    File.Delete(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & strFile) & AllegatoCompleto)
                End If
                zipFic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\") & AllegatoCompleto
                strmZipOutputStream = New ZipOutputStream(File.Create(zipFic))
                strmZipOutputStream.SetLevel(6)
                strmZipOutputStream.PutNextEntry(theEntry)
                strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                strmZipOutputStream.Finish()
                strmZipOutputStream.Close()
                ZipAllegatoDownload = AllegatoCompleto
            Catch ex As Exception
                ZipAllegatoDownload = ""
                Session.Add("ERRORE", "Provenienza: GestioneAllegati - btnDownload_Click - " & ex.Message)
                Response.Redirect("../Errore.aspx", False)
            End Try
        End Function

        Public Sub RimuoviNodoMenuAsp(ByVal menu As WebControls.Menu, ByVal nodo As String)
            If Not IsNothing(menu) And Not String.IsNullOrEmpty(nodo) Then
                For i As Integer = 0 To menu.Items.Count - 1
                    If menu.Items(i).Value.ToString = nodo Then
                        menu.Items.Remove(menu.Items(i))
                        Exit Sub
                    Else
                        If RimuoviNodoFiglioMenuAsp(menu.Items(i), nodo) Then
                            Exit Sub
                        End If
                    End If
                Next
            End If
        End Sub
        Private Function RimuoviNodoFiglioMenuAsp(ByVal subnodo As MenuItem, ByVal nodo As String) As Boolean
            RimuoviNodoFiglioMenuAsp = False
            If (subnodo Is Nothing) Then
                Exit Function
            End If
            For i As Integer = 0 To subnodo.ChildItems.Count - 1
                If subnodo.ChildItems(i).Value.ToString = nodo Then
                    subnodo.ChildItems.Remove(subnodo.ChildItems(i))
                    RimuoviNodoFiglioMenuAsp = True
                    Exit Function
                Else
                    RimuoviNodoFiglioMenuAsp(subnodo.ChildItems(i), nodo)
                End If
            Next
        End Function
        Public Function AggiustaTestoUcFirst(ByVal stringa As String) As String
            Dim ucfirst As String = ""
            Dim temp_string As String = ""
            stringa = stringa & " "
            While InStr(stringa, " ")
                temp_string = Left(stringa, InStr(stringa, " ") - 1)
                ucfirst = ucfirst & UCase(Mid(temp_string, 1, 1))
                ucfirst = ucfirst & LCase(Mid(temp_string, 2)) & " "
                stringa = Right(stringa, Len(stringa) - InStr(stringa, " "))
            End While
            ucfirst = ucfirst & UCase(Mid(stringa, 1, 1))
            ucfirst = ucfirst & Mid(stringa, 2)
            ucfirst = Trim(ucfirst)
            stringa = ucfirst
            Return stringa
        End Function
        Function EsportaExcelDaDT(ByVal dt As Data.DataTable, ByVal nomeFile As String, Optional ByVal EliminazioneLink As Boolean = True, Optional ByVal creazip As Boolean = True, Optional ByVal controlloTipoDati As Boolean = True, Optional ByVal DataNelFileName As Boolean = True, Optional ByVal ColonneIntere As String = "", Optional ColonneTesto As String = "") As String
            Try
                Dim NumeroColonneDT As Integer = dt.Columns.Count
                Dim FileExcel As New CM.ExcelFile
                Dim indiceRighe As Long = 0
                Dim IndiceColonne As Integer = 1
                Dim IndiceIntestazione As Integer = 1
                Dim FileName As String
                If DataNelFileName = False Then
                    FileName = nomeFile
                Else
                    FileName = nomeFile & Format(Now, "yyyyMMddHHmmss")
                End If



                indiceRighe = 0
                With FileExcel
                    'CREO IL FILE 
                    .CreateFile(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls"))
                    .PrintGridLines = False
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsTopMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsLeftMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsRightMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsBottomMargin, 1.5)
                    .SetDefaultRowHeight(14)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsNoFormat)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold + CM.ExcelFile.FontFormatting.xlsUnderline)
                    For j = 0 To NumeroColonneDT - 1 Step 1
                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, IndiceColonne, IndiceIntestazione, dt.Columns.Item(j).ColumnName, 0)
                        IndiceIntestazione = IndiceIntestazione + 1
                    Next
                    indiceRighe = indiceRighe + 1
                    For Each riga As Data.DataRow In dt.Rows
                        indiceRighe = indiceRighe + 1
                        Dim Cella As Integer = 0
                        For IndiceColonne = 0 To NumeroColonneDT - 1
                            Select Case EliminazioneLink
                                Case False
                                    If IsNumeric(riga.Item(IndiceColonne)) Then
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(riga.Item(IndiceColonne), 0), "&nbsp;", ""), 4)
                                    Else
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, Replace(IfNull(riga.Item(IndiceColonne), 0), "&nbsp;", ""), 0)
                                    End If
                                Case True
                                    If IsNumeric(riga.Item(IndiceColonne)) Then
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(riga.Item(IndiceColonne), 0), "&nbsp;", "")), 4)
                                    Else
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(riga.Item(IndiceColonne), 0), "&nbsp;", "")), 0)
                                    End If
                                Case Else
                                    If IsNumeric(riga.Item(IndiceColonne)) Then
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(riga.Item(IndiceColonne), 0), "&nbsp;", "")), 4)
                                    Else
                                        .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(Replace(IfNull(riga.Item(IndiceColonne), 0), "&nbsp;", "")), 0)
                                    End If
                            End Select
                            Cella = Cella + 1
                        Next
                    Next
                    'CHIUSURA FILE
                    .CloseFile()
                End With
                If creazip = True Then
                    'COSTRUZIONE ZIPFILE
                    Dim objCrc32 As New Crc32()
                    Dim strmZipOutputStream As ZipOutputStream
                    Dim strFile As String
                    strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls")
                    Dim strmFile As FileStream = File.OpenRead(strFile)
                    Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
                    strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                    Dim sFile As String = Path.GetFileName(strFile)
                    Dim theEntry As ZipEntry = New ZipEntry(sFile)
                    Dim fi As New FileInfo(strFile)
                    theEntry.DateTime = fi.LastWriteTime
                    theEntry.Size = strmFile.Length
                    strmFile.Close()
                    objCrc32.Reset()
                    objCrc32.Update(abyBuffer)
                    theEntry.Crc = objCrc32.Value
                    Dim zipfic As String
                    zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".zip")
                    strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
                    strmZipOutputStream.SetLevel(6)
                    strmZipOutputStream.PutNextEntry(theEntry)
                    strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                    strmZipOutputStream.Finish()
                    strmZipOutputStream.Close()
                    File.Delete(strFile)
                    Dim FileNameZip As String = FileName & ".zip"
                    Return FileNameZip
                Else
                    Dim FileNameXls As String = FileName & ".xls"
                    Return FileNameXls
                End If
            Catch ex As Exception
                Return ""
            End Try
        End Function
        Function EsportaExcelDaDTWithDatagrid(ByVal dt As Data.DataTable, ByVal datagrid As DataGrid, ByVal nomeFile As String, Optional ByVal FattoreLarghezzaColonne As Decimal = 4.75, Optional ByVal EliminazioneLink As Boolean = True, Optional ByVal WitdhColum As Decimal = 30, Optional ByVal creazip As Boolean = True) As String
            Try
                'CONTO IL NUMERO DELLE COLONNE DEL DATATABLE
                Dim NumeroColonneDatagrid As Integer = datagrid.Columns.Count
                'CONTO IL NUMERO DELLE COLONNE VISIBILI DEL DATAGRID
                Dim NumeroColonneVisibiliDatagrid As Integer = 0
                For indiceColonna As Integer = 0 To NumeroColonneDatagrid - 1 Step 1
                    If datagrid.Columns.Item(indiceColonna).Visible = True Then
                        NumeroColonneVisibiliDatagrid += 1
                    End If
                Next
                'INIZIALIZZAZIONE RIGHE, COLONNE E FILENAME
                Dim FileExcel As New CM.ExcelFile
                Dim indiceRighe As Long = 0
                Dim IndiceColonne As Integer = 1
                Dim FileName As String = nomeFile & Format(Now, "yyyyMMddHHmmss")
                Dim LarghezzaMinimaColonna As Integer = 30
                Dim allineamentoCella As String = "Center"
                Dim LarghezzaDataGrid As Integer = Max(datagrid.Width.Value, 200)
                Dim TipoLarghezzaDataGrid As UnitType = datagrid.Width.Type
                Dim LarghezzaColonnaHeader As Decimal = 0
                Dim LarghezzaColonnaItem As Decimal = 0
                'SETTO A ZERO LA VARIABILE DELLE RIGHE
                indiceRighe = 0
                With FileExcel
                    'CREO IL FILE 
                    .CreateFile(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls"))
                    .PrintGridLines = False
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsTopMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsLeftMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsRightMargin, 1.5)
                    .SetMargin(CM.ExcelFile.MarginTypes.xlsBottomMargin, 1.5)
                    .SetDefaultRowHeight(14)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsNoFormat)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold)
                    .SetFont("Arial", 10, CM.ExcelFile.FontFormatting.xlsBold + CM.ExcelFile.FontFormatting.xlsUnderline)
                    'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                    Dim indiceVisibile As Integer = 1
                    For j = 0 To NumeroColonneDatagrid - 1 Step 1
                        'GESTIONE LARGHEZZA DELLE COLONNE TRAMITE FATTORE DATO IN INPUT OPZIONALE
                        If datagrid.Columns.Item(j).Visible = True Then
                            If datagrid.Columns.Item(j).HeaderStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid = UnitType.Pixel Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value * 1000 / LarghezzaDataGrid
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid = UnitType.Percentage Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).HeaderStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            End If
                            If datagrid.Columns.Item(j).ItemStyle.Width.Type = UnitType.Pixel Then
                                If TipoLarghezzaDataGrid = UnitType.Pixel Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value * 1000 / LarghezzaDataGrid
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            Else
                                If TipoLarghezzaDataGrid = UnitType.Percentage Then
                                    LarghezzaColonnaHeader = datagrid.Columns.Item(j).ItemStyle.Width.Value
                                Else
                                    LarghezzaColonnaHeader = 0
                                End If
                            End If
                            LarghezzaMinimaColonna = FattoreLarghezzaColonne * Max(LarghezzaColonnaHeader, LarghezzaColonnaItem)
                            .SetColumnWidth(indiceVisibile, indiceVisibile, Max(LarghezzaMinimaColonna, WitdhColum))
                            'GESTIONE DELLE INTESTAZIONI
                            .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont1, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, IndiceColonne, indiceVisibile, datagrid.Columns.Item(j).HeaderText, 0)
                            indiceVisibile = indiceVisibile + 1
                        End If
                    Next
                    indiceRighe = indiceRighe + 1
                    For Each riga As Data.DataRow In dt.Rows
                        indiceRighe = indiceRighe + 1
                        Dim Cella As Integer = 0
                        For IndiceColonne = 0 To NumeroColonneDatagrid - 1
                            'RIEPILOGO ALLINEAMENTI
                            'CENTER 2,LEFT 1,RIGHT 3
                            'CONSIDERO DI FORMATO NUMERICO TUTTE LE CELLE CON ALLINEAMENTO A DESTRA
                            If datagrid.Columns.Item(IndiceColonne).Visible = True Then
                                allineamentoCella = datagrid.Columns.Item(IndiceColonne).ItemStyle.HorizontalAlign
                                Select Case EliminazioneLink
                                    Case False
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, IfNull(riga.Item(IndiceColonne), ""), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, IfNull(riga.Item(IndiceColonne), ""), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, IfNull(riga.Item(IndiceColonne), ""), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, IfNull(riga.Item(IndiceColonne), ""), 0)
                                        End Select
                                    Case True
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 0)
                                        End Select
                                    Case Else
                                        Select Case allineamentoCella
                                            Case 1
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsLeftAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 0)
                                            Case 2
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 0)
                                            Case 3
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsNumber, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsRightAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 4)
                                            Case Else
                                                .WriteValue(CM.ExcelFile.ValueTypes.xlsText, CM.ExcelFile.CellFont.xlsFont0, CM.ExcelFile.CellAlignment.xlsCentreAlign, CM.ExcelFile.CellHiddenLocked.xlsNormal, indiceRighe, Cella + 1, EliminaLink(IfNull(riga.Item(IndiceColonne), "")), 0)
                                        End Select
                                End Select
                                Cella = Cella + 1
                            End If
                        Next
                    Next
                    'CHIUSURA FILE
                    .CloseFile()
                End With
                If creazip = True Then
                    'COSTRUZIONE ZIPFILE
                    Dim objCrc32 As New Crc32()
                    Dim strmZipOutputStream As ZipOutputStream
                    Dim strFile As String
                    strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".xls")
                    Dim strmFile As FileStream = File.OpenRead(strFile)
                    Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
                    strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                    Dim sFile As String = Path.GetFileName(strFile)
                    Dim theEntry As ZipEntry = New ZipEntry(sFile)
                    Dim fi As New FileInfo(strFile)
                    theEntry.DateTime = fi.LastWriteTime
                    theEntry.Size = strmFile.Length
                    strmFile.Close()
                    objCrc32.Reset()
                    objCrc32.Update(abyBuffer)
                    theEntry.Crc = objCrc32.Value
                    Dim zipfic As String
                    zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & FileName & ".zip")
                    strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
                    strmZipOutputStream.SetLevel(6)
                    strmZipOutputStream.PutNextEntry(theEntry)
                    strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                    strmZipOutputStream.Finish()
                    strmZipOutputStream.Close()
                    File.Delete(strFile)
                    Dim FileNameZip As String = FileName & ".zip"
                    Return FileNameZip
                Else
                    Dim FileNameExcel As String = FileName & ".xls"
                    Return FileNameExcel
                End If
            Catch ex As Exception
                Return ""
            End Try
        End Function
        Function DataTableALCSV(ByVal table As Data.DataTable, ByVal filename As String, ByVal sepcar As String, Optional ByVal creazip As Boolean = True, Optional ByVal CreaIntestazioneDaColumnTitle As Boolean = True) As String
            Dim sr As System.IO.StreamWriter = Nothing
            Try
                'CREO IL FILE CSV
                Dim nomefile As String = filename & Format(Now, "yyyyMMddHHmmss") & ".csv"
                sr = New System.IO.StreamWriter(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & nomefile), False, System.Text.Encoding.Default)
                Dim sep As String = sepcar
                Dim intestazione As String = ""
                Dim flag_inizio As Integer = 0
                'RIEMPIO L'INTESTAZIONE
                If CreaIntestazioneDaColumnTitle Then
                    For Each col As Data.DataColumn In table.Columns
                        'CONTROLLO IL PRIMO INSERIMENTO PER EVITARE IL CASO "SYLK: formato di file non valido"
                        If flag_inizio = 0 Then
                            intestazione = intestazione & """" & col.ColumnName & """" & sep
                            flag_inizio = 1
                        Else
                            intestazione = intestazione & col.ColumnName & sep
                        End If
                    Next
                    sr.WriteLine(intestazione)
                End If
                'RIEMPIO LE RIGHE CON I DATI
                For Each row As Data.DataRow In table.Rows
                    Dim stringa As String = ""
                    For Each col As Data.DataColumn In table.Columns
                        stringa = stringa & row(col.ColumnName) & sep
                        stringa = RimuoviHTML(stringa)
                    Next
                    sr.WriteLine(stringa)
                Next
                'CHIUSURA CREAZIONE FILE CSV
                sr.Flush()
                sr.Close()
                sr.Dispose()
                'CREAZIONE FILE ZIP
                If creazip = True Then
                    Dim objCrc32 As New Crc32()
                    Dim strmZipOutputStream As ZipOutputStream
                    Dim strFile As String
                    strFile = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & nomefile)
                    Dim strmFile As FileStream = File.OpenRead(strFile)
                    Dim abyBuffer(Convert.ToInt32(strmFile.Length - 1)) As Byte
                    strmFile.Read(abyBuffer, 0, abyBuffer.Length)
                    Dim sFile As String = Path.GetFileName(strFile)
                    Dim theEntry As ZipEntry = New ZipEntry(sFile)
                    Dim fi As New FileInfo(strFile)
                    theEntry.DateTime = fi.LastWriteTime
                    theEntry.Size = strmFile.Length
                    strmFile.Close()
                    objCrc32.Reset()
                    objCrc32.Update(abyBuffer)
                    theEntry.Crc = objCrc32.Value
                    Dim zipfic As String
                    zipfic = System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\" & Replace(nomefile, ".csv", ".zip"))
                    strmZipOutputStream = New ZipOutputStream(File.Create(zipfic))
                    strmZipOutputStream.SetLevel(6)
                    strmZipOutputStream.PutNextEntry(theEntry)
                    strmZipOutputStream.Write(abyBuffer, 0, abyBuffer.Length)
                    strmZipOutputStream.Finish()
                    strmZipOutputStream.Close()
                    File.Delete(strFile)
                    Dim FileNameZip As String = Replace(nomefile, ".csv", ".zip")
                    Return FileNameZip
                Else
                    Dim FileNameCSV As String = nomefile
                    Return FileNameCSV
                End If
            Catch ex As Exception
                If Not sr Is Nothing Then
                    sr.Close()
                End If
                Return ""
            End Try
        End Function
        Function RimuoviHTML(ByVal stringa As String) As String
            Try
                Dim posiniziale As Long
                Dim posfinale As Long
                Dim rimozione As String
                Do
                    posiniziale = InStr(1, stringa, "<a href")
                    If posiniziale > 0 Then
                        posfinale = InStr(1, stringa, ">")
                        If posfinale > 0 Then
                            rimozione = Mid$(stringa, posiniziale, posfinale - posiniziale + 1)
                            stringa = Replace(stringa, rimozione, vbNullString)
                        Else
                            Exit Do
                        End If
                    End If
                Loop Until posiniziale = 0
                Do
                    posiniziale = InStr(1, stringa, "</a")
                    If posiniziale > 0 Then
                        posfinale = InStr(1, stringa, ">")
                        If posfinale > 0 Then
                            rimozione = Mid$(stringa, posiniziale, posfinale - posiniziale + 1)
                            stringa = Replace(stringa, rimozione, vbNullString)
                        Else
                            Exit Do
                        End If
                    End If
                Loop Until posiniziale = 0
                rimozione = stringa
                Return stringa
            Catch ex As Exception
                Return ""
            End Try
        End Function
        Function RimuoviHTMLTAG(ByVal stringa As String) As String
            Try
                Dim posiniziale As Long
                Dim posfinale As Long
                Dim rimozione As String
                Do
                    posiniziale = InStr(1, stringa, "<")
                    If posiniziale > 0 Then
                        posfinale = InStr(1, stringa, ">")
                        If posfinale > 0 Then
                            rimozione = Mid$(stringa, posiniziale, posfinale - posiniziale + 1)
                            stringa = Replace(stringa, rimozione, vbNullString)
                        Else
                            Exit Do
                        End If
                    End If
                Loop Until posiniziale = 0
                Do
                    posiniziale = InStr(1, stringa, "<")
                    If posiniziale > 0 Then
                        posfinale = InStr(1, stringa, ">")
                        If posfinale > 0 Then
                            rimozione = Mid$(stringa, posiniziale, posfinale - posiniziale + 1)
                            stringa = Replace(stringa, rimozione, vbNullString)
                        Else
                            Exit Do
                        End If
                    End If
                Loop Until posiniziale = 0
                rimozione = stringa
                Return stringa
            Catch ex As Exception
                Return ""
            End Try
        End Function
        Public Function RitornaNullSeMenoUno(ByRef obj As String, Optional FormatString As Boolean = True) As String
            RitornaNullSeMenoUno = "null"
            If Not String.IsNullOrEmpty(obj) Then
                If obj <> "-1" Then
                    RitornaNullSeMenoUno = obj
                    If FormatString = True Then
                        RitornaNullSeMenoUno = "'" & obj & "'"
                    End If
                End If
            End If
            Return RitornaNullSeMenoUno

        End Function
#End Region

#Region "PasswordChek"
        ' <summary>
        ' Compares a hash of the specified plain text value to a given hash
        ' value. Plain text is hashed with the same salt value as the original
        ' hash.
        ' </summary>
        ' <param name="plainText">
        ' Plain text to be verified against the specified hash. The function
        ' does not check whether this parameter is null.
        ' </param>
        ' < name="hashAlgorithm">
        ' Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
        ' "SHA256", "SHA384", and "SHA512" (if any other value is specified
        ' MD5 hashing algorithm will be used). This value is case-insensitive.
        ' </param>
        ' < name="hashValue">
        ' Base64-encoded hash value produced by ComputeHash function. This value
        ' includes the original salt appended to it.
        ' </param>
        ' <returns>
        ' If computed hash mathes the specified hash the function the return
        ' value is true; otherwise, the function returns false.
        ' </returns>
        Public Function VerifyHash(ByVal plainText As String,
                                      ByVal hashAlgorithm As String,
                                      ByVal hashValue As String) _
                           As Boolean

            ' Convert base64-encoded hash value into a byte array.
            Dim hashWithSaltBytes As Byte()
            hashWithSaltBytes = Convert.FromBase64String(hashValue)

            ' We must know size of hash (without salt).
            Dim hashSizeInBits As Integer
            Dim hashSizeInBytes As Integer

            ' Make sure that hashing algorithm name is specified.
            If (hashAlgorithm Is Nothing) Then
                hashAlgorithm = ""
            End If

            ' Size of hash is based on the specified algorithm.
            Select Case hashAlgorithm.ToUpper()

                Case "SHA1"
                    hashSizeInBits = 160

                Case "SHA256"
                    hashSizeInBits = 256

                Case "SHA384"
                    hashSizeInBits = 384

                Case "SHA512"
                    hashSizeInBits = 512

                Case Else ' Must be MD5
                    hashSizeInBits = 128

            End Select

            ' Convert size of hash from bits to bytes.
            hashSizeInBytes = hashSizeInBits / 8

            ' Make sure that the specified hash value is long enough.
            If (hashWithSaltBytes.Length < hashSizeInBytes) Then
                VerifyHash = False
            End If

            ' Allocate array to hold original salt bytes retrieved from hash.
            Dim saltBytes() As Byte = New Byte(hashWithSaltBytes.Length -
                                               hashSizeInBytes - 1) {}

            ' Copy salt from the end of the hash to the new array.
            Dim I As Integer
            For I = 0 To saltBytes.Length - 1
                saltBytes(I) = hashWithSaltBytes(hashSizeInBytes + I)
            Next I

            ' Compute a new hash string.
            Dim expectedHashString As String
            expectedHashString = ComputeHash(plainText, hashAlgorithm, saltBytes)

            ' If the computed hash matches the specified hash,
            ' the plain text value must be correct.
            VerifyHash = (hashValue = expectedHashString)
        End Function

        ' <summary>
        ' Generates a hash for the given plain text value and returns a
        ' base64-encoded result. Before the hash is computed, a random salt
        ' is generated and appended to the plain text. This salt is stored at
        ' the end of the hash value, so it can be used later for hash
        ' verification.
        ' </summary>
        ' <param name="plainText">
        ' Plaintext value to be hashed. The function does not check whether
        ' this parameter is null.
        ' </param>
        ' < name="hashAlgorithm">
        ' Name of the hash algorithm. Allowed values are: "MD5", "SHA1",
        ' "SHA256", "SHA384", and "SHA512" (if any other value is specified
        ' MD5 hashing algorithm will be used). This value is case-insensitive.
        ' </param>
        ' < name="saltBytes">
        ' Salt bytes. This parameter can be null, in which case a random salt
        ' value will be generated.
        ' </param>
        ' <returns>
        ' Hash value formatted as a base64-encoded string.
        ' </returns>
        Public Function ComputeHash(ByVal plainText As String,
                                           ByVal hashAlgorithm As String,
                                           ByVal saltBytes() As Byte) _
                               As String

            ' If salt is not specified, generate it on the fly.
            If (saltBytes Is Nothing) Then

                ' Define min and max salt sizes.
                Dim minSaltSize As Integer
                Dim maxSaltSize As Integer

                minSaltSize = 12
                maxSaltSize = 16

                ' Generate a random number for the size of the salt.
                Dim random As Random
                random = New Random()

                Dim saltSize As Integer
                saltSize = random.Next(minSaltSize, maxSaltSize)

                ' Allocate a byte array, which will hold the salt.
                saltBytes = New Byte(saltSize - 1) {}

                ' Initialize a random number generator.
                Dim rng As RNGCryptoServiceProvider
                rng = New RNGCryptoServiceProvider()

                ' Fill the salt with cryptographically strong byte values.
                rng.GetNonZeroBytes(saltBytes)
            End If

            ' Convert plain text into a byte array.
            Dim plainTextBytes As Byte()
            plainTextBytes = Encoding.UTF8.GetBytes(plainText)

            ' Allocate array, which will hold plain text and salt.
            Dim plainTextWithSaltBytes() As Byte =
                New Byte(plainTextBytes.Length + saltBytes.Length - 1) {}

            ' Copy plain text bytes into resulting array.
            Dim I As Integer
            For I = 0 To plainTextBytes.Length - 1
                plainTextWithSaltBytes(I) = plainTextBytes(I)
            Next I

            ' Append salt bytes to the resulting array.
            For I = 0 To saltBytes.Length - 1
                plainTextWithSaltBytes(plainTextBytes.Length + I) = saltBytes(I)
            Next I

            ' Because we support multiple hashing algorithms, we must define
            ' hash object as a common (abstract) base class. We will specify the
            ' actual hashing algorithm class later during object creation.
            Dim hash As HashAlgorithm

            ' Make sure hashing algorithm name is specified.
            If (hashAlgorithm Is Nothing) Then
                hashAlgorithm = ""
            End If

            ' Initialize appropriate hashing algorithm class.
            Select Case hashAlgorithm.ToUpper()

                Case "SHA1"
                    hash = New SHA1Managed()

                Case "SHA256"
                    hash = New SHA256Managed()

                Case "SHA384"
                    hash = New SHA384Managed()

                Case "SHA512"
                    hash = New SHA512Managed()

                Case Else
                    hash = New MD5CryptoServiceProvider()

            End Select

            ' Compute hash value of our plain text with appended salt.
            Dim hashBytes As Byte()

            hashBytes = hash.ComputeHash(plainTextWithSaltBytes)

            ' Create array which will hold hash and original salt bytes.
            Dim hashWithSaltBytes() As Byte =
                                       New Byte(hashBytes.Length +
                                                saltBytes.Length - 1) {}

            ' Copy hash bytes into resulting array.
            For I = 0 To hashBytes.Length - 1
                hashWithSaltBytes(I) = hashBytes(I)
            Next I

            ' Append salt bytes to the result.
            For I = 0 To saltBytes.Length - 1
                hashWithSaltBytes(hashBytes.Length + I) = saltBytes(I)
            Next I

            ' Convert result into a base64-encoded string.
            Dim hashValue As String
            hashValue = Convert.ToBase64String(hashWithSaltBytes)

            ' Return the result.
            ComputeHash = hashValue
        End Function
#End Region

#Region "Siraper"
        Public Function RicavaDemografia(ByVal cod_comune As String) As Double
            Try
                Select Case cod_comune
                    Case "F205"
                        RicavaDemografia = 1.2
                    Case "L409", "G488", "D912", "C986", "B162", "E415"
                        RicavaDemografia = 0.9D
                    Case "H930", "G220", "A940", "D286", "B212"
                        RicavaDemografia = 0.95D
                    Case "H264", "C707"
                        RicavaDemografia = 1
                    Case "E639", "E313", "A473", "M102", "F260"
                        RicavaDemografia = 0.8D
                    Case Else
                        RicavaDemografia = 0
                End Select
            Catch ex As Exception
                RicavaDemografia = 0
            End Try
        End Function
        Public Function RicavaUbicazione(ByVal Ubicazione As String) As Double
            Dim ApertaNow As Boolean = False
            Try
                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                    ApertaNow = True
                End If
                RicavaUbicazione = 0
                cmd.CommandText = "SELECT VALORE_PER_CANONE FROM SISCOM_MI.TIPO_UBICAZIONE_LG_392_78 " _
                                & "WHERE COD = " & insDbValue(Ubicazione.ToUpper, True)
                RicavaUbicazione = IfNull(cmd.ExecuteScalar, 0)
                If ApertaNow Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            Catch ex As Exception
                RicavaUbicazione = 0
                If ApertaNow Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            End Try
        End Function
#End Region

#Region " Codice generato da Progettazione componenti "
        Public Sub SettaCommand(ByVal par As CM.Global)
            par.cmd = par.OracleConn.CreateCommand()
            par.cmd.BindByName = True

        End Sub
        Public Sub New()
            MyBase.New()

            'Chiamata richiesta da Progettazione componenti.
            InitializeComponent()

            'Aggiungere le eventuali istruzioni di inizializzazione dopo la chiamata a InitializeComponent()

        End Sub

        'Richiesto da Progettazione componenti
        Private components As System.ComponentModel.IContainer

        'NOTA: la procedura che segue è richiesta da Progettazione componenti.
        'Può essere modificata in Progettazione componenti.  
        'Non modificarla nell'editor del codice.
        <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()
            components = New System.ComponentModel.Container()
        End Sub

#End Region

        Sub Application_Start(ByVal sender As Object, ByVal e As EventArgs)
            ' Generato all'avvio dell'applicazione

        End Sub

        Sub Session_Start(ByVal sender As Object, ByVal e As EventArgs)
            ' Generato all'apertura della sessione

        End Sub

        Sub Application_BeginRequest(ByVal sender As Object, ByVal e As EventArgs)
            ' Generato all'inizio di ogni richiesta

        End Sub

        Sub Application_AuthenticateRequest(ByVal sender As Object, ByVal e As EventArgs)
            ' Generato durante il tentativo di autenticazione dell'utente
        End Sub


        Public Function getDataTableGrid(ByVal Query As String) As Data.DataTable
            getDataTableGrid = New Data.DataTable
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = Query
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            da.Fill(getDataTableGrid)
            da.Dispose()
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
        End Function
        Public Function getDataTableFilterSortRadGrid(ByVal Query As String, ByVal RadGrid As RadGrid, Optional ByVal ClearDataQuery As Boolean = True) As Data.DataTable
            getDataTableFilterSortRadGrid = Nothing
            Dim QueryDataTable As String = "SELECT "
            Dim ColonneRadGrid As String = ""
            For Each col As GridColumn In RadGrid.Columns
                If col.Exportable Then
                    If String.IsNullOrEmpty(Trim(ColonneRadGrid)) Then
                        ColonneRadGrid = col.UniqueName & " AS " & Chr(34).ToString & col.HeaderText & Chr(34).ToString
                    Else
                        ColonneRadGrid &= "," & col.UniqueName & " AS " & Chr(34).ToString & col.HeaderText & Chr(34).ToString
                    End If
                End If
            Next
            Dim filterExpression As String = RadGrid.MasterTableView.FilterExpression.ToString
            Dim orderExpression As String = RadGrid.MasterTableView.SortExpressions.GetSortString.ToString
            QueryDataTable = QueryDataTable & ColonneRadGrid & " " _
                           & "FROM (" _
                           & Query _
                           & ") "
            If Not String.IsNullOrEmpty(Trim(filterExpression)) Then
                QueryDataTable = QueryDataTable & "WHERE " & filterExpression.Replace("[", "UPPER(").Replace("]", ")").Replace(" '%", " UPPER('%").Replace("%')", "%'))") & " "
                If ClearDataQuery Then
                    Dim indice As Integer = 0
                    While indice <> -1
                        indice = QueryDataTable.ToString.LastIndexOf("23:59:59")
                        If indice <> -1 Then
                            QueryDataTable = Left(QueryDataTable.ToString, indice - 12) & "TO_DATE(" & Right(QueryDataTable.ToString, Len(QueryDataTable.ToString) - indice + 12).ToString.Replace(",23:59:59'", "','DD/MM/YYYY')")
                        End If
                    End While
                    indice = 0
                    While indice <> -1
                        indice = QueryDataTable.ToString.LastIndexOf("00:00:00")
                        If indice <> -1 Then
                            QueryDataTable = Left(QueryDataTable.ToString, indice - 12) & "TO_DATE(" & Right(QueryDataTable.ToString, Len(QueryDataTable.ToString) - indice + 12).ToString.Replace(",00:00:00'", "','DD/MM/YYYY')")
                        End If
                    End While
                End If
            End If
            If Not String.IsNullOrEmpty(Trim(orderExpression)) Then
                QueryDataTable = QueryDataTable & "ORDER BY " & orderExpression
            End If
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = QueryDataTable
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            getDataTableFilterSortRadGrid = New Data.DataTable
            da.Fill(getDataTableFilterSortRadGrid)
            da.Dispose()
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
        End Function
        Public Function [Select](ByVal Query As String, ByVal TipoRiga As TipoRigaProp, ByVal startRowIndex As Integer, ByVal maximumRows As Integer) As Data.DataTable
            Dim dt As New Data.DataTable
            Dim TipoRigaDescr As String = ""
            If TipoRiga = TipoRigaProp.Riga Then
                TipoRigaDescr = "RIGA"
            ElseIf TipoRiga = TipoRigaProp.Rownum Then
                TipoRigaDescr = "ROWNUM"
            End If
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            cmd.CommandText = "SELECT * FROM (" & Query & ") WHERE " & TipoRigaDescr & " BETWEEN " & startRowIndex & " AND " & startRowIndex + maximumRows
            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
            da.Fill(dt)
            da.Dispose()
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
            Return dt
        End Function
        Public Function ShouldApplySortFilterOrGroup(ByVal radgrid As RadGrid) As Boolean
            Return radgrid.MasterTableView.FilterExpression <> "" OrElse (radgrid.MasterTableView.GroupByExpressions.Count > 0 OrElse isGrouping) OrElse radgrid.MasterTableView.SortExpressions.Count > 0
        End Function
        Public Sub RimuoviNodoMenuTelerik(ByVal menu As RadMenu, ByVal nodo As String)
            If Not IsNothing(menu) And Not String.IsNullOrEmpty(nodo) Then
                For i As Integer = 0 To menu.Items.Count - 1
                    If menu.Items(i).Value.ToString = nodo Then
                        menu.Items.Remove(menu.Items(i))
                        Exit Sub
                    Else
                        If RimuoviNodoFiglioMenuTelerik(menu.Items(i), nodo) Then
                            Exit Sub
                        End If
                    End If
                Next
            End If
        End Sub
        Private Function RimuoviNodoFiglioMenuTelerik(ByVal subnodo As RadMenuItem, ByVal nodo As String) As Boolean
            RimuoviNodoFiglioMenuTelerik = False
            If (subnodo Is Nothing) Then
                Exit Function
            End If
            For i As Integer = 0 To subnodo.Items.Count - 1
                If subnodo.Items(i).Value.ToString = nodo Then
                    subnodo.Items.Remove(subnodo.Items(i))
                    RimuoviNodoFiglioMenuTelerik = True
                    Exit Function
                Else
                    RimuoviNodoFiglioMenuTelerik(subnodo.Items(i), nodo)
                End If
            Next
        End Function

        Public Function CreaBarCode128(ByVal Codice As String, ByVal DoveSalvare As String, ByVal PercorsoAssoluto As Boolean) As String
            Try
                Dim barcode As RadBarcode = New RadBarcode()
                barcode.Height = 30
                barcode.Type = Telerik.Web.UI.BarcodeType.Code128
                barcode.LineWidth = 2
                barcode.OutputType = BarcodeOutputType.EmbeddedPNG
                barcode.ShowText = True
                barcode.Text = Codice

                Dim image As System.Drawing.Image = barcode.GetImage()
                Dim NomeFile As String = "CodeBar_" & Codice & "_" & Format(Now, "yyyyMMddHHmmss") & ".jpg"
                image.Save(System.Web.Hosting.HostingEnvironment.MapPath("~\" & DoveSalvare & "\") & NomeFile)
                If PercorsoAssoluto = True Then
                    CreaBarCode128 = System.Web.Hosting.HostingEnvironment.MapPath("~\" & DoveSalvare & "\") & NomeFile
                Else
                    CreaBarCode128 = NomeFile
                End If
            Catch ex As Exception
                CreaBarCode128 = "ERRORE: " & ex.Message
            End Try
        End Function

        Public Function RicavaBarCode(ByVal TipoDoc As Integer, ByVal IdRiferimento As String) As String
            RicavaBarCode = ""
            'Dim IndiceDoc As String = ""
            'Dim I As Integer = 0
            'Try

            '    If OracleConn.State = Data.ConnectionState.Closed Then
            '        OracleConn.Open()
            '        cmd = OracleConn.CreateCommand()
            '        I = 1
            '    End If

            '    cmd.CommandText = "select SEQ_CODIFICA_DOCUMENTI.nextval from dual"
            '    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            '    If myReaderW.Read Then
            '        IndiceDoc = Format(myReaderW(0), "000000000000")
            '    End If
            '    myReaderW.Close()

            '    Dim barcode As New iTextSharp.text.pdf.Barcode128
            '    barcode.BarHeight = 30
            '    barcode.ChecksumText = True
            '    barcode.GenerateChecksum = True
            '    barcode.Code = IndiceDoc


            '    Dim codeBarImage As Drawing.Bitmap
            '    codeBarImage = New System.Drawing.Bitmap(400, 30)

            '    codeBarImage = barcode.CreateDrawingImage(Color.Black, Color.White)
            '    'codeBarImage.Save(Context.Server.MapPath("FileTemp\BarCode_" & IndiceDoc & ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg)
            '    codeBarImage.Save(System.Web.Hosting.HostingEnvironment.MapPath("~\FileTemp\BarCode_" & IndiceDoc & ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg)

            '    cmd.CommandText = "INSERT INTO SEPA.CODIFICA_DOCUMENTI (ID,TIPO_DOCUMENTO,ID_RIFERIMENTO,DATA_STAMPA) VALUES ('" & IndiceDoc & "'," & TipoDoc & "," & IdRiferimento & ",'" & Format(Now, "yyyyMMddHHmmss") & "')"
            '    cmd.ExecuteNonQuery()
            '    cmd.Dispose()
            '    If I = 1 Then
            '        OracleConn.Close()
            '        Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            '    End If
            '    RicavaBarCode = "BarCode_" & IndiceDoc & ".jpg"
            'Catch ex As Exception
            '    If I = 1 Then
            '        OracleConn.Close()
            '        Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            '    End If
            '    RicavaBarCode = ""
            'End Try
        End Function

        Public Function CalcolaContribCalore(ByVal IdContratto As Long, ByVal AreaEconomica As String, ByRef VoceDaCancell As Boolean, ByRef impContrCaloreDaCanc As Decimal, ByVal IdVoceContributoCalore As Long) As Decimal


            Dim inCondominio As Boolean = False
            Dim idUnita As Long = 0
            Dim impContrCaloreAnn As Decimal = 0
            Dim ConOpenNow As Boolean = False

            Try

                If OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                End If

                'cmd.CommandText = "SELECT * FROM SISCOM_MI.COND_EDIFICI WHERE ID_EDIFICIO IN (SELECT UNITA_IMMOBILIARI.ID_EDIFICIO FROM SISCOM_MI.UNITA_IMMOBILIARI,SISCOM_MI.UNITA_CONTRATTUALE " _
                '& "WHERE ID=UNITA_CONTRATTUALE.ID_UNITA AND UNITA_CONTRATTUALE.ID_CONTRATTO=" & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA_PRINCIPALE IS NULL)"
                cmd.CommandText = "SELECT * FROM SISCOM_MI.COND_EDIFICI, siscom_mi.condomini WHERE ID_EDIFICIO IN (SELECT UNITA_IMMOBILIARI.ID_EDIFICIO FROM SISCOM_MI.UNITA_IMMOBILIARI,SISCOM_MI.UNITA_CONTRATTUALE WHERE ID = UNITA_CONTRATTUALE.ID_UNITA AND UNITA_CONTRATTUALE.ID_CONTRATTO = " & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA_PRINCIPALE IS NULL) and SISCOM_MI.COND_EDIFICI.id_condominio= siscom_mi.condomini.id and tipo_gestione='D'"
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader.Read Then
                    inCondominio = True
                End If
                myReader.Close()

                VoceDaCancell = False
                cmd.CommandText = "SELECT * FROM SISCOM_MI.BOL_SCHEMA WHERE ID_CONTRATTO=" & IdContratto & " AND ANNO=" & Year(Now) & " AND ID_VOCE=" & IdVoceContributoCalore ' AND ID_VOCE=693"
                Dim myReaderAE As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderAE.Read Then
                    'If AreaEconomica <> "1" Then
                    impContrCaloreDaCanc = IfNull(myReaderAE("IMPORTO"), 0)
                    VoceDaCancell = True
                    'End If

                    If AreaEconomica = "1" And inCondominio = False Then
                        cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.RAPPORTI_UTENZA WHERE UNITA_CONTRATTUALE.ID_CONTRATTO=RAPPORTI_UTENZA.ID AND ID_CONTRATTO='" & IdContratto & "' AND ID_UNITA_PRINCIPALE IS NULL"
                        myReader = cmd.ExecuteReader()
                        If myReader.Read Then
                            idUnita = IfNull(myReader("ID_UNITA"), 0)
                        End If
                        myReader.Close()

                        cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & idUnita
                        myReader = cmd.ExecuteReader()
                        If myReader.Read Then
                            impContrCaloreAnn = 5.16 * IfNull(myReader("valore"), 0)
                        End If
                        myReader.Close()
                    End If
                Else
                    If AreaEconomica = "1" And inCondominio = False Then
                        cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.RAPPORTI_UTENZA WHERE UNITA_CONTRATTUALE.ID_CONTRATTO=RAPPORTI_UTENZA.ID AND ID_CONTRATTO='" & IdContratto & "' AND ID_UNITA_PRINCIPALE IS NULL"
                        myReader = cmd.ExecuteReader()
                        If myReader.Read Then
                            idUnita = IfNull(myReader("ID_UNITA"), 0)
                        End If
                        myReader.Close()

                        cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & idUnita
                        myReader = cmd.ExecuteReader()
                        If myReader.Read Then
                            impContrCaloreAnn = 5.16 * IfNull(myReader("valore"), 0)
                        End If
                        myReader.Close()
                    End If
                End If
                myReaderAE.Close()

                If ConOpenNow = True Then
                    OracleConn.Close()
                End If

                CalcolaContribCalore = impContrCaloreAnn

            Catch ex As Exception
                CalcolaContribCalore = 0
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try

        End Function
        Public Function RicavaIdVociContributo(ByRef IdCanone As Long, ByRef IdCalore As Long) As Boolean
            Dim par As New CM.Global
            RicavaIdVociContributo = False
            Try
                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "SELECT * FROM SISCOM_MI.PARAMETRI_BOLLETTA WHERE ID= 50"
                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderW.Read Then
                    IdCanone = par.IfNull(myReaderW("VALORE"), 0)
                End If
                myReaderW.Close()
                par.cmd.CommandText = "SELECT * FROM SISCOM_MI.PARAMETRI_BOLLETTA WHERE ID= 51"
                myReaderW = par.cmd.ExecuteReader()
                If myReaderW.Read Then
                    IdCalore = par.IfNull(myReaderW("VALORE"), 0)
                End If
                myReaderW.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                RicavaIdVociContributo = True
            Catch ex As Exception
                RicavaIdVociContributo = False
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function
        Public Function RicavaVial(ByVal indirizzo As String) As String
            Dim pos As Integer
            Dim via As String

            pos = InStr(1, indirizzo, " ")
            If pos > 0 Then
                via = Mid(indirizzo, 1, pos - 1)
                Select Case via
                    Case "CORSO", "C.SO"
                        RicavaVial = "CORSO"
                    Case "PIAZZA", "PZ.", "P.ZZA", "PIAZZETTA"
                        RicavaVial = "PIAZZA"
                    Case "PIAZZALE", "P.LE"
                        RicavaVial = "PIAZZALE"
                    Case "P.T"
                        RicavaVial = "PORTA"
                    Case "S.T.R.", "STRADA"
                        RicavaVial = "STRADA"
                    Case "V.", "VIA"
                        RicavaVial = "VIA"
                    Case "VIALE", "V.LE"
                        RicavaVial = "VIALE"
                    Case "LARGO"
                        RicavaVial = "LARGO"
                    Case "VICO"
                        RicavaVial = "VICO"
                    Case "VICOLO"
                        RicavaVial = "VICOLO"
                    Case "ALTRO"
                        RicavaVial = "ALTRO"
                    Case "ALZAIA"
                        RicavaVial = "ALZAIA"
                    Case "RIPA"
                        RicavaVial = "RIPA"
                    Case "CALLE"
                        RicavaVial = "CALLE"
                    Case Else
                        RicavaVial = "VIA"
                End Select
            Else
                RicavaVial = ""
            End If
        End Function
        Public Function VerificaPW(pw As String) As Boolean
            VerificaPW = False
            Try
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()

                cmd.CommandText = "select * from parameter where id=125"
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader.Read Then
                    If pw = DeCripta(IfNull(myReader("VALORE"), "XXXXXXXXX")) Then
                        VerificaPW = True
                    Else
                        VerificaPW = False
                    End If
                End If
                myReader.Close()

                OracleConn.Close()
            Catch ex As Exception
                VerificaPW = False
                OracleConn.Close()
            End Try
        End Function

        Public Function StringaSiscom() As String
            StringaSiscom = ""
            Try
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()

                cmd.CommandText = "select * from parameter where id=126"
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader.Read Then
                    StringaSiscom = DeCripta(IfNull(myReader("VALORE"), "XXXXXXXXX"))
                End If
                myReader.Close()
                OracleConn.Close()
            Catch ex As Exception
                StringaSiscom = ""
                OracleConn.Close()
            End Try
        End Function

        Public Function ConversioneBase64(ByVal IDcontratto As Long) As String
            Dim pdfBase64 As String = ""
            Dim XMLdaTrasformare As String = ""
            Dim NomeFile As String = ""
            Dim bw As BinaryWriter
            Dim TestoContratto As String = ""
            NomeFile = IDcontratto & "_" & Format(Now, "yyyyMMddHHmmss")
            Dim fileName As String = System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".xml")
            Dim contenutol As String = ""

            TestoContratto = "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "ISO-8859-1" & Chr(34) & " ?>" & vbCrLf _
                & "<?xml-stylesheet href=" & Chr(34) & "FileContratti XLS.xsl" & Chr(34) & " type=" & Chr(34) & "text/xsl" & Chr(34) & "?>" & vbCrLf _
                & "<FileContratti CodiceFiscaleFornitore=" & Chr(34) & "XXXXXXXXXXXXXXXX" & Chr(34) & " CodiceUfficio=" & Chr(34) & "XXX" & Chr(34) & " CodiceFiscaleConto=" & Chr(34) & "XXXXXXXXXXXXXXXX" & Chr(34) & " CodiceAzienda=" & Chr(34) & "00000" & Chr(34) & " CodiceCABSportello=" & Chr(34) & "000000" & Chr(34) & " ProvinciaBanca=" & Chr(34) & "XX" & Chr(34) & " ValutaPrelievo=" & Chr(34) & "E" & Chr(34) & ">" & vbCrLf

            cmd.CommandText = "SELECT * FROM SISCOM_MI.RAPPORTI_UTENZA_REGISTRAZIONE WHERE ID_CONTRATTO=" & IDcontratto
            Dim myReaderB As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB.Read Then

                Dim fs = New FileStream(fileName, FileMode.OpenOrCreate, FileAccess.Write)
                bw = New BinaryWriter(fs)
                bw.Write(myReaderB("testo_XML"))
                bw.Flush()
                bw.Close()

                Dim srl As StreamReader = New StreamReader(System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".xml"), System.Text.Encoding.GetEncoding("iso-8859-1"))
                contenutol = TestoContratto & srl.ReadToEnd() & "</FileContratti>"
                srl.Close()

                Dim srlet As StreamWriter = New StreamWriter(System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".xml"), False, System.Text.Encoding.Default)
                srlet.WriteLine(contenutol)
                srlet.Close()

            End If
            myReaderB.Close()

            If contenutol <> "" Then
                Dim pdfConverter1 As PdfConverter = New PdfConverter

                Dim Licenza As String = System.Web.HttpContext.Current.Session.Item("LicenzaHtmlToPdf")
                If Licenza <> "" Then
                    pdfConverter1.LicenseKey = Licenza
                End If

                pdfConverter1.PdfDocumentOptions.PdfPageSize = PdfPageSize.A4
                pdfConverter1.PdfDocumentOptions.PdfPageOrientation = PDFPageOrientation.Portrait
                pdfConverter1.PdfDocumentOptions.PdfCompressionLevel = PdfCompressionLevel.NoCompression
                pdfConverter1.PdfDocumentOptions.ShowHeader = False
                pdfConverter1.PdfDocumentOptions.ShowFooter = False
                pdfConverter1.PdfDocumentOptions.LeftMargin = 10
                pdfConverter1.PdfDocumentOptions.RightMargin = 10
                pdfConverter1.PdfDocumentOptions.TopMargin = 10
                pdfConverter1.PdfDocumentOptions.BottomMargin = 10
                pdfConverter1.PdfDocumentOptions.GenerateSelectablePdf = True

                pdfConverter1.PdfDocumentOptions.ShowHeader = False
                pdfConverter1.PdfFooterOptions.FooterText = ("")
                pdfConverter1.PdfFooterOptions.FooterTextColor = Color.Blue
                pdfConverter1.PdfFooterOptions.DrawFooterLine = False
                pdfConverter1.PdfFooterOptions.PageNumberText = ""
                pdfConverter1.PdfFooterOptions.ShowPageNumber = False
                pdfConverter1.SavePdfFromUrlToFile(System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".xml"), System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".pdf"))

                File.Delete(System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".xml"))

                Dim pdfBytes As Byte() = File.ReadAllBytes(System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".pdf"))
                pdfBase64 = Convert.ToBase64String(pdfBytes)

                File.Delete(System.Web.Hosting.HostingEnvironment.MapPath("~\ALLEGATI\CONTRATTI\StampeContratti\" & NomeFile & ".pdf"))
            End If
            Return pdfBase64

        End Function

        Public Function ScriveXMLStipulaContr(ByVal IdContratto As Long, ByVal dataInvio As String, ByVal varContatoreDoc As Integer, ByRef totImporti As Decimal, ByRef strFileTxt As String, ByVal sNomeFileContenitore As String, ByVal TipoTributo As String, ByRef queryInsert As String, ByRef idFornitura As Long) As String
            Dim testoXML As String = ""
            'Try
            Dim ConOpenNow As Boolean = False
            Dim bTrovato As Boolean = False
            Dim sStringaSql As String = ""
            Dim alertInfoMancante As Boolean = False

            Dim TipoContratto As String = ""

            '***** 0 Intestazione XML *****
            Dim varIntestazione As String = ""
            Dim varCodiceFornitura As String = "RLI12"

            Dim varTipoFornitore As String = "10"
            'Assume i valori:
            '1 - Soggetti che inviano le proprie dichiarazione.
            '10 - C.A.F. dipendenti e pensionati; C.A.F. imprese;
            'Societa' ed enti di cui all'art.3, comma 2 del DPR 322/98 (se tale societa' appartiene a un gruppo puo' trasmettere la propria dichiarazione e quelle delle aziende del gruppo);
            'Altri intermediari di cui all'art.3. comma 3 lett a), b), c) ed e) del DPR 322/98; Societa' degli Ordini di cui all' art. 3 Decr. Dir. 18/2/99;
            'Soggetto che trasmette le dichiarazioni per le quali l'impegno a trasmettere e' stato assunto da un professionista deceduto.

            Dim varCodFiscFornitore As String = ""
            Dim varSpazioUtente As String = ""
            Dim varSpazioServTelem As String = ""
            Dim varUfficioTerritoriale As String = ""
            Dim varCodiceABI As String = ""
            Dim varCodiceCAB As String = ""
            Dim varCodiceCIN As String = ""
            Dim varNumContoCorrente As String = ""
            Dim varCodFiscTitolareCC As String = ""
            Dim varImportoDaVersare As String = "" '=??? ImportoBollo, ImportoRegistrazione, ImportoSanzioniRegistrazione, ImportoInteressi
            Dim varPdfBase64 As String = ""
            totImporti = 0

            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=10"
            Dim myReaderB As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB.Read Then
                varCodFiscFornitore = IfNull(myReaderB("valore"), "")
            End If
            myReaderB.Close()


            '***** 1 Frontespizio *****
            Dim varIDProdottoSw As String = ""
            Dim varNumModuliCompilati As String = ""
            Dim varIDcontratto As String = ""

            '***** 1.1 Richiedente (persona fisica o giuridica) *****
            Dim varCfRichiedente As String = ""
            Dim varNome As String = ""
            Dim varCognomeRich As String = ""

            Dim varNomeCond As String = ""
            Dim varCognomeCond As String = ""
            Dim varCodFiscaleCond As String = ""

            Dim varCodFiscaleRappr As String = ""
            Dim varCognomeRappr As String = ""
            Dim varNomeRappr As String = ""
            Dim varCodiceCarica As String = "1"
            'Può assumere uno dei seguenti valori:
            '1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15

            Dim varFirma As String = "1"
            Dim varTipoRichiedente As String = "1" '1: parte del contratto; 2:mediatore del contratto 
            Dim varSubentro As String = "0"

            Dim varTipoContratto As String = ""
            'LEGENDA TIPI CONTRATTO:
            'L1 = Locazione di immobile ad uso abitativo; (VALIDO)
            'L2 = Locazione agevolata di immobile ad uso abitativo; (VALIDO)
            'L3 = Locazione di immobile ad uso abitativo (contratto soggetto ad IVA); 
            'L4 = Locazione finanziaria di immobile ad uso abitativo;
            'S1 = Locazione di immobile ad uso diverso dall'abitativo; (VALIDO)
            'S2 = Locazione di immobile ad uso diverso dall'abitativo con locatore soggetto ad IVA; 
            'S3 = Locazione Finanziaria di immobile ad uso diverso dall'abitativo; 
            'T1 = Affitto di fondo rustico; 
            'T2 = Affitto di fondo rustico agevolato; 
            'T3 = Affitto di terreni ed aree non edificabili, cave e torbiere; 
            'T4 = Affitto di terreni edificabili o non edificabili destinati a parcheggio (contratto assoggettato ad IVA)

            Dim varPagamInteraDurataContr As String = "" '= FLAG. 
            'La casella va barrata se si tratta di una locazione di un immobile urbano di durata pluriennale e se il pagamento della relativa imposta di registro viene
            'versata per l'intero periodo, ottenendo quindi uno sconto di imposta, va barrata la casella anche se trattasi di proroga.
            'Nel caso di prima registrazione può essere 
            'presente solo per tipologia di contratto = L1, L2, L3, S1, S2, T1, T2, T3, T4.
            'Nel caso di prima registrazione è obbligatorio per tipologia di contratto = T1, T2, T3, T4 e per la
            'tipologia contratto L1, L2, L3, S1, S2 se la durata del contratto (data fine – data inizio) è minore o uguale a 365 giorni 
            '(in assenza di durata non è obbligatorio). 
            'Nel caso di adempimenti successivi può essere presente solo se tipologia di adempimento è uguale a 2.

            Dim varEventiEccezionali As String = "0" 'La casella va barrata dai contribuenti che hanno diritto alle agevolazioni fiscali a seguito di calamità naturali o eventi eccezionali. 
            'Se barrata non devono essere presenti sanzioni ed interessi

            Dim varCasiParticolari As String = "" '= FLAG. (0 in caso di prima registrazione)
            'Questa casella va barrata se il contratto di locazione che si intende registrare prevede particolari clausole contrattuali. Va indicato il codice 1, se si prevede un canone diverso per il primo anno di locazione o più annualità.

            '***** 1.2 Importi *****
            Dim CanoneCorrente As Decimal = 0
            '*********** 1.2.1 Imposte *****
            Dim varImpostaDiRegistro As String = "0,00"
            Dim varImpostaDiBollo As String = "0"

            '*********** 1.2.2 Sanzioni *****
            Dim varSanzImpostaDiRegistro As String = "0"
            Dim varSanzImpostaDiBollo As String = "0"
            Dim varInteressi As New SortedDictionary(Of Integer, Double)
            varInteressi.Clear()
            Dim varInterImpostaDiBollo As String = "0"

            '***** 1.3 Registrazione *****
            Dim varNumProgressCanone As String = "00000001" 'Vale sempre 1

            '***** 1.3.1 Contratto *****
            Dim varDataInizio As String = ""
            Dim varDataFine As String = ""
            Dim varImportoCanone As String = "0,00"
            Dim varDataStipula As String = ""
            Dim varNumeroPagine As String = "" '(Fisso come prima?)
            Dim varNumeroCopie As String = "2" 'Indicare il numero di esemplari cartacei del contratto sottoscritti dalle parti (minimo uno).
            Dim varContrSoggettoIVA As String = "0" 'NO per il comune di Milano
            Dim varCondizioneSospensiva As String = "0"
            Dim varNumeroAllegatoA As String = "" 'Numero fogli o esemplari di scritture private, inventari (allegati al contratto)
            Dim varNumeroAllegatoB As String = "" 'Numero fogli o esemplari di ricevute e quietanze (allegati al contratto)
            Dim varNumeroAllegatoC As String = "" 'Numero fogli o esemplari di mappe, planimetrie e disegni (allegati al contratto)

            Dim varContrattoEsente As String = "" '1=esente bollo, 2= esente bollo e registro

            '***** 1.3.2 Garanzia ***** 'Se nel contratto di locazione e' presente una garanzia prestata da terzi indicare i codici fiscali dei garanti (almeno uno).
            Dim varTipologiaGaranzia As String = ""
            Dim varImportoGaranziaPrestataDaTerzi As String = ""
            Dim varCodiceFiscaleGarante As String = ""
            Dim varCodiceFiscaleSecondoGarante As String = ""

            '***** 1.3.3 Allegati *****
            'deve essere allegato il contratto da registrare.
            'L’allegazione è facoltativa in presenza contemporanea dei seguenti requisiti:
            '- Tipologia contratto: L1 o L2
            '- Contratto non soggetto a Iva;
            '- Assenza di allegati (Mappe, planimetrie, disegni,ecc....).
            '- massimo 3 Locatori persone fisiche e soggettività Iva non barrata
            '- massimo 3 Conduttori persone fisiche e soggettività Iva non barrata
            '- deve essere presente almeno un immobile con codice 1 (immobile principale).
            '- Gli altri immobili (max 3) devono avere codice 2 (pertinenza locata congiuntamente).
            '- Tipologia immobile: U = urbano.
            '- Rendita catastale presente
            Dim varTipoFile As String = ""
            Dim varNomeFile As String = ""
            Dim varDescrizioneFile As String = ""
            Dim varImmagineData As String = ""

            '***** 1.4 ImpegnoATrasmettere (riservato alla presentazione in via telematica) *****
            Dim varCFintermediario As String = ""
            Dim varImpegnoATrasmettere As String = ""
            Dim varDataImpegno As String = ""
            Dim varFirmaIntermediario As String = ""


            '***** 1.5 Soggetti *****
            '*********** 1.5.1 Locatore ***********
            Dim varContatoreLocatore As String = "001"
            Dim varSoggettIVALocat As String = "0"
            Dim varDenominazione As String = ""


            '*********** 1.5.2 Conduttore ***********
            '(Variabili da intendersi per tutti i componenti del nucleo)
            Dim varContatoreSoggetti As Integer = 0
            Dim varSoggettivitaIVA As String = "0"
            Dim varSoggettivitaIVALoc As String = "0"
            Dim varSesso As String = ""
            Dim varCodFiscaleRich As String = ""
            Dim varDataNascita As String = ""
            Dim varComuneNascita As String = ""
            Dim varProvinciaNascita As String = ""
            Dim varCedente As String = "0"


            '***** 1.6 Immobili *****
            Dim varContatoreImmobili As Integer = 0

            Dim varTipoImmobile As String = ""
            'Assume i seguenti valori:
            '1 = Immobile principale
            '2 = Pertinenza locata congiuntamente all' immobile principale
            '3 = Pertinenza locata disgiuntamente all' immobile principale
            '• Se e' presente un rigo con valore 2, dovra' essere presente in uno dei righi precedenti un
            'immobile con valore 1 e dovra' essere preceduto da un rigo con valore 1 o 2.
            '• Se e' presente un rigo con valore 3, non e' necessario che sia presente un rigo con valore 1. 

            Dim vaCodComuneCatastale As String = ""

            Dim varTipoCatasto As String = "U" 'T/U (Terreni/Urbano) 
            'Dato obbligatorio se provincia e' diversa da "EE".
            'Se si tratta di prima registrazione se tipologia contratto = T1 o T2 e provincia(E) diversa da "EE", tipo catasto deve essere = T. 
            'Se si tratta di prima registrazione se tipologia contratto = da L1 A L4, e da S1 a S3 e provincia e' diversa da "EE" , tipo catasto deve essere = U

            Dim varPorzioneImmobile As String = "I" 'I/P (Intero/Porzione)

            Dim varSezioneUrbana As String = ""
            'Per gli immobili siti nelle sole zone in cui vige il sistema
            'tavolare indicare il codice “Comune catastale” presente nel documento catastale.


            Dim varFoglio As String = ""
            Dim varParticellaNumeratore As String = ""
            Dim varParticellaDenominatore As String = ""
            Dim varSubalterno As String = ""

            Dim varInViaDiAccatastam As String = "" 'Dato obbligatorio se provincia e' diversa da "EE" e in assenza di DatiCatastali

            Dim varComune As String = ""
            Dim varProvincia As String = ""
            Dim varCategCatastale As String = ""
            Dim varRenditaCatastale As String = ""
            Dim varTipoIndirizzo As String = ""
            Dim varIndirizzo As String = ""
            Dim varNumCivico As String = ""


            '***** 1.7 Relazioni *****
            'Questo quadro va compilato solo per le locazioni ad uso abitativo.
            'Se si tratta di prima registrazione il quadro può essere presente solo se tipologia contratto = L1 o L2 
            'e non sia stata barrata la casella “soggettivita' IVA” nella sezione dedicata ai locatori 
            'Nel caso di adempimenti successivi il quadro è obbligatorio se è presente il campo CedolareSecca; non può essere presente negli altri casi.

            Dim varImmobileNumero As Integer = 1
            'Se si tratta di prima registrazione il campo è obbigatorio.
            'Nel caso di adempimenti successivi non deve essere presente.
            'Devono essere presenti tutti gli immobili (e soltanto quelli) che hanno 
            'categoria catastale = gruppo A (+ relative pertinenze) e che abbiano una
            'rendita diversa da zero.
            'Non possono essere inseriti immobili con categoria catastale diversa da A.
            'Non possono essere presenti pertinenze con tipologia immobile = 3.
            'Il regime di tassazione scelto per l’immobile principale (tipologia immobile = 1) deve valere anche
            'per la relativa pertinenza (tipologia immobile = 2)

            Dim varLocatoreNumero As Integer = 1
            Dim varPercentualePossesso As String = "100"
            Dim varCedolare As String = "N"

            Dim FL_BOLLO_ESENTE As String = ""
            Dim varImportoBolloParam As String = ""

            'Dim varContatoreDoc As Integer = 0

            'If NuovoCodUfficio = 1 Then
            '    varIntestazione = "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "UTF-8" & Chr(34) & "?>" _
            '            & "<!--created with SEPA@Web (www.sistemiesoluzionisrl.it)-->" _
            '            & "<loc:Fornitura xmlns:sc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:common:v2" & Chr(34) & "xmlns:loc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:loc:v1" & Chr(34) & " xmlns:reg=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:reg:v1" & Chr(34) & " > " _
            '            & "<loc:Intestazione>" _
            '            & "<loc:CodiceFornitura>" & varCodiceFornitura & "</loc:CodiceFornitura>" _
            '            & "<loc:TipoFornitore>" & varTipoFornitore & "</loc:TipoFornitore>" _
            '            & "<loc:CodiceFiscaleFornitore>" & varCodFiscFornitore & "</loc:CodiceFiscaleFornitore>" _
            '            & "<loc:SpazioUtente>" & varSpazioUtente & "</loc:SpazioUtente>" _
            '            & "<loc:SpazioServizioTelematico>" & varSpazioServTelem & "</loc:SpazioServizioTelematico>" _
            '            & "</loc:Intestazione>" _
            '            & "<loc:DatiGenerali>" _
            '            & "<loc:UfficioCompetente>" _
            '            & "<loc:UfficioTerritoriale>" & varUfficioTerritoriale & "</loc:UfficioTerritoriale>" _
            '            & "</loc:UfficioCompetente>" _
            '            & "<loc:Versamento>" _
            '            & "<reg:CodiceABI>" & varCodiceABI & "</reg:CodiceABI>" _
            '            & "<reg:CodiceCAB>" & varCodiceCAB & "</reg:CodiceCAB>" _
            '            & "<reg:NumeroContoCorrente>" & varNumContoCorrente & "</reg:NumeroContoCorrente>" _
            '            & "<reg:CIN>" & varCodiceCIN & "</reg:CIN>" _
            '            & "<reg:CodiceFiscaleTitolareCC>" & varCodFiscTitolareCC & "</reg:CodiceFiscaleTitolareCC>" _
            '            & "</loc:Versamento>" _
            '            & "<loc:ImportoDaVersare>" & varImportoDaVersare & "</loc:ImportoDaVersare>" _
            '            & "</loc:DatiGenerali>"
            'End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=42"
            Dim myReaderB2 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB2.Read Then
                varCFintermediario = IfNull(myReaderB2("valore"), "")
            End If
            myReaderB.Close()

            Dim LimiteTassaRegistrazione As String = 0
            cmd.CommandText = "select valore from siscom_MI.parametri_BOLLETTA where ID=6"
            Dim myReaderJ As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderJ.Read Then
                LimiteTassaRegistrazione = PuntiInVirgole(IfNull(myReaderJ("VALORE"), ""))
            End If
            myReaderJ.Close()

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=8"
            Dim myReaderP As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderP.Read Then
                varDenominazione = IfNull(myReaderP("valore"), "")
            End If
            myReaderP.Close()

            cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 18"
            Dim myReaderZ1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderZ1.Read Then
                varImportoBolloParam = IfNull(myReaderZ1("VALORE"), "0")
            End If
            myReaderZ1.Close()

            cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 45"
            myReaderZ1 = cmd.ExecuteReader()
            If myReaderZ1.Read Then
                varNumeroCopie = IfNull(myReaderZ1("VALORE"), "0")
            End If
            myReaderZ1.Close()

            Dim persGiuridicaRich As Boolean = False
            Dim persGiuridica As Boolean = False
            If IdContratto <> 0 Then


                cmd.CommandText = "select * from siscom_mi.tab_interessi_legali order by anno desc"
                Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                Do While myReaderA.Read
                    varInteressi.Add(myReaderA("anno"), myReaderA("tasso"))
                Loop
                myReaderA.Close()

                cmd.CommandText = "select * from siscom_mi.PARAMETRI_RICHIEDENTE_XML"
                myReaderA = cmd.ExecuteReader()
                If myReaderA.Read Then
                    varTipoRichiedente = IfNull(myReaderA("ID_TIPO_RICH"), -1)
                    varCodFiscaleRich = IfNull(myReaderA("CODFISC_PIVA"), "")
                    varCognomeRich = IfNull(myReaderA("DENOMINAZIONE"), "")
                    varCodFiscaleRappr = IfNull(myReaderA("CODFISC_RAPP"), "")
                    varCognomeRappr = IfNull(myReaderA("COGNOME_RAPP"), "")
                    varNomeRappr = IfNull(myReaderA("NOME_RAPP"), "")
                    If varTipoRichiedente = "0" Or varTipoRichiedente = "2" Then
                        persGiuridicaRich = True
                    End If
                End If
                myReaderA.Close()

                If varTipoRichiedente = "1" Then
                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                    Dim myReader12345 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReader12345.Read Then
                        If IfNull(myReader12345("cod_fiscale"), "") = "" And IfNull(myReader12345("partita_iva"), "") <> "" Then
                            varCognomeRich = IfNull(myReader12345("ragione_sociale"), "")
                            varCodFiscaleRich = IfNull(myReader12345("partita_iva"), "")
                            persGiuridicaRich = True
                        Else
                            varCognomeRich = IfNull(myReader12345("cognome"), "")
                            varNome = IfNull(myReader12345("nome"), "")
                            varCodFiscaleRich = IfNull(myReader12345("cod_fiscale"), "")
                        End If
                    End If
                    myReader12345.Close()
                End If

                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                Dim myReader1234 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader1234.Read Then
                    If IfNull(myReader1234("cod_fiscale"), "") = "" And IfNull(myReader1234("partita_iva"), "") <> "" Then
                        varCognomeCond = IfNull(myReader1234("ragione_sociale"), "")
                        varCodFiscaleCond = IfNull(myReader1234("partita_iva"), "")
                        persGiuridica = True
                        If varCognomeCond = "" Then
                            varCognomeCond = IfNull(myReader1234("cognome"), "") & " " & IfNull(myReader1234("nome"), "")
                        End If
                    Else
                        varCognomeCond = IfNull(myReader1234("cognome"), "")
                        varNomeCond = IfNull(myReader1234("nome"), "")
                        varCodFiscaleCond = IfNull(myReader1234("cod_fiscale"), "")
                    End If
                End If
                myReader1234.Close()


                'Tag Documento (diverso per ogni contratto)
                'varContatoreDoc = varContatoreDoc + 1
                testoXML = "<loc:Documento identificativo=" & Chr(34) & Format(varContatoreDoc, "00000") & Chr(34) & "><loc:Frontespizio>" & vbCrLf _
                    & "<loc:IdentificativoProdSoftware>SEPA2009</loc:IdentificativoProdSoftware>" & vbCrLf _
                    & "<loc:NumeroModuliCompilati>1</loc:NumeroModuliCompilati>" & vbCrLf _
                    & "<loc:IDContratto>" & IdContratto & "</loc:IDContratto>" & vbCrLf _
                    & "<loc:Richiedente>" & vbCrLf _
                    & "<loc:CodiceFiscale>" & varCodFiscaleRich & "</loc:CodiceFiscale>" & vbCrLf

                If persGiuridicaRich = True Then
                    testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Denominazione>" & varCognomeRich.ToUpper & "</loc:Denominazione>" & vbCrLf _
                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Rappresentante>" & vbCrLf _
                    & "<loc:CodiceFiscaleRappresentante>" & varCodFiscaleRappr & "</loc:CodiceFiscaleRappresentante>" & vbCrLf _
                    & "<loc:CognomeRappresentante>" & varCognomeRappr & "</loc:CognomeRappresentante>" & vbCrLf _
                    & "<loc:NomeRappresentante>" & varNomeRappr & "</loc:NomeRappresentante>" & vbCrLf _
                    & "<loc:CodiceCarica>" & varCodiceCarica & "</loc:CodiceCarica>" & vbCrLf _
                    & "</loc:Rappresentante>" & vbCrLf
                Else
                    testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                    & "<loc:Cognome>" & varCognomeRich & "</loc:Cognome>" & vbCrLf _
                    & "<loc:Nome>" & varNome & "</loc:Nome>" & vbCrLf _
                    & "</loc:PersoneFisiche>" & vbCrLf
                End If
                If varTipoRichiedente = "0" Then
                    varTipoRichiedente = "1"
                End If
                testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                        & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf

                If varSubentro <> "0" Then
                    testoXML &= "<loc:Subentro>" & varSubentro & "</loc:Subentro>" & vbCrLf
                End If

                testoXML &= "</loc:Richiedente>" & vbCrLf



                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                cmd.CommandText = "SELECT siscom_mi.seq_DATI_GENERALI_RLI.nextval from dual"
                idFornitura = IfNull(cmd.ExecuteScalar, 0)

                cmd.CommandText = " INSERT INTO SISCOM_MI.DATI_GENERALI_RLI (ID) VALUES (" & idFornitura & ")"
                cmd.ExecuteNonQuery()

                queryInsert = "UPDATE SISCOM_MI.DATI_GENERALI_RLI " _
                    & " SET " _
                    & " NUM_IDENTIFICATIVO_DOC   = " & insDbValue(Format(varContatoreDoc, "00000"), True) & "" _
                    & " ,IDENTIFICATIVO_PRODOTTO_SW   = 'SEPA2009' " _
                    & " ,NUMERO_MODULO_COMPILATI      = 1 " _
                    & " ,ID_CONTRATTO                 = " & insDbValue(IdContratto, False) & " " _
                    & " ,COD_FISCALE_RICHIEDENTE      = " & insDbValue(varCodFiscaleRich, True) & " " _
                    & " ,DENOMINAZIONE_RICHIEDENTE    = " & insDbValue(varCognomeRich.ToUpper, True) & " " _
                    & " ,COD_FISCALE_RAPPRESENTANTE   = " & insDbValue(varCodFiscaleRappr, True) & " " _
                    & " ,COGNOME_RAPPRESENTANTE       = " & insDbValue(varCognomeRappr, True) & " " _
                    & " ,NOME_RAPPRESENTANTE          = " & insDbValue(varNomeRappr, True) & " " _
                    & " ,CODICE_CARICA                = " & insDbValue(varCodiceCarica, False) & " " _
                    & " ,FIRMA                        = " & insDbValue(varFirma, False) & " " _
                    & " ,TIPOLOGIA_RICHIEDENTE        = " & insDbValue(varTipoRichiedente, False) & " " _
                    & " ,SUBENTRO                     = " & insDbValue(varSubentro, False) & " "

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                Dim data_riferimento As String = ""
                Dim data_riferimento2 As String = ""
                Dim giorniDiff As Integer = 0
                Dim idUnita As Long = 0
                Dim provenienza As String = ""

                Dim tipologiaContrLoc As String = ""
                cmd.CommandText = "SELECT RAPPORTI_UTENZA_PROSSIMA_BOL.PROSSIMA_BOLLETTA,TIPOLOGIA_CONTRATTO_LOCAZIONE.DESCRIZIONE AS ""TIPO_C"",TIPOLOGIA_CONTRATTO_LOCAZIONE.RIF_LEGISLATIVO ,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_tr_canone,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_conduttore,RAPPORTI_UTENZA.*,SISCOM_MI.GETSTATOCONTRATTO(RAPPORTI_UTENZA.ID) AS ""STATO"" FROM SISCOM_MI.RAPPORTI_UTENZA_PROSSIMA_BOL,SISCOM_MI.RAPPORTI_UTENZA,SISCOM_MI.TIPOLOGIA_CONTRATTO_LOCAZIONE WHERE RAPPORTI_UTENZA_PROSSIMA_BOL.ID_CONTRATTO(+)=RAPPORTI_UTENZA.ID AND TIPOLOGIA_CONTRATTO_LOCAZIONE.COD=RAPPORTI_UTENZA.COD_TIPOLOGIA_CONTR_LOC AND RAPPORTI_UTENZA.ID=" & IdContratto
                Dim myReaderT As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderT.Read Then
                    CanoneCorrente = IfNull(myReaderT("imp_canone_iniziale"), 0)
                    tipologiaContrLoc = IfNull(myReaderT("TIPO_C"), "")
                    Select Case IfNull(myReaderT("versamento_tr"), "")
                        Case "A"
                            varPagamInteraDurataContr = "0"
                            TipoTributo = "115T"
                        Case "U"
                            varPagamInteraDurataContr = "1"
                            TipoTributo = "107T"
                        Case Else
                            varPagamInteraDurataContr = "0"
                            TipoTributo = "115T"
                    End Select
                    cmd.CommandText = "SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_CONTRATTO=" & IdContratto
                    Dim myReaderX1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReaderX1.Read Then
                        CanoneCorrente = CanoneCorrente + IfNull(myReaderX1(0), 0)
                    End If
                    myReaderX1.Close()

                    TipoContratto = IfNull(myReaderT("PROVENIENZA_ASS"), "")

                    If varPagamInteraDurataContr = "0" Then
                        varImpostaDiRegistro = Format((IfNull(myReaderT("perc_tr_canone"), 0) * CanoneCorrente) / 100, "0.00")

                        If TipoContratto = "6" Or TipoContratto = "62" Or TipoContratto = "64" Or TipoContratto = "65" Then
                            varImpostaDiRegistro = Format((IfNull(myReaderT("perc_tr_canone"), 0) * CanoneCorrente) / 100, "0.00")
                            varImpostaDiRegistro = Format((70 * CDec(varImpostaDiRegistro)) / 100, "0.00")
                        End If
                    Else
                        varImpostaDiRegistro = Format(SoluzioneUnica(CDbl(PuntiInVirgole((IfNull(myReaderT("imp_canone_iniziale"), 0)))), CInt(Format(myReaderT("DURATA_RINNOVO"), "0")), IfNull(myReaderT("perc_tr_canone"), "2")))

                    End If

                    'RAPPORTI_UTENZA.DATA_STIPULA>=RAPPORTI_UTENZA.DATA_DECORRENZA and data_Decorrenza_Ae=data_Decorrenza THEN DATA_DECORRENZA_AE WHEN data_Decorrenza_Ae>data_Decorrenza THEN DATA_DECORRENZA_AE ELSE DATA_STIPULA
                    varDataFine = FormattaData(IfNull(myReaderT("data_scadenza"), ""))

                    If IfNull(myReaderT("data_stipula"), "29991231") >= IfNull(myReaderT("data_decorrenza"), "29991231") And IfNull(myReaderT("data_decorrenza_AE"), "29991231") = IfNull(myReaderT("data_decorrenza"), "29991231") Then
                        data_riferimento = IfNull(myReaderT("data_decorrenza_AE"), "29991231")
                    ElseIf IfNull(myReaderT("data_decorrenza_AE"), "29991231") > IfNull(myReaderT("data_decorrenza"), "29991231") Then
                        data_riferimento = IfNull(myReaderT("data_decorrenza_AE"), "29991231")
                    Else
                        data_riferimento = IfNull(myReaderT("data_Stipula"), "29991231")
                        data_riferimento2 = Format(DateAdd(DateInterval.Day, -1, CDate(FormattaData(data_riferimento))), "yyyyMMdd")
                        varDataFine = Format(DateAdd(DateInterval.Year, IfNull(myReaderT("durata_anni"), "4"), CDate(FormattaData(data_riferimento2))), "yyyyMMdd")
                        varDataFine = FormattaData(varDataFine)

                    End If
                    varDataInizio = FormattaData(data_riferimento)
                    FL_BOLLO_ESENTE = IfNull(myReaderT("FL_BOLLO_ASSOLTO"), "0")
                End If
                myReaderT.Close()

                If CDec(varImpostaDiRegistro) < CDec(LimiteTassaRegistrazione) Then
                    varImpostaDiRegistro = LimiteTassaRegistrazione
                End If

                varImportoCanone = Format(CanoneCorrente, "0.00")

                cmd.CommandText = "SELECT UNITA_IMMOBILIARI.ID FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE ID_CONTRATTO=" & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE IS NULL"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    idUnita = IfNull(myReaderT("ID"), 0)
                End If
                myReaderT.Close()

                cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_ASSEGNATE WHERE ID_UNITA=" & idUnita & " ORDER BY ID_DOMANDA DESC"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    provenienza = IfNull(myReaderT("PROVENIENZA"), "")
                End If
                myReaderT.Close()

                Select Case TipoContratto
                    Case "6"
                        Select Case provenienza
                            Case "C"
                                TipoContratto = "61"
                            Case "P"
                                TipoContratto = "62"
                            Case "S"
                                TipoContratto = "63"
                            Case "D"
                                TipoContratto = "64"
                            Case "V"
                                TipoContratto = "65"
                            Case Else

                        End Select
                    Case "3"
                        Select Case provenienza
                            Case "B"
                                TipoContratto = "BOX"
                            Case "N"
                                TipoContratto = "NEGOZI"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                    Case "5"
                        Select Case provenienza
                            Case "A"
                                TipoContratto = "392ASS"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                End Select

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varTipoContratto = "S1"
                ElseIf TipoContratto = "62" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varTipoContratto = "L2"
                Else
                    varTipoContratto = "L1"
                End If

                'testoXML &= "<loc:TipologiaContratto>" & varTipoContratto & "</loc:TipologiaContratto>" & vbCrLf _
                '      & "<loc:PagamentoInteraDurataContratto>" & varPagamInteraDurataContr & "</loc:PagamentoInteraDurataContratto>" & vbCrLf _
                '      & "<loc:EventiEccezionali>" & varEventiEccezionali & "</loc:EventiEccezionali>" & vbCrLf



                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,TIPOLOGIA_CONTRATTO = " & insDbValue(varTipoContratto, True) & " " _
                    & " ,PAGAMENTO_INTERA_DURATA_RU   = " & insDbValue(varPagamInteraDurataContr, False) & " " _
                    & " ,EVENTI_ECCEZIONALI  = " & insDbValue(varEventiEccezionali, False) & " "

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI



                'giorniDiff = DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(CStr(DateAdd("d", 30, CDate(FormattaData(data_riferimento)))))) 'DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(FormattaData(dataInvio)))
                giorniDiff = (CDate(FormattaData(dataInvio)) - CDate(CStr(DateAdd("d", 30, CDate(FormattaData(data_riferimento)))))).Days
                varImpostaDiRegistro = Format(Math.Round(CDec(varImpostaDiRegistro), 0, MidpointRounding.AwayFromZero), "0.00")

                If giorniDiff > 0 Then
                    If giorniDiff <= 30 Then
                        If (varImpostaDiRegistro * 6) / 100 < 20 Then
                            varSanzImpostaDiRegistro = Format(20, "0.00")
                        Else
                            varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 6) / 100, "0.00")
                        End If
                    End If

                    If giorniDiff >= 31 And giorniDiff <= 90 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 12) / 100, "0.00")
                    End If

                    If giorniDiff >= 91 And giorniDiff <= 365 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 15) / 100, "0.00")
                    End If

                    If giorniDiff >= 366 And giorniDiff <= 730 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 17.14) / 100, "0.00")
                    End If

                    If giorniDiff >= 731 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 20) / 100, "0.00")
                    End If
                End If
                Dim Giorni As Integer = 0
                Dim GiorniAnno As Integer = 0
                Dim dataPartenza As String = ""

                Dim TotaleInteressi As Decimal = 0
                Dim TotalePeriodo As Decimal = 0
                Dim indice As Long = 0
                Dim tasso As Decimal = 0
                Dim DataFine As String = ""
                Dim DataInizio As String = ""

                If varSanzImpostaDiRegistro > 0 Then
                    'DataCalcolo = AggiustaData(dataInvio)
                    DataInizio = Format(DateAdd(DateInterval.Day, 30, CDate(FormattaData(data_riferimento))), "yyyyMMdd")

                    Giorni = 0
                    GiorniAnno = 0
                    dataPartenza = DataInizio
                    TotaleInteressi = 0
                    TotalePeriodo = 0

                    For KK = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))
                        If KK = CInt(Mid(dataInvio, 1, 4)) Then
                            DataFine = FormattaData(dataInvio)
                        Else
                            DataFine = "31/12/" & KK
                        End If
                        GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK), CDate("31/12/" & KK)) + 1
                        Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1
                        If KK < 1990 Then
                            tasso = 5
                        Else
                            If varInteressi.ContainsKey(KK) = True Then
                                tasso = varInteressi(KK)
                            End If
                        End If
                        TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                        TotaleInteressi = TotaleInteressi + TotalePeriodo
                        dataPartenza = KK + 1 & "0101"
                    Next
                Else
                    TotaleInteressi = 0
                    TotalePeriodo = 0
                End If

                Dim importobollo As String = ""
                importobollo = varImportoBolloParam
                If TipoContratto = "6" Or TipoContratto = "61" Or TipoContratto = "62" Or TipoContratto = "62" Or TipoContratto = "12" Or TipoContratto = "1" Or TipoContratto = "ERPB" Or TipoContratto = "8" Or TipoContratto = "2" Or TipoContratto = "10" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varNumeroPagine = "5"
                    'importobollo = "80,00"
                End If

                If TipoContratto = "392ASS" Then
                    varNumeroPagine = "5"
                    'importobollo = "96,00"
                End If

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varNumeroPagine = "6"
                    'importobollo = "96,00"
                End If

                importobollo = Ceiling((CDec(varNumeroPagine) / 4)) * CDec(PuntiInVirgole(importobollo)) * CDec(varNumeroCopie)

                If FL_BOLLO_ESENTE = "1" Then
                    varContrattoEsente = "1"
                    varNumeroPagine = "2"
                    importobollo = "0,00"
                End If

                'importobollo = "0,00"
                varImpostaDiBollo = importobollo

                If giorniDiff > 0 Then
                    If giorniDiff <= 30 Then
                        varSanzImpostaDiBollo = Format((varImpostaDiBollo * 10) / 100, "0.00")
                    End If

                    If giorniDiff >= 31 And giorniDiff <= 90 Then
                        varSanzImpostaDiBollo = Format((varImpostaDiBollo * 11.12) / 100, "0.00")
                    End If

                    If giorniDiff >= 91 And giorniDiff <= 365 Then
                        varSanzImpostaDiBollo = Format((varImpostaDiBollo * 12.5) / 100, "0.00")
                    End If

                    If giorniDiff >= 366 And giorniDiff <= 730 Then
                        varSanzImpostaDiBollo = Format((varImpostaDiBollo * 14.29) / 100, "0.00")
                    End If

                    If giorniDiff >= 731 Then
                        varSanzImpostaDiBollo = Format((varImpostaDiBollo * 16.67) / 100, "0.00")
                    End If
                End If
                testoXML &= "<loc:TipologiaContratto>" & varTipoContratto & "</loc:TipologiaContratto>" & vbCrLf _
                       & "<loc:DataInizio>" & Replace(FormattaData(varDataInizio), "/", "") & "</loc:DataInizio>" & vbCrLf _
                       & "<loc:DataFine>" & Replace(FormattaData(varDataFine), "/", "") & "</loc:DataFine>" & vbCrLf _
                       & "<loc:ImportoCanone>" & CStr(varImportoCanone) & "</loc:ImportoCanone>" & vbCrLf
                If varPagamInteraDurataContr = 1 Then
                    testoXML &= "<loc:PagamentoInteraDurataContratto>" & varPagamInteraDurataContr & "</loc:PagamentoInteraDurataContratto>" & vbCrLf
                End If
                If varContrattoEsente = "1" Then
                    testoXML &= "<loc:ContrattoEsente>" & varContrattoEsente & "</loc:ContrattoEsente>" & vbCrLf
                End If

                '& "<loc:EventiEccezionali>" & varEventiEccezionali & "</loc:EventiEccezionali>" & vbCrLf

                testoXML &= "<loc:Importi>" & vbCrLf _
                        & "<loc:Imposte>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & Format(CDec(varImpostaDiRegistro), "0.00") & "</loc:ImpostaDiRegistro>" & vbCrLf _
                        & "<loc:ImpostaDiBollo>" & Format(CDec(varImpostaDiBollo), "0.00") & "</loc:ImpostaDiBollo>" & vbCrLf _
                        & "</loc:Imposte>" & vbCrLf

                If varSanzImpostaDiRegistro <> "0" Then
                    testoXML &= "<loc:Sanzioni>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varSanzImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf
                    If varSanzImpostaDiBollo <> "0" Then
                        testoXML &= "<loc:ImpostaDiBollo>" & varSanzImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf
                    End If
                    testoXML &= "</loc:Sanzioni>" & vbCrLf
                End If

                If TotaleInteressi <> 0 Then
                    testoXML &= "<loc:Interessi>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & Format(TotaleInteressi, "0.00") & "</loc:ImpostaDiRegistro>" & vbCrLf
                    If varInterImpostaDiBollo <> "0" Then
                        testoXML &= "<loc:ImpostaDiBollo>" & varInterImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf
                    End If
                    testoXML &= "</loc:Interessi>" & vbCrLf
                End If
                testoXML &= "</loc:Importi>" & vbCrLf

                testoXML &= "<loc:Registrazione>" & vbCrLf _
                    & "<loc:Contratto>" & vbCrLf _
                    & "<loc:DataStipula>" & Replace(FormattaData(varDataInizio), "/", "") & "</loc:DataStipula>" & vbCrLf _
                    & "<loc:NumeroPagine>" & varNumeroPagine & "</loc:NumeroPagine>" & vbCrLf _
                    & "<loc:NumeroCopie>" & varNumeroCopie & "</loc:NumeroCopie>" & vbCrLf _
                    & "<loc:ContrattoSoggettoIVA>" & varContrSoggettoIVA & "</loc:ContrattoSoggettoIVA>" & vbCrLf

                totImporti = CDec(varImpostaDiRegistro) + CDec(varImpostaDiBollo) + CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo) + CDec(TotaleInteressi)


                testoXML &= "</loc:Contratto>" & vbCrLf


                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,IMPOSTA_REGISTRO = " & insDbValue(varImpostaDiRegistro, True) _
                    & " ,IMPOSTA_BOLLO                = " & insDbValue(varImpostaDiBollo, True) _
                    & " ,SANZIONE_IMP_REGISTRO        = " & insDbValue(varSanzImpostaDiRegistro, True) _
                    & " ,SANZIONE_IMP_BOLLO           = " & insDbValue(varSanzImpostaDiBollo, True) _
                    & " ,TOT_INTERESSI                = " & insDbValue(TotaleInteressi, True) _
                    & " ,NUM_PROGRESSIVO_CANONE       = " & insDbValue(varNumProgressCanone, True) _
                    & " ,DATA_INIZIO_CONTRATTO        = " & insDbValue(varDataInizio, True, True) _
                    & " ,DATA_FINE_CONTRATTO          = " & insDbValue(varDataFine, True, True) _
                    & " ,IMPORTO_CANONE               = " & insDbValue(varImportoCanone, True) _
                    & " ,DATA_STIPULA                 = " & insDbValue(varDataInizio, True, True) _
                    & " ,NUMERO_PAGINE                = " & insDbValue(varNumeroPagine, False) _
                    & " ,NUMERO_COPIE                 = " & insDbValue(varNumeroCopie, False) _
                    & " ,CONTRATTO_SOGG_IVA           = " & insDbValue(varContrSoggettoIVA, False)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                varPdfBase64 = ConversioneBase64(IdContratto)

                testoXML &= "<loc:Allegati>" & vbCrLf _
                & "<reg:FileType>application/pdf</reg:FileType>" & vbCrLf _
                & "<reg:FileName>" & varIDcontratto & Format(Now, "yyyyMMdd") & "</reg:FileName>" & vbCrLf _
                & "<reg:FileDescription>STAMPACONTRATTO</reg:FileDescription>" & vbCrLf _
                & "<reg:ImageData>" & varPdfBase64 & "</reg:ImageData></loc:Allegati>"

                testoXML &= "</loc:Registrazione>" & vbCrLf

                varImpegnoATrasmettere = "<loc:ImpegnoATrasmettere>" & vbCrLf _
                                     & " <reg:CFintermediario>" & varCFintermediario & "</reg:CFintermediario>" & vbCrLf _
                                      & "<reg:ImpegnoATrasmettere>1</reg:ImpegnoATrasmettere>" & vbCrLf _
                                      & " <reg:DataImpegno>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</reg:DataImpegno>" & vbCrLf _
                                     & " <reg:FirmaIntermediario>1</reg:FirmaIntermediario>" & vbCrLf _
                                   & "</loc:ImpegnoATrasmettere>" & vbCrLf _
                                    & " <loc:DataInvio>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</loc:DataInvio>" & vbCrLf

                testoXML &= varImpegnoATrasmettere & "</loc:Frontespizio>" & vbCrLf

                Dim moduloSoggetti As String = ""

                testoXML &= "<loc:Soggetti>" & vbCrLf _
                    & "<loc:PrimoModulo>" & vbCrLf _
                    & "<loc:Locatore>" & vbCrLf _
                    & "<loc:NumeroProgressivo>" & varContatoreLocatore & "</loc:NumeroProgressivo>" & vbCrLf _
                    & "<loc:CodiceFiscale>" & varCodFiscFornitore & "</loc:CodiceFiscale>" & vbCrLf _
                    & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf _
                    & "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Denominazione>" & varDenominazione.ToUpper & "</loc:Denominazione>" & vbCrLf _
                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "</loc:Locatore>" & vbCrLf

                moduloSoggetti = "<loc:Modulo>" & vbCrLf _
                    & "<loc:Locatore>" & vbCrLf _
                    & "<loc:NumeroProgressivo>" & varContatoreLocatore & "</loc:NumeroProgressivo>" & vbCrLf _
                    & "<loc:CodiceFiscale>" & varCodFiscFornitore & "</loc:CodiceFiscale>" & vbCrLf _
                    & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf _
                    & "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Denominazione>" & varDenominazione.ToUpper & "</loc:Denominazione>" & vbCrLf _
                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "</loc:Locatore>" & vbCrLf



                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,CF_INTERMEDIARIO = " & insDbValue(varCFintermediario, True) _
                    & " ,IMPEGNO_A_TRASMETTERE        = 1" _
                    & " ,DATA_IMPEGNO                 = " & insDbValue(dataInvio, True) _
                    & " ,FIRMA_INTERMEDIARIO          = " & insDbValue(varFirmaIntermediario, False) _
                    & " ,NUM_PROGRESSIVO_LOCATORE     = " & insDbValue(varContatoreLocatore, True) _
                    & " ,COD_FISCALE_LOCATORE         = " & insDbValue(varCodFiscFornitore, True) _
                    & " ,SOGGETTIVITA_IVA_LOCATORE    = " & insDbValue(varSoggettIVALocat, False) _
                    & " ,DENOMINAZIONE_LOCATORE       = " & insDbValue(varDenominazione.ToUpper, True)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                Dim varCodiceUtente As String = ""
                Dim cFisc As String = ""
                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='INTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                Dim dtAnagr As New Data.DataTable
                da.Fill(dtAnagr)
                da.Dispose()
                If dtAnagr.Rows.Count > 0 Then
                    For Each rowAnagr As Data.DataRow In dtAnagr.Rows
                        varContatoreSoggetti = varContatoreSoggetti + 1
                        varCodiceUtente = IfNull(rowAnagr.Item("id_anagrafica"), 0)
                        If IfNull(rowAnagr("PARTITA_IVA"), "") <> "" Then
                            cFisc = IfNull(rowAnagr("PARTITA_IVA"), "")
                            persGiuridica = True
                        Else
                            cFisc = IfNull(rowAnagr("COD_FISCALE"), "")
                            persGiuridica = False
                        End If

                        testoXML &= "<loc:Conduttore>" & vbCrLf _
                            & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                            & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                            & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf


                        cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr.Item("COD_FISCALE"), ""), 12, 4) & "'"
                        myReaderT = cmd.ExecuteReader()
                        If myReaderT.Read Then
                            varComuneNascita = IfNull(myReaderT("NOME"), "")
                            varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                        End If
                        myReaderT.Close()

                        If persGiuridica = False Then
                            testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                            & "<sc:Cognome>" & IfNull(rowAnagr("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                            & "<sc:Nome>" & IfNull(rowAnagr("NOME"), "") & "</sc:Nome>" & vbCrLf _
                            & "<sc:Sesso>" & IfNull(rowAnagr("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                            & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                            & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf

                            If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                varProvinciaNascita = "EE"
                            End If
                            testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                            testoXML &= "</loc:PersoneFisiche>" & vbCrLf


                        Else
                            testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                            & "<loc:Denominazione>" & IfNull(rowAnagr("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                            & "</loc:SoggettiDiversiDaPF>" & vbCrLf


                        End If

                        '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                        queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE   = " & insDbValue("00" & varContatoreSoggetti, True) _
                    & " ,COD_FISCALE_CONDUTTORE       = " & insDbValue(cFisc, True) _
                    & " ,SOGGETTIVITA_IVA_CONDUTTORE  = " & insDbValue(varSoggettivitaIVA, False) _
                    & " ,COGNOME_CONDUTTORE           = " & insDbValue(rowAnagr("COGNOME").ToString, True) _
                    & " ,NOME_CONDUTTORE              = " & insDbValue(rowAnagr("NOME").ToString, True) _
                    & " ,DENOMINAZIONE_CONDUTTORE     = " & insDbValue(rowAnagr("RAGIONE_SOCIALE").ToString, True) _
                    & " ,SESSO_CONDUTTORE             = " & insDbValue(rowAnagr("SESSO").ToString, True) _
                    & " ,DATA_NASCITA_CONDUTTORE      = " & insDbValue(rowAnagr("DATA_NASCITA").ToString, True) _
                    & " ,COMUNE_NASCITA_CONDUTTORE    = " & insDbValue(varComuneNascita, True) _
                    & " ,PROVINCIA_NASCITA_CONDUTTORE = " & insDbValue(varProvinciaNascita, True) _
                    & " ,NOME_FILE_XML = " & insDbValue(sNomeFileContenitore & ".xml", True)

                        '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI
                    Next
                    testoXML &= "<loc:TipologiaConduttore>3</loc:TipologiaConduttore></loc:Conduttore>" & vbCrLf
                End If

                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='COINT' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                Dim da2 As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                Dim dtAnagr2 As New Data.DataTable
                da2.Fill(dtAnagr2)
                da2.Dispose()
                If dtAnagr2.Rows.Count > 0 Then
                    For Each rowAnagr2 As Data.DataRow In dtAnagr2.Rows
                        varContatoreSoggetti = varContatoreSoggetti + 1
                        If IfNull(rowAnagr2("PARTITA_IVA"), "") <> "" Then
                            cFisc = IfNull(rowAnagr2("PARTITA_IVA"), "")
                            persGiuridica = True
                        Else
                            cFisc = IfNull(rowAnagr2("COD_FISCALE"), "")
                            persGiuridica = False
                        End If
                        testoXML &= "<loc:Conduttore>" & vbCrLf _
                            & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                            & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                            & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                        cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr2.Item("COD_FISCALE"), ""), 12, 4) & "'"
                        myReaderT = cmd.ExecuteReader()
                        If myReaderT.Read Then
                            varComuneNascita = IfNull(myReaderT("NOME"), "")
                            varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                        End If
                        myReaderT.Close()

                        If persGiuridica = False Then
                            testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                            & "<sc:Cognome>" & IfNull(rowAnagr2("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                            & "<sc:Nome>" & IfNull(rowAnagr2("NOME"), "") & "</sc:Nome>" & vbCrLf _
                            & "<sc:Sesso>" & IfNull(rowAnagr2("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                            & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr2("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                            & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                            If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                varProvinciaNascita = "EE"
                            End If
                            testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                            testoXML &= "</loc:PersoneFisiche>" & vbCrLf

                        Else
                            testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                            & "<loc:Denominazione>" & IfNull(rowAnagr2("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                            & "</loc:SoggettiDiversiDaPF>" & vbCrLf

                        End If

                        '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                        queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE_2   = " & insDbValue("00" & varContatoreSoggetti, True) _
                    & " ,COD_FISCALE_CONDUTTORE_2       = " & insDbValue(cFisc, True) _
                    & " ,SOGGETTIVITA_IVA_CONDUTTORE_2  = " & insDbValue(varSoggettivitaIVA, False) _
                    & " ,COGNOME_CONDUTTORE_2           = " & insDbValue(rowAnagr2("COGNOME").ToString, True) _
                    & " ,NOME_CONDUTTORE_2              = " & insDbValue(rowAnagr2("NOME").ToString, True) _
                    & " ,DENOMINAZIONE_CONDUTTORE_2     = " & insDbValue(rowAnagr2("RAGIONE_SOCIALE").ToString, True) _
                    & " ,SESSO_CONDUTTORE_2             = " & insDbValue(rowAnagr2("SESSO").ToString, True) _
                    & " ,DATA_NASCITA_CONDUTTORE_2      = " & insDbValue(rowAnagr2("DATA_NASCITA").ToString, True) _
                    & " ,COMUNE_NASCITA_CONDUTTORE_2    = " & insDbValue(varComuneNascita, True) _
                    & " ,PROVINCIA_NASCITA_CONDUTTORE_2 = " & insDbValue(varProvinciaNascita, True)

                        '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI
                        testoXML &= "<loc:TipologiaConduttore>3</loc:TipologiaConduttore></loc:Conduttore>" & vbCrLf

                    Next
                End If



                moduloSoggetti &= "</loc:Modulo>" & vbCrLf
                moduloSoggetti = ""

                testoXML &= moduloSoggetti & "</loc:PrimoModulo></loc:Soggetti>" & vbCrLf

                testoXML &= "<loc:Immobili>" & vbCrLf _
                & "<loc:PrimoModulo>" & vbCrLf

                Dim codContratto As String = ""
                Dim categCatast As String = ""
                'cmd.CommandText = "SELECT edifici.id_complesso as complesso,edifici.denominazione as denominazioneedificio,rapporti_utenza.id_domanda" _
                '    & ",rapporti_utenza.cod_contratto,rapporti_utenza.descr_dest_uso,RAPPORTI_UTENZA.DEST_USO,rapporti_utenza.data_stipula," _
                '    & " rapporti_utenza.cod_ufficio_reg,RAPPORTI_UTENZA.MESI_DISDETTA,rapporti_utenza.durata_anni,rapporti_utenza.data_decorrenza," _
                '    & "rapporti_utenza.data_scadenza,rapporti_utenza.imp_canone_iniziale,rapporti_utenza.imp_deposito_cauz,rapporti_utenza.durata_rinnovo," _
                '    & "rapporti_utenza.data_scadenza_rinnovo,rapporti_utenza.data_delibera,rapporti_utenza.delibera,rapporti_utenza.nro_rate," _
                '    & "rapporti_utenza.perc_istat,unita_contrattuale.*,comuni_nazioni.cod as ""cod_catastale"",comuni_nazioni.nome as ""comune""," _
                '    & "comuni_nazioni.sigla from siscom_MI.rapporti_utenza,comuni_nazioni,siscom_mi.UNITA_CONTRATTuale,SISCOM_MI.edifici " _
                '    & "where edifici.id=unita_contrattuale.id_edificio and rapporti_utenza.id=unita_contrattuale.id_contratto and " _
                '    & "comuni_nazioni.cod=unita_contrattuale.cod_comune and id_CONTRATTO=" & IdContratto & " order by id_unita_principale desc"
                cmd.CommandText = "SELECT edifici.id_complesso as complesso,identificativi_catastali.rendita,identificativi_catastali.sezione,identificativi_catastali.foglio,identificativi_catastali.numero,identificativi_catastali.sub, " _
            & "identificativi_catastali.cod_categoria_catastale,edifici.denominazione as denominazioneedificio,rapporti_utenza.id_domanda,rapporti_utenza.cod_contratto,rapporti_utenza.descr_dest_uso,RAPPORTI_UTENZA.DEST_USO,rapporti_utenza.data_stipula, " _
            & "rapporti_utenza.cod_ufficio_reg,RAPPORTI_UTENZA.MESI_DISDETTA,rapporti_utenza.durata_anni,rapporti_utenza.data_scadenza,rapporti_utenza.imp_canone_iniziale,rapporti_utenza.imp_deposito_cauz, " _
            & "rapporti_utenza.durata_rinnovo,rapporti_utenza.data_scadenza_rinnovo,rapporti_utenza.data_delibera,rapporti_utenza.delibera,rapporti_utenza.nro_rate,rapporti_utenza.perc_istat,unita_contrattuale.*,comuni_nazioni.cod as ""cod_catastale"",comuni_nazioni.nome as ""comune"",comuni_nazioni.sigla " _
            & "from siscom_mi.rapporti_utenza,comuni_nazioni,siscom_mi.UNITA_CONTRATTuale,siscom_mi.edifici,siscom_mi.unita_immobiliari,siscom_mi.identificativi_catastali " _
            & "where edifici.id=unita_contrattuale.id_edificio and rapporti_utenza.id=unita_contrattuale.id_contratto and comuni_nazioni.cod=unita_contrattuale.cod_comune and id_CONTRATTO=" & IdContratto & " and unita_immobiliari.id_catastale=identificativi_catastali.id(+) and unita_immobiliari.id = unita_contrattuale.id_unita " _
            & "order by id_unita_principale desc"

                Dim daImm As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                Dim dtImm As New Data.DataTable
                daImm.Fill(dtImm)
                daImm.Dispose()

                If dtImm.Rows.Count > 0 Then
                    For Each rowImm As Data.DataRow In dtImm.Rows
                        codContratto = IfNull(rowImm.Item("COD_CONTRATTO"), "")
                        If IfNull(rowImm.Item("ID_UNITA_PRINCIPALE"), 0) <> 0 Then
                            varTipoImmobile = "2"
                        Else
                            varTipoImmobile = "1"
                        End If
                        varContatoreImmobili = varContatoreImmobili + 1
                        If varContatoreImmobili = 5 Then
                            testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                                & "<loc:Modulo>" & vbCrLf
                        End If

                        testoXML &= "<loc:Immobile>" & vbCrLf _
                            & "<loc:NumeroProgressivoImmobile>00" & varContatoreImmobili & "</loc:NumeroProgressivoImmobile>" & vbCrLf _
                            & "<loc:TipologiaImmobile>" & varTipoImmobile & "</loc:TipologiaImmobile>" & vbCrLf _
                            & "<loc:CodiceComuneCatastale>" & IfNull(rowImm.Item("cod_catastale"), "") & "</loc:CodiceComuneCatastale>" & vbCrLf _
                            & "<loc:TipoCatasto>" & varTipoCatasto & "</loc:TipoCatasto>" & vbCrLf _
                            & "<loc:PorzioneImmobile>" & varPorzioneImmobile & "</loc:PorzioneImmobile>" & vbCrLf

                        If Mid(IfNull(rowImm.Item("sezione"), "   "), 1, 3) <> "   " Then
                            testoXML &= "<loc:SezioneUrbana>" & Mid(IfNull(rowImm.Item("sezione"), "   "), 1, 3) & "</loc:SezioneUrbana>" & vbCrLf
                        End If

                        If IfNull(rowImm.Item("rendita"), 0) <> 0 Then
                            'If varTipoImmobile <> "2" Then
                            If IfNull(rowImm.Item("sub"), "") <> "" And IfNull(rowImm.Item("sub"), "0") <> "0" Then
                                testoXML &= "<loc:DatiCatastali>" & vbCrLf _
                                    & "<reg:Foglio>" & IfNull(rowImm.Item("foglio"), "") & "</reg:Foglio>" & vbCrLf _
                                    & "<reg:Particella>" & IfNull(rowImm.Item("NUMERO"), "") & "</reg:Particella>" & vbCrLf

                                If Mid(IfNull(rowImm.Item("sub"), "    "), 1, 4) <> "    " Then
                                    testoXML &= "<reg:Subalterno>" & Mid(IfNull(rowImm.Item("sub"), "    "), 1, 4) & "</reg:Subalterno>" & vbCrLf
                                End If

                                testoXML &= "</loc:DatiCatastali>" & vbCrLf
                            Else
                                varInViaDiAccatastam = "1"
                                testoXML &= "<loc:InViaDiAccatastamento>1</loc:InViaDiAccatastamento>" & vbCrLf
                            End If
                            'Else
                            'varInViaDiAccatastam = "1"
                            'testoXML &= "<loc:InViaDiAccatastamento>1</loc:InViaDiAccatastamento>" & vbCrLf
                            'End If

                            testoXML &= "<loc:Comune>" & IfNull(rowImm.Item("comune"), "") & "</loc:Comune>" & vbCrLf _
                            & "<loc:Provincia>" & IfNull(rowImm.Item("sigla"), "") & "</loc:Provincia>" & vbCrLf

                            If IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "" And IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "000" Then
                                If Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1) = "0" Then
                                    categCatast = Replace(IfNull(rowImm.Item("cod_categoria_catastale"), "---"), Mid(IfNull(rowImm.Item("cod_categoria_catastale"), "---"), 2, 1), "")
                                Else
                                    categCatast = IfNull(rowImm.Item("cod_categoria_catastale"), "---")
                                End If
                                testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                            Else
                                If IfNull(rowImm.Item("TIPOLOGIA"), 0) = "C" Then
                                    testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                                End If
                            End If
                            ' If IfNull(rowImm.Item("rendita"), 0) <> 0 Then
                            testoXML &= "<loc:RenditaCatastale>" & Format(IfNull(rowImm.Item("rendita"), 0), "0.00") & "</loc:RenditaCatastale>" & vbCrLf
                            ' End If
                        Else
                            varInViaDiAccatastam = "1"
                            testoXML &= "<loc:InViaDiAccatastamento>1</loc:InViaDiAccatastamento>" & vbCrLf
                            testoXML &= "<loc:Comune>" & IfNull(rowImm.Item("comune"), "") & "</loc:Comune>" & vbCrLf _
                            & "<loc:Provincia>" & IfNull(rowImm.Item("sigla"), "") & "</loc:Provincia>" & vbCrLf

                            If IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "" And IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "000" Then
                                If Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1) = "0" Then
                                    categCatast = Replace(IfNull(rowImm.Item("cod_categoria_catastale"), "---"), Mid(IfNull(rowImm.Item("cod_categoria_catastale"), "---"), 2, 1), "")
                                End If
                                testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                            Else
                                If IfNull(rowImm.Item("TIPOLOGIA"), 0) = "C" Then
                                    testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                                End If
                            End If
                            testoXML &= "<loc:RenditaCatastale>" & Format(IfNull(rowImm.Item("rendita"), 0), "0.00") & "</loc:RenditaCatastale>" & vbCrLf
                        End If
                        testoXML &= "<loc:TipologiaIndirizzo>" & RicavaVial(IfNull(rowImm.Item("indirizzo"), "")) & "</loc:TipologiaIndirizzo>" & vbCrLf _
                        & "<loc:Indirizzo>" & Mid(IfNull(rowImm.Item("indirizzo"), ""), 1, 35) & "</loc:Indirizzo>" & vbCrLf _
                        & "<loc:NumCivico>" & RTrim(LTrim(IfNull(rowImm.Item("civico"), "s.n.c.").ToString.ToUpper)) & "</loc:NumCivico>" & vbCrLf _
                        & "</loc:Immobile>" & vbCrLf

                        cmd.CommandText = " INSERT INTO SISCOM_MI.DATI_IMMOBILI_RLI (" _
                            & " ID, NUM_PROGRESSIVO, TIPOLOGIA_IMMOBILE, " _
                            & " CODICE_COMUNE_CATASTALE, TIPO_CATASTO, PORZIONE_IMMOBILE, " _
                            & " FOGLIO, PARTICELLA, PARTICELLA_DENOMINATORE, " _
                            & " SUBALTERNO, COMUNE, PROVINCIA, " _
                            & " CATEGORIA_CATASTALE, RENDITA_CATASTALE, TIPOLOGIA_INDIRIZZO, " _
                            & " INDIRIZZO, NUM_CIVICO,ID_FORNITURA) " _
                            & " VALUES ( siscom_mi.seq_DATI_IMMOBILI_RLI.nextval," _
                            & "'00" & varContatoreImmobili & "'," _
                            & insDbValue(varTipoImmobile, False) & " ," _
                            & insDbValue(rowImm.Item("cod_catastale").ToString, True) & " ," _
                            & insDbValue(varTipoCatasto, True) & " ," _
                            & insDbValue(varPorzioneImmobile, True) & " ," _
                            & insDbValue(rowImm.Item("foglio").ToString, True) & " ," _
                            & insDbValue(rowImm.Item("NUMERO").ToString, True) & " ," _
                            & insDbValue(Mid(rowImm.Item("NUMERO").ToString, 1, 5), True) & " ," _
                            & insDbValue(Mid(rowImm.Item("sub").ToString, 1, 4), True) & " ," _
                            & insDbValue(rowImm.Item("comune").ToString, True) & " ," _
                            & insDbValue(rowImm.Item("sigla").ToString, True) & " ," _
                            & insDbValue(categCatast, True) & " ," _
                            & insDbValue(rowImm.Item("rendita").ToString, True) & " ," _
                            & insDbValue(RicavaVial(rowImm.Item("indirizzo").ToString), True) & " ," _
                            & insDbValue(rowImm.Item("indirizzo").ToString, True) & " ," _
                            & insDbValue(Replace(RTrim(LTrim(rowImm.Item("civico").ToString)), "/", ""), True) & " ," _
                            & idFornitura & " )"
                        cmd.ExecuteNonQuery()
                    Next
                End If
                If dtImm.Rows.Count < 5 Then
                testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                & "</loc:Immobili>" & vbCrLf
                Else
                    testoXML &= "</loc:Modulo>" & vbCrLf _
                             & "</loc:Immobili>" & vbCrLf
                End If


                varContatoreImmobili = 0
                If varTipoContratto = "L1" Or varTipoContratto = "L2" Then
                    testoXML &= "<loc:Relazioni>" & vbCrLf _
                           & "<loc:PrimoModulo>" & vbCrLf
                    For Each rowRelaz As Data.DataRow In dtImm.Rows
                        varContatoreImmobili = varContatoreImmobili + 1

                        testoXML &= "<loc:LocazioneUsoAbitativo>" & vbCrLf _
                       & "<loc:ImmobileNumero>" & varContatoreImmobili & "</loc:ImmobileNumero>" & vbCrLf _
                       & "<loc:LocatoreNumero>1</loc:LocatoreNumero>" & vbCrLf _
                       & "<loc:PercentualePossesso>" & Format(CDec(varPercentualePossesso), "0.00") & "</loc:PercentualePossesso>" & vbCrLf _
                       & "<loc:Cedolare>N</loc:Cedolare>" & vbCrLf _
                       & "</loc:LocazioneUsoAbitativo>" & vbCrLf
                    Next
                    testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                     & "</loc:Relazioni>" & vbCrLf
                End If

                testoXML &= "</loc:Documento>" & vbCrLf


                strFileTxt &= IdContratto & vbTab & codContratto & vbTab & varCodiceUtente & vbTab & tipologiaContrLoc & vbTab & varImpostaDiRegistro & vbTab & varSanzImpostaDiRegistro & vbTab & TotaleInteressi & vbTab & FormattaData(dataInvio) & vbTab & FormattaData(data_riferimento)
                If giorniDiff < 31 Then
                    giorniDiff = 0
                Else
                    giorniDiff = giorniDiff - 30
                End If
                cmd.CommandText = "INSERT INTO SISCOM_MI.RAPPORTI_UTENZA_IMPOSTE (ID_CONTRATTO,ANNO,COD_TRIBUTO,DATA_CREAZIONE,DATA_AE,IMPORTO_CANONE,IMPORTO_TRIBUTO,GIORNI_SANZIONE,IMPORTO_SANZIONE,IMPORTO_INTERESSI,file_scaricato,CF_PIVA) VALUES (" & IdContratto & "," & Year(Now) & ",'" & TipoTributo & "','" & Format(Now, "yyyyMMddHHmmss") & "','" & dataInvio & "'," & VirgoleInPunti(CanoneCorrente) & "," & VirgoleInPunti(varImpostaDiRegistro) & "," & giorniDiff & "," & VirgoleInPunti(varSanzImpostaDiRegistro) & "," & VirgoleInPunti(TotaleInteressi) & ",'" & sNomeFileContenitore & ".xml','" & varCodFiscaleCond & "')"
                cmd.ExecuteNonQuery()

            End If

            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
            End If

            'Catch ex As Exception
            '    strErrore = ex.Message
            '    testoXML = "ERRORE: " & ex.Message
            'End Try

            Return testoXML

        End Function

        Public Function ScriveXMLStipulaContrOld(ByVal IdContratto As Long, ByVal dataInvio As String, ByVal varContatoreDoc As Integer, ByRef totImporti As Decimal, ByRef strFileTxt As String, ByVal sNomeFileContenitore As String, ByVal TipoTributo As String, ByRef queryInsert As String, ByRef idFornitura As Long) As String
            Dim testoXML As String = ""
            'Try
            Dim ConOpenNow As Boolean = False
            Dim bTrovato As Boolean = False
            Dim sStringaSql As String = ""
            Dim alertInfoMancante As Boolean = False

            Dim TipoContratto As String = ""

            '***** 0 Intestazione XML *****
            Dim varIntestazione As String = ""
            Dim varCodiceFornitura As String = "RLI12"

            Dim varTipoFornitore As String = "10"
            'Assume i valori:
            '1 - Soggetti che inviano le proprie dichiarazione.
            '10 - C.A.F. dipendenti e pensionati; C.A.F. imprese;
            'Societa' ed enti di cui all'art.3, comma 2 del DPR 322/98 (se tale societa' appartiene a un gruppo puo' trasmettere la propria dichiarazione e quelle delle aziende del gruppo);
            'Altri intermediari di cui all'art.3. comma 3 lett a), b), c) ed e) del DPR 322/98; Societa' degli Ordini di cui all' art. 3 Decr. Dir. 18/2/99;
            'Soggetto che trasmette le dichiarazioni per le quali l'impegno a trasmettere e' stato assunto da un professionista deceduto.

            Dim varCodFiscFornitore As String = ""
            Dim varSpazioUtente As String = ""
            Dim varSpazioServTelem As String = ""
            Dim varUfficioTerritoriale As String = ""
            Dim varCodiceABI As String = ""
            Dim varCodiceCAB As String = ""
            Dim varCodiceCIN As String = ""
            Dim varNumContoCorrente As String = ""
            Dim varCodFiscTitolareCC As String = ""
            Dim varImportoDaVersare As String = "" '=??? ImportoBollo, ImportoRegistrazione, ImportoSanzioniRegistrazione, ImportoInteressi
            Dim varPdfBase64 As String = ""
            totImporti = 0

            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=10"
            Dim myReaderB As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB.Read Then
                varCodFiscFornitore = IfNull(myReaderB("valore"), "")
            End If
            myReaderB.Close()


            '***** 1 Frontespizio *****
            Dim varIDProdottoSw As String = ""
            Dim varNumModuliCompilati As String = ""
            Dim varIDcontratto As String = ""

            '***** 1.1 Richiedente (persona fisica o giuridica) *****
            Dim varCfRichiedente As String = ""
            Dim varNome As String = ""
            Dim varCognomeRich As String = ""

            Dim varNomeCond As String = ""
            Dim varCognomeCond As String = ""
            Dim varCodFiscaleCond As String = ""

            Dim varCodFiscaleRappr As String = ""
            Dim varCognomeRappr As String = ""
            Dim varNomeRappr As String = ""
            Dim varCodiceCarica As String = "1"
            'Può assumere uno dei seguenti valori:
            '1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15

            Dim varFirma As String = "1"
            Dim varTipoRichiedente As String = "1" '1: parte del contratto; 2:mediatore del contratto 
            Dim varSubentro As String = "0"

            Dim varTipoContratto As String = ""
            'LEGENDA TIPI CONTRATTO:
            'L1 = Locazione di immobile ad uso abitativo; (VALIDO)
            'L2 = Locazione agevolata di immobile ad uso abitativo; (VALIDO)
            'L3 = Locazione di immobile ad uso abitativo (contratto soggetto ad IVA); 
            'L4 = Locazione finanziaria di immobile ad uso abitativo;
            'S1 = Locazione di immobile ad uso diverso dall'abitativo; (VALIDO)
            'S2 = Locazione di immobile ad uso diverso dall'abitativo con locatore soggetto ad IVA; 
            'S3 = Locazione Finanziaria di immobile ad uso diverso dall'abitativo; 
            'T1 = Affitto di fondo rustico; 
            'T2 = Affitto di fondo rustico agevolato; 
            'T3 = Affitto di terreni ed aree non edificabili, cave e torbiere; 
            'T4 = Affitto di terreni edificabili o non edificabili destinati a parcheggio (contratto assoggettato ad IVA)

            Dim varPagamInteraDurataContr As String = "" '= FLAG. 
            'La casella va barrata se si tratta di una locazione di un immobile urbano di durata pluriennale e se il pagamento della relativa imposta di registro viene
            'versata per l'intero periodo, ottenendo quindi uno sconto di imposta, va barrata la casella anche se trattasi di proroga.
            'Nel caso di prima registrazione può essere 
            'presente solo per tipologia di contratto = L1, L2, L3, S1, S2, T1, T2, T3, T4.
            'Nel caso di prima registrazione è obbligatorio per tipologia di contratto = T1, T2, T3, T4 e per la
            'tipologia contratto L1, L2, L3, S1, S2 se la durata del contratto (data fine – data inizio) è minore o uguale a 365 giorni 
            '(in assenza di durata non è obbligatorio). 
            'Nel caso di adempimenti successivi può essere presente solo se tipologia di adempimento è uguale a 2.

            Dim varEventiEccezionali As String = "0" 'La casella va barrata dai contribuenti che hanno diritto alle agevolazioni fiscali a seguito di calamità naturali o eventi eccezionali. 
            'Se barrata non devono essere presenti sanzioni ed interessi

            Dim varCasiParticolari As String = "" '= FLAG. (0 in caso di prima registrazione)
            'Questa casella va barrata se il contratto di locazione che si intende registrare prevede particolari clausole contrattuali. Va indicato il codice 1, se si prevede un canone diverso per il primo anno di locazione o più annualità.

            '***** 1.2 Importi *****
            Dim CanoneCorrente As Decimal = 0
            '*********** 1.2.1 Imposte *****
            Dim varImpostaDiRegistro As String = "0,00"
            Dim varImpostaDiBollo As String = "0,00"

            '*********** 1.2.2 Sanzioni *****
            Dim varSanzImpostaDiRegistro As String = "0,00"
            Dim varSanzImpostaDiBollo As String = "0,00"
            Dim varInteressi As New SortedDictionary(Of Integer, Double)
            varInteressi.Clear()

            '***** 1.3 Registrazione *****
            Dim varNumProgressCanone As String = "00000001" 'Vale sempre 1

            '***** 1.3.1 Contratto *****
            Dim varDataInizio As String = ""
            Dim varDataFine As String = ""
            Dim varImportoCanone As String = "0,00"
            Dim varDataStipula As String = ""
            Dim varNumeroPagine As String = "" '(Fisso come prima?)
            Dim varNumeroCopie As String = "2" 'Indicare il numero di esemplari cartacei del contratto sottoscritti dalle parti (minimo uno).
            Dim varContrSoggettoIVA As String = "0" 'NO per il comune di Milano
            Dim varCondizioneSospensiva As String = "0"
            Dim varNumeroAllegatoA As String = "" 'Numero fogli o esemplari di scritture private, inventari (allegati al contratto)
            Dim varNumeroAllegatoB As String = "" 'Numero fogli o esemplari di ricevute e quietanze (allegati al contratto)
            Dim varNumeroAllegatoC As String = "" 'Numero fogli o esemplari di mappe, planimetrie e disegni (allegati al contratto)

            Dim varContrattoEsente As String = "" '1=esente bollo, 2= esente bollo e registro

            '***** 1.3.2 Garanzia ***** 'Se nel contratto di locazione e' presente una garanzia prestata da terzi indicare i codici fiscali dei garanti (almeno uno).
            Dim varTipologiaGaranzia As String = ""
            Dim varImportoGaranziaPrestataDaTerzi As String = ""
            Dim varCodiceFiscaleGarante As String = ""
            Dim varCodiceFiscaleSecondoGarante As String = ""

            '***** 1.3.3 Allegati *****
            'deve essere allegato il contratto da registrare.
            'L’allegazione è facoltativa in presenza contemporanea dei seguenti requisiti:
            '- Tipologia contratto: L1 o L2
            '- Contratto non soggetto a Iva;
            '- Assenza di allegati (Mappe, planimetrie, disegni,ecc....).
            '- massimo 3 Locatori persone fisiche e soggettività Iva non barrata
            '- massimo 3 Conduttori persone fisiche e soggettività Iva non barrata
            '- deve essere presente almeno un immobile con codice 1 (immobile principale).
            '- Gli altri immobili (max 3) devono avere codice 2 (pertinenza locata congiuntamente).
            '- Tipologia immobile: U = urbano.
            '- Rendita catastale presente
            Dim varTipoFile As String = ""
            Dim varNomeFile As String = ""
            Dim varDescrizioneFile As String = ""
            Dim varImmagineData As String = ""

            '***** 1.4 ImpegnoATrasmettere (riservato alla presentazione in via telematica) *****
            Dim varCFintermediario As String = ""
            Dim varImpegnoATrasmettere As String = ""
            Dim varDataImpegno As String = ""
            Dim varFirmaIntermediario As String = ""


            '***** 1.5 Soggetti *****
            '*********** 1.5.1 Locatore ***********
            Dim varContatoreLocatore As String = "001"
            Dim varSoggettIVALocat As String = "0"
            Dim varDenominazione As String = ""


            '*********** 1.5.2 Conduttore ***********
            '(Variabili da intendersi per tutti i componenti del nucleo)
            Dim varContatoreSoggetti As Integer = 0
            Dim varSoggettivitaIVA As String = "0"
            Dim varSesso As String = ""
            Dim varCodFiscaleRich As String = ""
            Dim varDataNascita As String = ""
            Dim varComuneNascita As String = ""
            Dim varProvinciaNascita As String = ""
            Dim varCedente As String = "0"


            '***** 1.6 Immobili *****
            Dim varContatoreImmobili As Integer = 0

            Dim varTipoImmobile As String = ""
            'Assume i seguenti valori:
            '1 = Immobile principale
            '2 = Pertinenza locata congiuntamente all' immobile principale
            '3 = Pertinenza locata disgiuntamente all' immobile principale
            '• Se e' presente un rigo con valore 2, dovra' essere presente in uno dei righi precedenti un
            'immobile con valore 1 e dovra' essere preceduto da un rigo con valore 1 o 2.
            '• Se e' presente un rigo con valore 3, non e' necessario che sia presente un rigo con valore 1. 

            Dim vaCodComuneCatastale As String = ""

            Dim varTipoCatasto As String = "U" 'T/U (Terreni/Urbano) 
            'Dato obbligatorio se provincia e' diversa da "EE".
            'Se si tratta di prima registrazione se tipologia contratto = T1 o T2 e provincia(E) diversa da "EE", tipo catasto deve essere = T. 
            'Se si tratta di prima registrazione se tipologia contratto = da L1 A L4, e da S1 a S3 e provincia e' diversa da "EE" , tipo catasto deve essere = U

            Dim varPorzioneImmobile As String = "I" 'I/P (Intero/Porzione)

            Dim varSezioneUrbana As String = ""
            'Per gli immobili siti nelle sole zone in cui vige il sistema
            'tavolare indicare il codice “Comune catastale” presente nel documento catastale.


            Dim varFoglio As String = ""
            Dim varParticellaNumeratore As String = ""
            Dim varParticellaDenominatore As String = ""
            Dim varSubalterno As String = ""

            Dim varInViaDiAccatastam As String = "" 'Dato obbligatorio se provincia e' diversa da "EE" e in assenza di DatiCatastali

            Dim varComune As String = ""
            Dim varProvincia As String = ""
            Dim varCategCatastale As String = ""
            Dim varRenditaCatastale As String = ""
            Dim varTipoIndirizzo As String = ""
            Dim varIndirizzo As String = ""
            Dim varNumCivico As String = ""


            '***** 1.7 Relazioni *****
            'Questo quadro va compilato solo per le locazioni ad uso abitativo.
            'Se si tratta di prima registrazione il quadro può essere presente solo se tipologia contratto = L1 o L2 
            'e non sia stata barrata la casella “soggettivita' IVA” nella sezione dedicata ai locatori 
            'Nel caso di adempimenti successivi il quadro è obbligatorio se è presente il campo CedolareSecca; non può essere presente negli altri casi.

            Dim varImmobileNumero As Integer = 1
            'Se si tratta di prima registrazione il campo è obbigatorio.
            'Nel caso di adempimenti successivi non deve essere presente.
            'Devono essere presenti tutti gli immobili (e soltanto quelli) che hanno 
            'categoria catastale = gruppo A (+ relative pertinenze) e che abbiano una
            'rendita diversa da zero.
            'Non possono essere inseriti immobili con categoria catastale diversa da A.
            'Non possono essere presenti pertinenze con tipologia immobile = 3.
            'Il regime di tassazione scelto per l’immobile principale (tipologia immobile = 1) deve valere anche
            'per la relativa pertinenza (tipologia immobile = 2)

            Dim varLocatoreNumero As Integer = 1
            Dim varPercentualePossesso As String = "100"
            Dim varCedolare As String = "N"

            Dim FL_BOLLO_ESENTE As String = ""
            Dim varImportoBolloParam As String = ""

            'Dim varContatoreDoc As Integer = 0

            'If NuovoCodUfficio = 1 Then
            '    varIntestazione = "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "UTF-8" & Chr(34) & "?>" _
            '            & "<!--created with SEPA@Web (www.sistemiesoluzionisrl.it)-->" _
            '            & "<loc:Fornitura xmlns:sc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:common:v2" & Chr(34) & "xmlns:loc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:loc:v1" & Chr(34) & " xmlns:reg=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:reg:v1" & Chr(34) & " > " _
            '            & "<loc:Intestazione>" _
            '            & "<loc:CodiceFornitura>" & varCodiceFornitura & "</loc:CodiceFornitura>" _
            '            & "<loc:TipoFornitore>" & varTipoFornitore & "</loc:TipoFornitore>" _
            '            & "<loc:CodiceFiscaleFornitore>" & varCodFiscFornitore & "</loc:CodiceFiscaleFornitore>" _
            '            & "<loc:SpazioUtente>" & varSpazioUtente & "</loc:SpazioUtente>" _
            '            & "<loc:SpazioServizioTelematico>" & varSpazioServTelem & "</loc:SpazioServizioTelematico>" _
            '            & "</loc:Intestazione>" _
            '            & "<loc:DatiGenerali>" _
            '            & "<loc:UfficioCompetente>" _
            '            & "<loc:UfficioTerritoriale>" & varUfficioTerritoriale & "</loc:UfficioTerritoriale>" _
            '            & "</loc:UfficioCompetente>" _
            '            & "<loc:Versamento>" _
            '            & "<reg:CodiceABI>" & varCodiceABI & "</reg:CodiceABI>" _
            '            & "<reg:CodiceCAB>" & varCodiceCAB & "</reg:CodiceCAB>" _
            '            & "<reg:NumeroContoCorrente>" & varNumContoCorrente & "</reg:NumeroContoCorrente>" _
            '            & "<reg:CIN>" & varCodiceCIN & "</reg:CIN>" _
            '            & "<reg:CodiceFiscaleTitolareCC>" & varCodFiscTitolareCC & "</reg:CodiceFiscaleTitolareCC>" _
            '            & "</loc:Versamento>" _
            '            & "<loc:ImportoDaVersare>" & varImportoDaVersare & "</loc:ImportoDaVersare>" _
            '            & "</loc:DatiGenerali>"
            'End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=42"
            Dim myReaderB2 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB2.Read Then
                varCFintermediario = IfNull(myReaderB2("valore"), "")
            End If
            myReaderB.Close()

            Dim LimiteTassaRegistrazione As String = 0
            cmd.CommandText = "select valore from siscom_MI.parametri_BOLLETTA where ID=6"
            Dim myReaderJ As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderJ.Read Then
                LimiteTassaRegistrazione = PuntiInVirgole(IfNull(myReaderJ("VALORE"), ""))
            End If
            myReaderJ.Close()

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=8"
            Dim myReaderP As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderP.Read Then
                varDenominazione = IfNull(myReaderP("valore"), "")
            End If
            myReaderP.Close()

            cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 18"
            Dim myReaderZ1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderZ1.Read Then
                varImportoBolloParam = IfNull(myReaderZ1("VALORE"), "0")
            End If
            myReaderZ1.Close()

            cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 45"
            myReaderZ1 = cmd.ExecuteReader()
            If myReaderZ1.Read Then
                varNumeroCopie = IfNull(myReaderZ1("VALORE"), "0")
            End If
            myReaderZ1.Close()

            Dim persGiuridicaRich As Boolean = False
            Dim persGiuridica As Boolean = False
            If IdContratto <> 0 Then


                cmd.CommandText = "select * from siscom_mi.tab_interessi_legali order by anno desc"
                Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                Do While myReaderA.Read
                    varInteressi.Add(myReaderA("anno"), myReaderA("tasso"))
                Loop
                myReaderA.Close()

                cmd.CommandText = "select * from siscom_mi.PARAMETRI_RICHIEDENTE_XML"
                myReaderA = cmd.ExecuteReader()
                If myReaderA.Read Then
                    varTipoRichiedente = IfNull(myReaderA("ID_TIPO_RICH"), -1)
                    varCodFiscaleRich = IfNull(myReaderA("CODFISC_PIVA"), "")
                    varCognomeRich = IfNull(myReaderA("DENOMINAZIONE"), "")
                    varCodFiscaleRappr = IfNull(myReaderA("CODFISC_RAPP"), "")
                    varCognomeRappr = IfNull(myReaderA("COGNOME_RAPP"), "")
                    varNomeRappr = IfNull(myReaderA("NOME_RAPP"), "")
                    If varTipoRichiedente = "0" Or varTipoRichiedente = "2" Then
                        persGiuridicaRich = True
                    End If
                End If
                myReaderA.Close()

                If varTipoRichiedente = "1" Then
                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                    Dim myReader12345 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReader12345.Read Then
                        If IfNull(myReader12345("cod_fiscale"), "") = "" And IfNull(myReader12345("partita_iva"), "") <> "" Then
                            varCognomeRich = IfNull(myReader12345("ragione_sociale"), "")
                            varCodFiscaleRich = IfNull(myReader12345("partita_iva"), "")
                            persGiuridicaRich = True
                        Else
                            varCognomeRich = IfNull(myReader12345("cognome"), "")
                            varNome = IfNull(myReader12345("nome"), "")
                            varCodFiscaleRich = IfNull(myReader12345("cod_fiscale"), "")
                        End If
                    End If
                    myReader12345.Close()
                End If

                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                Dim myReader1234 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader1234.Read Then
                    If IfNull(myReader1234("cod_fiscale"), "") = "" And IfNull(myReader1234("partita_iva"), "") <> "" Then
                        varCognomeCond = IfNull(myReader1234("ragione_sociale"), "")
                        varCodFiscaleCond = IfNull(myReader1234("partita_iva"), "")
                        persGiuridica = True
                        If varCognomeCond = "" Then
                            varCognomeCond = IfNull(myReader1234("cognome"), "") & " " & IfNull(myReader1234("nome"), "")
                        End If
                    Else
                        varCognomeCond = IfNull(myReader1234("cognome"), "")
                        varNomeCond = IfNull(myReader1234("nome"), "")
                        varCodFiscaleCond = IfNull(myReader1234("cod_fiscale"), "")
                    End If
                End If
                myReader1234.Close()


                'Tag Documento (diverso per ogni contratto)
                'varContatoreDoc = varContatoreDoc + 1
                testoXML = "<loc:Documento identificativo=" & Chr(34) & Format(varContatoreDoc, "00000") & Chr(34) & "><loc:Frontespizio>" & vbCrLf _
                    & "<loc:IdentificativoProdSoftware>SEPA2009</loc:IdentificativoProdSoftware>" & vbCrLf _
                    & "<loc:NumeroModuliCompilati>1</loc:NumeroModuliCompilati>" & vbCrLf _
                    & "<loc:IDContratto>" & IdContratto & "</loc:IDContratto>" & vbCrLf _
                    & "<loc:Richiedente>" & vbCrLf _
                    & "<loc:CodiceFiscale>" & varCodFiscaleRich & "</loc:CodiceFiscale>" & vbCrLf

                If persGiuridicaRich = True Then
                    testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Denominazione>" & varCognomeRich.ToUpper & "</loc:Denominazione>" & vbCrLf _
                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Rappresentante>" & vbCrLf _
                    & "<loc:CodiceFiscaleRappresentante>" & varCodFiscaleRappr & "</loc:CodiceFiscaleRappresentante>" & vbCrLf _
                    & "<loc:CognomeRappresentante>" & varCognomeRappr & "</loc:CognomeRappresentante>" & vbCrLf _
                    & "<loc:NomeRappresentante>" & varNomeRappr & "</loc:NomeRappresentante>" & vbCrLf _
                    & "<loc:CodiceCarica>" & varCodiceCarica & "</loc:CodiceCarica>" & vbCrLf _
                    & "</loc:Rappresentante>" & vbCrLf
                Else
                    testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                    & "<loc:Cognome>" & varCognomeRich & "</loc:Cognome>" & vbCrLf _
                    & "<loc:Nome>" & varNome & "</loc:Nome>" & vbCrLf _
                    & "</loc:PersoneFisiche>" & vbCrLf
                End If
                If varTipoRichiedente = "0" Then
                    varTipoRichiedente = "1"
                End If
                testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                        & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf _
                        & "<loc:Subentro>" & varSubentro & "</loc:Subentro>" & vbCrLf _
                        & "</loc:Richiedente>" & vbCrLf


                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                cmd.CommandText = "SELECT siscom_mi.seq_DATI_GENERALI_RLI.nextval from dual"
                idFornitura = IfNull(cmd.ExecuteScalar, 0)

                cmd.CommandText = " INSERT INTO SISCOM_MI.DATI_GENERALI_RLI (ID) VALUES (" & idFornitura & ")"
                cmd.ExecuteNonQuery()

                queryInsert = "UPDATE SISCOM_MI.DATI_GENERALI_RLI " _
                    & " SET " _
                    & " NUM_IDENTIFICATIVO_DOC   = " & insDbValue(Format(varContatoreDoc, "00000"), True) & "" _
                    & " ,IDENTIFICATIVO_PRODOTTO_SW   = 'SEPA2009' " _
                    & " ,NUMERO_MODULO_COMPILATI      = 1 " _
                    & " ,ID_CONTRATTO                 = " & insDbValue(IdContratto, False) & " " _
                    & " ,COD_FISCALE_RICHIEDENTE      = " & insDbValue(varCodFiscaleRich, True) & " " _
                    & " ,DENOMINAZIONE_RICHIEDENTE    = " & insDbValue(varCognomeRich.ToUpper, True) & " " _
                    & " ,COD_FISCALE_RAPPRESENTANTE   = " & insDbValue(varCodFiscaleRappr, True) & " " _
                    & " ,COGNOME_RAPPRESENTANTE       = " & insDbValue(varCognomeRappr, True) & " " _
                    & " ,NOME_RAPPRESENTANTE          = " & insDbValue(varNomeRappr, True) & " " _
                    & " ,CODICE_CARICA                = " & insDbValue(varCodiceCarica, False) & " " _
                    & " ,FIRMA                        = " & insDbValue(varFirma, False) & " " _
                    & " ,TIPOLOGIA_RICHIEDENTE        = " & insDbValue(varTipoRichiedente, False) & " " _
                    & " ,SUBENTRO                     = " & insDbValue(varSubentro, False) & " "

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                Dim data_riferimento As String = ""
                Dim giorniDiff As Integer = 0
                Dim idUnita As Long = 0
                Dim provenienza As String = ""

                Dim tipologiaContrLoc As String = ""
                cmd.CommandText = "SELECT RAPPORTI_UTENZA_PROSSIMA_BOL.PROSSIMA_BOLLETTA,TIPOLOGIA_CONTRATTO_LOCAZIONE.DESCRIZIONE AS ""TIPO_C"",TIPOLOGIA_CONTRATTO_LOCAZIONE.RIF_LEGISLATIVO ,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_tr_canone,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_conduttore,RAPPORTI_UTENZA.*,SISCOM_MI.GETSTATOCONTRATTO(RAPPORTI_UTENZA.ID) AS ""STATO"" FROM SISCOM_MI.RAPPORTI_UTENZA_PROSSIMA_BOL,SISCOM_MI.RAPPORTI_UTENZA,SISCOM_MI.TIPOLOGIA_CONTRATTO_LOCAZIONE WHERE RAPPORTI_UTENZA_PROSSIMA_BOL.ID_CONTRATTO(+)=RAPPORTI_UTENZA.ID AND TIPOLOGIA_CONTRATTO_LOCAZIONE.COD=RAPPORTI_UTENZA.COD_TIPOLOGIA_CONTR_LOC AND RAPPORTI_UTENZA.ID=" & IdContratto
                Dim myReaderT As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderT.Read Then
                    CanoneCorrente = IfNull(myReaderT("imp_canone_iniziale"), 0)
                    tipologiaContrLoc = IfNull(myReaderT("TIPO_C"), "")
                    Select Case IfNull(myReaderT("versamento_tr"), "")
                        Case "A"
                            varPagamInteraDurataContr = "0"
                        Case "U"
                            varPagamInteraDurataContr = "1"
                        Case Else
                            varPagamInteraDurataContr = "0"
                    End Select
                    cmd.CommandText = "SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_CONTRATTO=" & IdContratto
                    Dim myReaderX1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReaderX1.Read Then
                        CanoneCorrente = CanoneCorrente + IfNull(myReaderX1(0), 0)
                    End If
                    myReaderX1.Close()

                    TipoContratto = IfNull(myReaderT("PROVENIENZA_ASS"), "")

                    If varPagamInteraDurataContr = "0" Then
                        varImpostaDiRegistro = Format((IfNull(myReaderT("perc_tr_canone"), 0) * CanoneCorrente) / 100, "0.00")

                        If TipoContratto = "6" Or TipoContratto = "62" Or TipoContratto = "64" Or TipoContratto = "65" Then
                            varImpostaDiRegistro = Format((IfNull(myReaderT("perc_tr_canone"), 0) * CanoneCorrente) / 100, "0.00")
                            varImpostaDiRegistro = Format((70 * CDec(varImpostaDiRegistro)) / 100, "0.00")
                        End If
                    Else
                        varImpostaDiRegistro = Format(SoluzioneUnica(CDbl(PuntiInVirgole((IfNull(myReaderT("imp_canone_iniziale"), 0)))), CInt(Format(myReaderT("DURATA_RINNOVO"), "0")), IfNull(myReaderT("perc_tr_canone"), "2")))

                    End If

                    If IfNull(myReaderT("data_stipula"), "29991231") < IfNull(myReaderT("data_decorrenza"), "29991231") Then
                        data_riferimento = IfNull(myReaderT("data_stipula"), "29991231")
                    Else
                        data_riferimento = IfNull(myReaderT("data_decorrenza"), "29991231")
                    End If
                    varDataInizio = FormattaData(data_riferimento)
                    varDataFine = FormattaData(IfNull(myReaderT("data_scadenza"), ""))
                    FL_BOLLO_ESENTE = IfNull(myReaderT("FL_BOLLO_ASSOLTO"), "0")
                End If
                myReaderT.Close()

                If CDec(varImpostaDiRegistro) < CDec(LimiteTassaRegistrazione) Then
                    varImpostaDiRegistro = LimiteTassaRegistrazione
                End If

                varImportoCanone = Format(CanoneCorrente, "0.00")

                cmd.CommandText = "SELECT UNITA_IMMOBILIARI.ID FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE ID_CONTRATTO=" & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE IS NULL"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    idUnita = IfNull(myReaderT("ID"), 0)
                End If
                myReaderT.Close()

                cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_ASSEGNATE WHERE ID_UNITA=" & idUnita & " ORDER BY ID_DOMANDA DESC"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    provenienza = IfNull(myReaderT("PROVENIENZA"), "")
                End If
                myReaderT.Close()

                Select Case TipoContratto
                    Case "6"
                        Select Case provenienza
                            Case "C"
                                TipoContratto = "61"
                            Case "P"
                                TipoContratto = "62"
                            Case "S"
                                TipoContratto = "63"
                            Case "D"
                                TipoContratto = "64"
                            Case "V"
                                TipoContratto = "65"
                            Case Else

                        End Select
                    Case "3"
                        Select Case provenienza
                            Case "B"
                                TipoContratto = "BOX"
                            Case "N"
                                TipoContratto = "NEGOZI"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                    Case "5"
                        Select Case provenienza
                            Case "A"
                                TipoContratto = "392ASS"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                End Select

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varTipoContratto = "S1"
                ElseIf TipoContratto = "6" Or TipoContratto = "62" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varTipoContratto = "L2"
                Else
                    varTipoContratto = "L1"
                End If

                testoXML &= "<loc:TipologiaContratto>" & varTipoContratto & "</loc:TipologiaContratto>" & vbCrLf _
                       & "<loc:PagamentoInteraDurataContratto>" & varPagamInteraDurataContr & "</loc:PagamentoInteraDurataContratto>" & vbCrLf _
                       & "<loc:EventiEccezionali>" & varEventiEccezionali & "</loc:EventiEccezionali>" & vbCrLf



                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,TIPOLOGIA_CONTRATTO = " & insDbValue(varTipoContratto, True) & " " _
                    & " ,PAGAMENTO_INTERA_DURATA_RU   = " & insDbValue(varPagamInteraDurataContr, False) & " " _
                    & " ,EVENTI_ECCEZIONALI  = " & insDbValue(varEventiEccezionali, False) & " "

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                giorniDiff = DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(FormattaData(dataInvio)))
                varImpostaDiRegistro = Format(Math.Round(CDec(varImpostaDiRegistro), 0, MidpointRounding.AwayFromZero), "0.00")
                If giorniDiff >= 31 And giorniDiff <= 90 Then
                    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 12) / 100, "0.00")
                End If

                If giorniDiff >= 91 And giorniDiff <= 365 Then
                    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 15) / 100, "0.00")
                End If

                If giorniDiff >= 366 Then
                    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 120) / 100, "0.00")
                End If

                Dim Giorni As Integer = 0
                Dim GiorniAnno As Integer = 0
                Dim dataPartenza As String = ""

                Dim TotaleInteressi As Decimal = 0
                Dim TotalePeriodo As Decimal = 0
                Dim indice As Long = 0
                Dim tasso As Decimal = 0
                Dim DataFine As String = ""
                Dim DataInizio As String = ""

                If varSanzImpostaDiRegistro > 0 Then
                    'DataCalcolo = AggiustaData(dataInvio)
                    DataInizio = Format(DateAdd(DateInterval.Day, 30, CDate(FormattaData(data_riferimento))), "yyyyMMdd")

                    Giorni = 0
                    GiorniAnno = 0
                    dataPartenza = DataInizio
                    TotaleInteressi = 0
                    TotalePeriodo = 0

                    For KK = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))
                        If KK = CInt(Mid(dataInvio, 1, 4)) Then
                            DataFine = FormattaData(dataInvio)
                        Else
                            DataFine = "31/12/" & KK
                        End If
                        GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK), CDate("31/12/" & KK)) + 1
                        Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1
                        If KK < 1990 Then
                            tasso = 5
                        Else
                            If varInteressi.ContainsKey(KK) = True Then
                                tasso = varInteressi(KK)
                            End If
                        End If
                        TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                        TotaleInteressi = TotaleInteressi + TotalePeriodo
                        dataPartenza = KK + 1 & "0101"
                    Next
                Else
                    TotaleInteressi = 0
                    TotalePeriodo = 0
                End If

                Dim importobollo As String = ""
                importobollo = varImportoBolloParam
                If TipoContratto = "6" Or TipoContratto = "61" Or TipoContratto = "62" Or TipoContratto = "62" Or TipoContratto = "12" Or TipoContratto = "1" Or TipoContratto = "ERPB" Or TipoContratto = "8" Or TipoContratto = "2" Or TipoContratto = "10" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varNumeroPagine = "5"
                    'importobollo = "80,00"
                End If

                If TipoContratto = "392ASS" Then
                    varNumeroPagine = "5"
                    'importobollo = "96,00"
                End If

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varNumeroPagine = "6"
                    'importobollo = "96,00"
                End If

                importobollo = Ceiling((CDec(varNumeroPagine) / 4)) * CDec(PuntiInVirgole(importobollo)) * CDec(varNumeroCopie)

                If FL_BOLLO_ESENTE = "1" Then
                    varContrattoEsente = "1"
                    varNumeroPagine = "2"
                    importobollo = "0,00"
                End If

                'importobollo = "0,00"
                varImpostaDiBollo = importobollo

                testoXML &= "<loc:Importi>" & vbCrLf _
                        & "<loc:Imposte>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf _
                        & "<loc:ImpostaDiBollo>" & varImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf _
                        & "</loc:Imposte>" & vbCrLf _
                        & "<loc:Sanzioni>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varSanzImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf _
                        & "<loc:ImpostaDiBollo>" & varSanzImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf _
                        & "</loc:Sanzioni>" & vbCrLf _
                        & "<loc:Interessi>" & Format(TotaleInteressi, "0.00") & "</loc:Interessi>" & vbCrLf _
                        & "</loc:Importi>" & vbCrLf

                testoXML &= "<loc:Registrazione>" & vbCrLf _
                    & "<loc:NumeroProgressivoCanone>" & varNumProgressCanone & "</loc:NumeroProgressivoCanone>" & vbCrLf _
                    & "<loc:Contratto>" & vbCrLf _
                    & "<loc:DataInizio>" & Replace(FormattaData(varDataInizio), "/", "") & "</loc:DataInizio>" & vbCrLf _
                    & "<loc:DataFine>" & Replace(FormattaData(varDataFine), "/", "") & "</loc:DataFine>" & vbCrLf _
                    & "<loc:ImportoCanone>" & CStr(varImportoCanone) & "</loc:ImportoCanone>" & vbCrLf _
                    & "<loc:DataStipula>" & Replace(FormattaData(varDataInizio), "/", "") & "</loc:DataStipula>" & vbCrLf _
                    & "<loc:NumeroPagine>" & varNumeroPagine & "</loc:NumeroPagine>" & vbCrLf _
                    & "<loc:NumeroCopie>" & varNumeroCopie & "</loc:NumeroCopie>" & vbCrLf _
                    & "<loc:ContrattoSoggettoIVA>" & varContrSoggettoIVA & "</loc:ContrattoSoggettoIVA>" & vbCrLf

                totImporti = CDec(varImpostaDiRegistro) + CDec(varImpostaDiBollo) + CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo) + CDec(TotaleInteressi)

                If varContrattoEsente = "1" Then
                    testoXML &= "<loc:ContrattoEsente>" & varContrattoEsente & "</loc:ContrattoEsente>" & vbCrLf
                End If

                testoXML &= "</loc:Contratto>" & vbCrLf


                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,IMPOSTA_REGISTRO = " & insDbValue(varImpostaDiRegistro, True) _
                        & " ,IMPOSTA_BOLLO                = " & insDbValue(varImpostaDiBollo, True) _
                        & " ,SANZIONE_IMP_REGISTRO        = " & insDbValue(varSanzImpostaDiRegistro, True) _
                        & " ,SANZIONE_IMP_BOLLO           = " & insDbValue(varSanzImpostaDiBollo, True) _
                        & " ,TOT_INTERESSI                = " & insDbValue(TotaleInteressi, True) _
                        & " ,NUM_PROGRESSIVO_CANONE       = " & insDbValue(varNumProgressCanone, True) _
                        & " ,DATA_INIZIO_CONTRATTO        = " & insDbValue(varDataInizio, True, True) _
                        & " ,DATA_FINE_CONTRATTO          = " & insDbValue(varDataFine, True, True) _
                        & " ,IMPORTO_CANONE               = " & insDbValue(varImportoCanone, True) _
                        & " ,DATA_STIPULA                 = " & insDbValue(varDataInizio, True, True) _
                        & " ,NUMERO_PAGINE                = " & insDbValue(varNumeroPagine, False) _
                        & " ,NUMERO_COPIE                 = " & insDbValue(varNumeroCopie, False) _
                        & " ,CONTRATTO_SOGG_IVA           = " & insDbValue(varContrSoggettoIVA, False)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                varPdfBase64 = ConversioneBase64(IdContratto)

                testoXML &= "<loc:Allegati>" & vbCrLf _
                    & "<reg:FileType>application/pdf</reg:FileType>" & vbCrLf _
                    & "<reg:FileName>" & varIDcontratto & Format(Now, "yyyyMMdd") & "</reg:FileName>" & vbCrLf _
                    & "<reg:FileDescription>STAMPACONTRATTO</reg:FileDescription>" & vbCrLf _
                    & "<reg:ImageData>" & varPdfBase64 & "</reg:ImageData></loc:Allegati>"

                testoXML &= "</loc:Registrazione>" & vbCrLf

                varImpegnoATrasmettere = "<loc:ImpegnoATrasmettere>" & vbCrLf _
                                         & " <reg:CFintermediario>" & varCFintermediario & "</reg:CFintermediario>" & vbCrLf _
                                          & "<reg:ImpegnoATrasmettere>1</reg:ImpegnoATrasmettere>" & vbCrLf _
                                          & " <reg:DataImpegno>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</reg:DataImpegno>" & vbCrLf _
                                         & " <reg:FirmaIntermediario>1</reg:FirmaIntermediario>" & vbCrLf _
                                       & "</loc:ImpegnoATrasmettere>" & vbCrLf

                testoXML &= varImpegnoATrasmettere & "</loc:Frontespizio>" & vbCrLf

                Dim moduloSoggetti As String = ""

                testoXML &= "<loc:Soggetti>" & vbCrLf _
                        & "<loc:PrimoModulo>" & vbCrLf _
                        & "<loc:Locatore>" & vbCrLf _
                        & "<loc:NumeroProgressivo>" & varContatoreLocatore & "</loc:NumeroProgressivo>" & vbCrLf _
                        & "<loc:CodiceFiscale>" & varCodFiscFornitore & "</loc:CodiceFiscale>" & vbCrLf _
                        & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf _
                        & "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                        & "<loc:Denominazione>" & varDenominazione.ToUpper & "</loc:Denominazione>" & vbCrLf _
                        & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                        & "</loc:Locatore>" & vbCrLf

                moduloSoggetti = "<loc:Modulo>" & vbCrLf _
                        & "<loc:Locatore>" & vbCrLf _
                        & "<loc:NumeroProgressivo>" & varContatoreLocatore & "</loc:NumeroProgressivo>" & vbCrLf _
                        & "<loc:CodiceFiscale>" & varCodFiscFornitore & "</loc:CodiceFiscale>" & vbCrLf _
                        & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf _
                        & "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                        & "<loc:Denominazione>" & varDenominazione.ToUpper & "</loc:Denominazione>" & vbCrLf _
                        & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                        & "</loc:Locatore>" & vbCrLf



                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,CF_INTERMEDIARIO = " & insDbValue(varCFintermediario, True) _
                        & " ,IMPEGNO_A_TRASMETTERE        = 1" _
                        & " ,DATA_IMPEGNO                 = " & insDbValue(dataInvio, True) _
                        & " ,FIRMA_INTERMEDIARIO          = " & insDbValue(varFirmaIntermediario, False) _
                        & " ,NUM_PROGRESSIVO_LOCATORE     = " & insDbValue(varContatoreLocatore, True) _
                        & " ,COD_FISCALE_LOCATORE         = " & insDbValue(varCodFiscFornitore, True) _
                        & " ,SOGGETTIVITA_IVA_LOCATORE    = " & insDbValue(varSoggettIVALocat, False) _
                        & " ,DENOMINAZIONE_LOCATORE       = " & insDbValue(varDenominazione.ToUpper, True)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                Dim varCodiceUtente As String = ""
                Dim cFisc As String = ""
                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='INTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                Dim dtAnagr As New Data.DataTable
                da.Fill(dtAnagr)
                da.Dispose()
                If dtAnagr.Rows.Count > 0 Then
                    For Each rowAnagr As Data.DataRow In dtAnagr.Rows
                        varContatoreSoggetti = varContatoreSoggetti + 1
                        varCodiceUtente = IfNull(rowAnagr.Item("id_anagrafica"), 0)
                        If IfNull(rowAnagr("PARTITA_IVA"), "") <> "" Then
                            cFisc = IfNull(rowAnagr("PARTITA_IVA"), "")
                            persGiuridica = True
                        Else
                            cFisc = IfNull(rowAnagr("COD_FISCALE"), "")
                            persGiuridica = False
                        End If

                        testoXML &= "<loc:Conduttore>" & vbCrLf _
                                & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                                & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf


                        cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr.Item("COD_FISCALE"), ""), 12, 4) & "'"
                        myReaderT = cmd.ExecuteReader()
                        If myReaderT.Read Then
                            varComuneNascita = IfNull(myReaderT("NOME"), "")
                            varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                        End If
                        myReaderT.Close()

                        If persGiuridica = False Then
                            testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                & "<sc:Cognome>" & IfNull(rowAnagr("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                & "<sc:Nome>" & IfNull(rowAnagr("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                & "<sc:Sesso>" & IfNull(rowAnagr("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf

                            If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                varProvinciaNascita = "EE"
                            End If
                            testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                            testoXML &= "</loc:PersoneFisiche>" & vbCrLf _
                                & "</loc:Conduttore>" & vbCrLf

                        Else
                            testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                & "<loc:Denominazione>" & IfNull(rowAnagr("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                                & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                & "</loc:Conduttore>" & vbCrLf

                        End If

                        '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                        queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE   = " & insDbValue("00" & varContatoreSoggetti, True) _
                        & " ,COD_FISCALE_CONDUTTORE       = " & insDbValue(cFisc, True) _
                        & " ,SOGGETTIVITA_IVA_CONDUTTORE  = " & insDbValue(varSoggettivitaIVA, False) _
                        & " ,COGNOME_CONDUTTORE           = " & insDbValue(rowAnagr("COGNOME").ToString, True) _
                        & " ,NOME_CONDUTTORE              = " & insDbValue(rowAnagr("NOME").ToString, True) _
                        & " ,DENOMINAZIONE_CONDUTTORE     = " & insDbValue(rowAnagr("RAGIONE_SOCIALE").ToString, True) _
                        & " ,SESSO_CONDUTTORE             = " & insDbValue(rowAnagr("SESSO").ToString, True) _
                        & " ,DATA_NASCITA_CONDUTTORE      = " & insDbValue(rowAnagr("DATA_NASCITA").ToString, True) _
                        & " ,COMUNE_NASCITA_CONDUTTORE    = " & insDbValue(varComuneNascita, True) _
                        & " ,PROVINCIA_NASCITA_CONDUTTORE = " & insDbValue(varProvinciaNascita, True) _
      & " ,NOME_FILE_XML = " & insDbValue(sNomeFileContenitore & ".xml", True)

                        '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI
                    Next
                End If

                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='COINT' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                Dim da2 As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                Dim dtAnagr2 As New Data.DataTable
                da2.Fill(dtAnagr2)
                da2.Dispose()
                If dtAnagr2.Rows.Count > 0 Then
                    For Each rowAnagr2 As Data.DataRow In dtAnagr2.Rows
                        varContatoreSoggetti = varContatoreSoggetti + 1
                        If IfNull(rowAnagr2("PARTITA_IVA"), "") <> "" Then
                            cFisc = IfNull(rowAnagr2("PARTITA_IVA"), "")
                            persGiuridica = True
                        Else
                            cFisc = IfNull(rowAnagr2("COD_FISCALE"), "")
                            persGiuridica = False
                        End If
                        testoXML &= "<loc:Conduttore>" & vbCrLf _
                                & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                                & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                        cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr2.Item("COD_FISCALE"), ""), 12, 4) & "'"
                        myReaderT = cmd.ExecuteReader()
                        If myReaderT.Read Then
                            varComuneNascita = IfNull(myReaderT("NOME"), "")
                            varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                        End If
                        myReaderT.Close()

                        If persGiuridica = False Then
                            testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                & "<sc:Cognome>" & IfNull(rowAnagr2("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                & "<sc:Nome>" & IfNull(rowAnagr2("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                & "<sc:Sesso>" & IfNull(rowAnagr2("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr2("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                            If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                varProvinciaNascita = "EE"
                            End If
                            testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                            testoXML &= "</loc:PersoneFisiche>" & vbCrLf _
                              & "</loc:Conduttore>" & vbCrLf
                        Else
                            testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                & "<loc:Denominazione>" & IfNull(rowAnagr2("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                                & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                & "</loc:Conduttore>" & vbCrLf
                        End If

                        '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                        queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE_2   = " & insDbValue("00" & varContatoreSoggetti, True) _
                        & " ,COD_FISCALE_CONDUTTORE_2       = " & insDbValue(cFisc, True) _
                        & " ,SOGGETTIVITA_IVA_CONDUTTORE_2  = " & insDbValue(varSoggettivitaIVA, False) _
                        & " ,COGNOME_CONDUTTORE_2           = " & insDbValue(rowAnagr2("COGNOME").ToString, True) _
                        & " ,NOME_CONDUTTORE_2              = " & insDbValue(rowAnagr2("NOME").ToString, True) _
                        & " ,DENOMINAZIONE_CONDUTTORE_2     = " & insDbValue(rowAnagr2("RAGIONE_SOCIALE").ToString, True) _
                        & " ,SESSO_CONDUTTORE_2             = " & insDbValue(rowAnagr2("SESSO").ToString, True) _
                        & " ,DATA_NASCITA_CONDUTTORE_2      = " & insDbValue(rowAnagr2("DATA_NASCITA").ToString, True) _
                        & " ,COMUNE_NASCITA_CONDUTTORE_2    = " & insDbValue(varComuneNascita, True) _
                        & " ,PROVINCIA_NASCITA_CONDUTTORE_2 = " & insDbValue(varProvinciaNascita, True)

                        '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                    Next
                End If

                testoXML &= "</loc:PrimoModulo>" & vbCrLf

                moduloSoggetti &= "</loc:Modulo>" & vbCrLf
                moduloSoggetti = ""

                testoXML &= moduloSoggetti & "</loc:Soggetti>" & vbCrLf

                testoXML &= "<loc:Immobili>" & vbCrLf _
                    & "<loc:PrimoModulo>" & vbCrLf

                Dim codContratto As String = ""
                Dim categCatast As String = ""
                'cmd.CommandText = "SELECT edifici.id_complesso as complesso,edifici.denominazione as denominazioneedificio,rapporti_utenza.id_domanda" _
                '    & ",rapporti_utenza.cod_contratto,rapporti_utenza.descr_dest_uso,RAPPORTI_UTENZA.DEST_USO,rapporti_utenza.data_stipula," _
                '    & " rapporti_utenza.cod_ufficio_reg,RAPPORTI_UTENZA.MESI_DISDETTA,rapporti_utenza.durata_anni,rapporti_utenza.data_decorrenza," _
                '    & "rapporti_utenza.data_scadenza,rapporti_utenza.imp_canone_iniziale,rapporti_utenza.imp_deposito_cauz,rapporti_utenza.durata_rinnovo," _
                '    & "rapporti_utenza.data_scadenza_rinnovo,rapporti_utenza.data_delibera,rapporti_utenza.delibera,rapporti_utenza.nro_rate," _
                '    & "rapporti_utenza.perc_istat,unita_contrattuale.*,comuni_nazioni.cod as ""cod_catastale"",comuni_nazioni.nome as ""comune""," _
                '    & "comuni_nazioni.sigla from siscom_MI.rapporti_utenza,comuni_nazioni,siscom_mi.UNITA_CONTRATTuale,SISCOM_MI.edifici " _
                '    & "where edifici.id=unita_contrattuale.id_edificio and rapporti_utenza.id=unita_contrattuale.id_contratto and " _
                '    & "comuni_nazioni.cod=unita_contrattuale.cod_comune and id_CONTRATTO=" & IdContratto & " order by id_unita_principale desc"
                cmd.CommandText = "SELECT edifici.id_complesso as complesso,identificativi_catastali.rendita, " _
                & "UNITA_CONTRATTuale.sezione, " _
                & "identificativi_catastali.cod_categoria_catastale,edifici.denominazione as denominazioneedificio,rapporti_utenza.id_domanda,rapporti_utenza.cod_contratto,rapporti_utenza.descr_dest_uso,RAPPORTI_UTENZA.DEST_USO,rapporti_utenza.data_stipula, " _
                & "rapporti_utenza.cod_ufficio_reg,RAPPORTI_UTENZA.MESI_DISDETTA,rapporti_utenza.durata_anni,rapporti_utenza.data_scadenza,rapporti_utenza.imp_canone_iniziale,rapporti_utenza.imp_deposito_cauz, " _
                & "rapporti_utenza.durata_rinnovo,rapporti_utenza.data_scadenza_rinnovo,rapporti_utenza.data_delibera,rapporti_utenza.delibera,rapporti_utenza.nro_rate,rapporti_utenza.perc_istat,unita_contrattuale.*,comuni_nazioni.cod as ""cod_catastale"",comuni_nazioni.nome as ""comune"",comuni_nazioni.sigla " _
                & "from siscom_mi.rapporti_utenza,comuni_nazioni,siscom_mi.UNITA_CONTRATTuale,siscom_mi.edifici,siscom_mi.unita_immobiliari,siscom_mi.identificativi_catastali " _
                & "where edifici.id=unita_contrattuale.id_edificio and rapporti_utenza.id=unita_contrattuale.id_contratto and comuni_nazioni.cod=unita_contrattuale.cod_comune and id_CONTRATTO=" & IdContratto & " and unita_immobiliari.id_catastale=identificativi_catastali.id and unita_immobiliari.id = unita_contrattuale.id_unita " _
                & "order by id_unita_principale desc"

                Dim daImm As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                Dim dtImm As New Data.DataTable
                daImm.Fill(dtImm)
                daImm.Dispose()

                If dtImm.Rows.Count > 0 Then
                    For Each rowImm As Data.DataRow In dtImm.Rows
                        codContratto = IfNull(rowImm.Item("COD_CONTRATTO"), "")
                        If IfNull(rowImm.Item("ID_UNITA_PRINCIPALE"), 0) <> 0 Then
                            varTipoImmobile = "2"
                        Else
                            varTipoImmobile = "1"
                        End If
                        varContatoreImmobili = varContatoreImmobili + 1

                        testoXML &= "<loc:Immobile>" & vbCrLf _
                                & "<loc:NumeroProgressivoImmobile>00" & varContatoreImmobili & "</loc:NumeroProgressivoImmobile>" & vbCrLf _
                                & "<loc:TipologiaImmobile>" & varTipoImmobile & "</loc:TipologiaImmobile>" & vbCrLf _
                                & "<loc:CodiceComuneCatastale>" & IfNull(rowImm.Item("cod_catastale"), "") & "</loc:CodiceComuneCatastale>" & vbCrLf _
                                & "<loc:TipoCatasto>" & varTipoCatasto & "</loc:TipoCatasto>" & vbCrLf _
                                & "<loc:PorzioneImmobile>" & varPorzioneImmobile & "</loc:PorzioneImmobile>" & vbCrLf

                        If Mid(IfNull(rowImm.Item("sezione"), "   "), 1, 3) <> "   " Then
                            testoXML &= "<loc:SezioneUrbana>" & Mid(IfNull(rowImm.Item("sezione"), "   "), 1, 3) & "</loc:SezioneUrbana>" & vbCrLf
                        End If

                        If IfNull(rowImm.Item("rendita"), 0) <> 0 Then
                            'If varTipoImmobile <> "2" Then
                            If IfNull(rowImm.Item("sub"), "") <> "" Then
                                testoXML &= "<loc:DatiCatastali>" & vbCrLf _
                                    & "<reg:Foglio>" & IfNull(rowImm.Item("foglio"), "") & "</reg:Foglio>" & vbCrLf _
                                    & "<reg:Particella>" & IfNull(rowImm.Item("NUMERO"), "") & "</reg:Particella>" & vbCrLf


                                If Mid(IfNull(rowImm.Item("sub"), "    "), 1, 4) <> "    " Then
                                    testoXML &= "<reg:Subalterno>" & Mid(IfNull(rowImm.Item("sub"), "    "), 1, 4) & "</reg:Subalterno>" & vbCrLf
                                End If

                                testoXML &= "</loc:DatiCatastali>" & vbCrLf
                            Else
                                varInViaDiAccatastam = "1"
                                testoXML &= "<loc:InViaDiAccatastamento>1</loc:InViaDiAccatastamento>" & vbCrLf
                            End If
                            'Else
                            'varInViaDiAccatastam = "1"
                            'testoXML &= "<loc:InViaDiAccatastamento>1</loc:InViaDiAccatastamento>" & vbCrLf
                            'End If

                            testoXML &= "<loc:Comune>" & IfNull(rowImm.Item("comune"), "") & "</loc:Comune>" & vbCrLf _
                                & "<loc:Provincia>" & IfNull(rowImm.Item("sigla"), "") & "</loc:Provincia>" & vbCrLf

                            If IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "" And IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "000" Then
                                If Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1) = "0" Then
                                    categCatast = Replace(IfNull(rowImm.Item("cod_categoria_catastale"), ""), Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1), "")
                                Else
                                    categCatast = IfNull(rowImm.Item("cod_categoria_catastale"), "")
                                End If
                                testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                            Else
                                If IfNull(rowImm.Item("TIPOLOGIA"), 0) = "C" Then
                                    testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                                End If
                            End If
                            If IfNull(rowImm.Item("rendita"), 0) <> 0 Then
                                testoXML &= "<loc:RenditaCatastale>" & IfNull(rowImm.Item("rendita"), "") & "</loc:RenditaCatastale>" & vbCrLf
                            End If
                        Else
                            varInViaDiAccatastam = "1"
                            testoXML &= "<loc:InViaDiAccatastamento>1</loc:InViaDiAccatastamento>" & vbCrLf
                            testoXML &= "<loc:Comune>" & IfNull(rowImm.Item("comune"), "") & "</loc:Comune>" & vbCrLf _
                                & "<loc:Provincia>" & IfNull(rowImm.Item("sigla"), "") & "</loc:Provincia>" & vbCrLf

                            If IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "" And IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "000" Then
                                If Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1) = "0" Then
                                    categCatast = Replace(IfNull(rowImm.Item("cod_categoria_catastale"), ""), Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1), "")
                                End If
                                testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                            Else
                                If IfNull(rowImm.Item("TIPOLOGIA"), 0) = "C" Then
                                    testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                                End If
                            End If
                        End If
                        testoXML &= "<loc:TipologiaIndirizzo>" & RicavaVial(IfNull(rowImm.Item("indirizzo"), "")) & "</loc:TipologiaIndirizzo>" & vbCrLf _
                            & "<loc:Indirizzo>" & IfNull(rowImm.Item("indirizzo"), "") & "</loc:Indirizzo>" & vbCrLf _
                            & "<loc:NumCivico>" & Replace(RTrim(LTrim(IfNull(rowImm.Item("civico"), ""))), "/", "") & "</loc:NumCivico>" & vbCrLf _
                            & "</loc:Immobile>" & vbCrLf

                        cmd.CommandText = " INSERT INTO SISCOM_MI.DATI_IMMOBILI_RLI (" _
                                & " ID, NUM_PROGRESSIVO, TIPOLOGIA_IMMOBILE, " _
                                & " CODICE_COMUNE_CATASTALE, TIPO_CATASTO, PORZIONE_IMMOBILE, " _
                                & " FOGLIO, PARTICELLA, PARTICELLA_DENOMINATORE, " _
                                & " SUBALTERNO, COMUNE, PROVINCIA, " _
                                & " CATEGORIA_CATASTALE, RENDITA_CATASTALE, TIPOLOGIA_INDIRIZZO, " _
                                & " INDIRIZZO, NUM_CIVICO,ID_FORNITURA) " _
                                & " VALUES ( siscom_mi.seq_DATI_IMMOBILI_RLI.nextval," _
                                & "'00" & varContatoreImmobili & "'," _
                                & insDbValue(varTipoImmobile, False) & " ," _
                                & insDbValue(rowImm.Item("cod_catastale").ToString, True) & " ," _
                                & insDbValue(varTipoCatasto, True) & " ," _
                                & insDbValue(varPorzioneImmobile, True) & " ," _
                                & insDbValue(rowImm.Item("foglio").ToString, True) & " ," _
                                & insDbValue(rowImm.Item("NUMERO").ToString, True) & " ," _
                                & insDbValue(Mid(rowImm.Item("NUMERO").ToString, 1, 5), True) & " ," _
                                & insDbValue(Mid(rowImm.Item("sub").ToString, 1, 4), True) & " ," _
                                & insDbValue(rowImm.Item("comune").ToString, True) & " ," _
                                & insDbValue(rowImm.Item("sigla").ToString, True) & " ," _
                                & insDbValue(categCatast, True) & " ," _
                                & insDbValue(rowImm.Item("rendita").ToString, True) & " ," _
                                & insDbValue(RicavaVial(rowImm.Item("indirizzo").ToString), True) & " ," _
                                & insDbValue(rowImm.Item("indirizzo").ToString, True) & " ," _
                                & insDbValue(Replace(RTrim(LTrim(rowImm.Item("civico").ToString)), "/", ""), True) & " ," _
                                & idFornitura & " )"
                        cmd.ExecuteNonQuery()
                    Next
                End If
                testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                    & "</loc:Immobili>" & vbCrLf


                varContatoreImmobili = 0
                If varInViaDiAccatastam = "" Then
                    If varTipoContratto = "L1" Or varTipoContratto = "L2" Then
                        testoXML &= "<loc:Relazioni>" & vbCrLf _
                                   & "<loc:PrimoModulo>" & vbCrLf
                        For Each rowRelaz As Data.DataRow In dtImm.Rows
                            varContatoreImmobili = varContatoreImmobili + 1

                            'cmd.CommandText = "SELECT * FROM UNITA_IMMOBILIARI,IDENTIFICATIVI_CATASTALI WHERE IDENTIFICATIVI_CATASTALI.ID(+)=UNITA_IMMOBILIARI.ID_CATASTALE AND UNITA_IMMOBILIARI.ID=" & IfNull(rowRelaz.Item("ID_UNITA"), 0)
                            'myReaderT = cmd.ExecuteReader()
                            'If myReaderT.Read Then
                            '    varPercentualePossesso = Mid(IfNull(rowRelaz.Item("PERC_POSSESSO"), "0"), 1, 3)
                            'End If
                            'myReaderT.Close()
                            testoXML &= "<loc:LocazioneUsoAbitativo>" & vbCrLf _
                               & "<loc:ImmobileNumero>00" & varContatoreImmobili & "</loc:ImmobileNumero>" & vbCrLf _
                               & "<loc:LocatoreNumero>001</loc:LocatoreNumero>" & vbCrLf _
                               & "<loc:PercentualePossesso>" & varPercentualePossesso & "</loc:PercentualePossesso>" & vbCrLf _
                               & "<loc:Cedolare>N</loc:Cedolare>" & vbCrLf _
                               & "</loc:LocazioneUsoAbitativo>" & vbCrLf
                        Next
                        testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                             & "</loc:Relazioni>" & vbCrLf
                    End If
                End If

                testoXML &= "</loc:Documento>" & vbCrLf


                strFileTxt &= IdContratto & vbTab & codContratto & vbTab & varCodiceUtente & vbTab & tipologiaContrLoc & vbTab & varImpostaDiRegistro & vbTab & varSanzImpostaDiRegistro & vbTab & TotaleInteressi & vbTab & FormattaData(dataInvio) & vbTab & FormattaData(data_riferimento)
                If giorniDiff < 31 Then
                    giorniDiff = 0
                Else
                    giorniDiff = giorniDiff - 30
                End If
                cmd.CommandText = "INSERT INTO SISCOM_MI.RAPPORTI_UTENZA_IMPOSTE (ID_CONTRATTO,ANNO,COD_TRIBUTO,DATA_CREAZIONE,DATA_AE,IMPORTO_CANONE,IMPORTO_TRIBUTO,GIORNI_SANZIONE,IMPORTO_SANZIONE,IMPORTO_INTERESSI,file_scaricato,CF_PIVA) VALUES (" & IdContratto & "," & Year(Now) & ",'" & TipoTributo & "','" & Format(Now, "yyyyMMddHHmmss") & "','" & dataInvio & "'," & VirgoleInPunti(CanoneCorrente) & "," & VirgoleInPunti(varImpostaDiRegistro) & "," & giorniDiff & "," & VirgoleInPunti(varSanzImpostaDiRegistro) & "," & VirgoleInPunti(TotaleInteressi) & ",'" & sNomeFileContenitore & ".xml','" & varCodFiscaleCond & "')"
                cmd.ExecuteNonQuery()

            End If

            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
            End If

            'Catch ex As Exception
            '    strErrore = ex.Message
            '    testoXML = "ERRORE: " & ex.Message
            'End Try

            Return testoXML

        End Function

        Public Function ScriveXMLAdempSuccContrOld(ByVal IdContratto As Long, ByVal dataInvio As String, ByVal varContatoreDoc As Integer, ByRef totImporti As Decimal, ByVal varTipoAdempim As String, ByVal codUfficio As String, ByRef CanoneCorrente As Decimal, ByRef varImpostaDiRegistro As String, ByRef varTotSanzioni As Decimal, ByRef TotaleInteressi As Decimal, ByRef giorniDiff As Integer, ByVal DataRiferimento As String, ByRef queryInsert As String, ByRef idFornitura As Long) As String
            Dim testoXML As String = ""
            'Try
            Dim ConOpenNow As Boolean = False
            Dim bTrovato As Boolean = False
            Dim sStringaSql As String = ""
            Dim alertInfoMancante As Boolean = False

            Dim TipoContratto As String = ""

            '***** 0 Intestazione XML *****
            Dim varIntestazione As String = ""
            Dim varCodiceFornitura As String = "RLI12"

            Dim varTipoFornitore As String = "10"
            'Assume i valori:
            '1 - Soggetti che inviano le proprie dichiarazione.
            '10 - C.A.F. dipendenti e pensionati; C.A.F. imprese;
            'Societa' ed enti di cui all'art.3, comma 2 del DPR 322/98 (se tale societa' appartiene a un gruppo puo' trasmettere la propria dichiarazione e quelle delle aziende del gruppo);
            'Altri intermediari di cui all'art.3. comma 3 lett a), b), c) ed e) del DPR 322/98; Societa' degli Ordini di cui all' art. 3 Decr. Dir. 18/2/99;
            'Soggetto che trasmette le dichiarazioni per le quali l'impegno a trasmettere e' stato assunto da un professionista deceduto.

            Dim varCodFiscFornitore As String = ""
            Dim varSpazioUtente As String = ""
            Dim varSpazioServTelem As String = ""
            Dim varUfficioTerritoriale As String = ""
            Dim varCodiceABI As String = ""
            Dim varCodiceCAB As String = ""
            Dim varCodiceCIN As String = ""
            Dim varNumContoCorrente As String = ""
            Dim varCodFiscTitolareCC As String = ""
            Dim varImportoDaVersare As String = "" '=??? ImportoBollo, ImportoRegistrazione, ImportoSanzioniRegistrazione, ImportoInteressi
            Dim ImportoRecesso As Decimal = 0
            Dim ImportoRegistrazione As Decimal = 0
            Dim varPdfBase64 As String = ""
            Dim durataRinnovo As Integer = 0
            totImporti = 0

            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=1"
            Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReader.Read Then
                ImportoRecesso = CDec(PuntiInVirgole(IfNull(myReader("valore"), "")))
            End If
            myReader.Close()

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=6"
            myReader = cmd.ExecuteReader()
            If myReader.Read Then
                ImportoRegistrazione = CDec(PuntiInVirgole(IfNull(myReader("valore"), "")))
            End If
            myReader.Close()

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=10"
            Dim myReaderB As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB.Read Then
                varCodFiscFornitore = IfNull(myReaderB("valore"), "")
            End If
            myReaderB.Close()

            '***** 1 Frontespizio *****
            Dim varIDProdottoSw As String = ""
            Dim varNumModuliCompilati As String = ""
            Dim varIDcontratto As String = ""

            '***** 1.1 Richiedente (persona fisica o giuridica) *****
            Dim varCfRichiedente As String = ""
            Dim varNome As String = ""
            Dim varCognomeRich As String = ""

            Dim varNomeCond As String = ""
            Dim varCognomeCond As String = ""
            Dim varCodFiscaleCond As String = ""

            Dim varCodFiscaleRappr As String = ""
            Dim varCognomeRappr As String = ""
            Dim varNomeRappr As String = ""
            Dim varCodiceCarica As String = "1"
            'Può assumere uno dei seguenti valori:
            '1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15

            Dim varFirma As String = "1"
            Dim varTipoRichiedente As String = "1" '1: parte del contratto; 2:mediatore del contratto 
            Dim varSubentro As String = "0"

            Dim varTipoContratto As String = ""
            'LEGENDA TIPI CONTRATTO:
            'L1 = Locazione di immobile ad uso abitativo; (VALIDO)
            'L2 = Locazione agevolata di immobile ad uso abitativo; (VALIDO)
            'L3 = Locazione di immobile ad uso abitativo (contratto soggetto ad IVA); 
            'L4 = Locazione finanziaria di immobile ad uso abitativo;
            'S1 = Locazione di immobile ad uso diverso dall'abitativo; (VALIDO)
            'S2 = Locazione di immobile ad uso diverso dall'abitativo con locatore soggetto ad IVA; 
            'S3 = Locazione Finanziaria di immobile ad uso diverso dall'abitativo; 
            'T1 = Affitto di fondo rustico; 
            'T2 = Affitto di fondo rustico agevolato; 
            'T3 = Affitto di terreni ed aree non edificabili, cave e torbiere; 
            'T4 = Affitto di terreni edificabili o non edificabili destinati a parcheggio (contratto assoggettato ad IVA)

            Dim varPagamInteraDurataContr As String = "" '= FLAG. 
            'La casella va barrata se si tratta di una locazione di un immobile urbano di durata pluriennale e se il pagamento della relativa imposta di registro viene
            'versata per l'intero periodo, ottenendo quindi uno sconto di imposta, va barrata la casella anche se trattasi di proroga.
            'Nel caso di prima registrazione può essere 
            'presente solo per tipologia di contratto = L1, L2, L3, S1, S2, T1, T2, T3, T4.
            'Nel caso di prima registrazione è obbligatorio per tipologia di contratto = T1, T2, T3, T4 e per la
            'tipologia contratto L1, L2, L3, S1, S2 se la durata del contratto (data fine – data inizio) è minore o uguale a 365 giorni 
            '(in assenza di durata non è obbligatorio). 
            'Nel caso di adempimenti successivi può essere presente solo se tipologia di adempimento è uguale a 2.

            Dim varEventiEccezionali As String = "0" 'La casella va barrata dai contribuenti che hanno diritto alle agevolazioni fiscali a seguito di calamità naturali o eventi eccezionali. 
            'Se barrata non devono essere presenti sanzioni ed interessi

            Dim varCasiParticolari As String = "" '= FLAG. (0 in caso di prima registrazione)
            'Questa casella va barrata se il contratto di locazione che si intende registrare prevede particolari clausole contrattuali. Va indicato il codice 1, se si prevede un canone diverso per il primo anno di locazione o più annualità.

            '***** 1.2 Importi *****
            'Dim CanoneCorrente As Decimal = 0
            '*********** 1.2.1 Imposte *****
            'Dim varImpostaDiRegistro As String = "0,00"
            Dim varImpostaDiBollo As String = "0,00"

            '*********** 1.2.2 Sanzioni *****
            Dim varSanzImpostaDiRegistro As String = "0,00"
            Dim varSanzImpostaDiBollo As String = "0,00"
            Dim varInteressi As New SortedDictionary(Of Integer, Double)
            varInteressi.Clear()

            '***** 1.3 Registrazione *****
            Dim varNumProgressCanone As String = "00000001" 'Vale sempre 1

            '***** 1.3.1 Contratto *****
            Dim varDataInizio As String = ""
            Dim varDataFine As String = ""
            Dim varImportoCanone As String = "0,00"
            Dim varDataStipula As String = ""
            Dim varNumeroPagine As String = "" '(Fisso come prima?)
            Dim varNumeroCopie As String = "1" 'Indicare il numero di esemplari cartacei del contratto sottoscritti dalle parti (minimo uno).
            Dim varContrSoggettoIVA As String = "0" 'NO per il comune di Milano
            Dim varCondizioneSospensiva As String = "0"
            Dim varNumeroAllegatoA As String = "" 'Numero fogli o esemplari di scritture private, inventari (allegati al contratto)
            Dim varNumeroAllegatoB As String = "" 'Numero fogli o esemplari di ricevute e quietanze (allegati al contratto)
            Dim varNumeroAllegatoC As String = "" 'Numero fogli o esemplari di mappe, planimetrie e disegni (allegati al contratto)

            Dim varContrattoEsente As String = "" '1=esente bollo, 2= esente bollo e registro

            '***** 1.3.2 Garanzia ***** 'Se nel contratto di locazione e' presente una garanzia prestata da terzi indicare i codici fiscali dei garanti (almeno uno).
            Dim varTipologiaGaranzia As String = ""
            Dim varImportoGaranziaPrestataDaTerzi As String = ""
            Dim varCodiceFiscaleGarante As String = ""
            Dim varCodiceFiscaleSecondoGarante As String = ""

            '***** 1.3.3 Allegati *****
            'deve essere allegato il contratto da registrare.
            'L’allegazione è facoltativa in presenza contemporanea dei seguenti requisiti:
            '- Tipologia contratto: L1 o L2
            '- Contratto non soggetto a Iva;
            '- Assenza di allegati (Mappe, planimetrie, disegni,ecc....).
            '- massimo 3 Locatori persone fisiche e soggettività Iva non barrata
            '- massimo 3 Conduttori persone fisiche e soggettività Iva non barrata
            '- deve essere presente almeno un immobile con codice 1 (immobile principale).
            '- Gli altri immobili (max 3) devono avere codice 2 (pertinenza locata congiuntamente).
            '- Tipologia immobile: U = urbano.
            '- Rendita catastale presente
            Dim varTipoFile As String = ""
            Dim varNomeFile As String = ""
            Dim varDescrizioneFile As String = ""
            Dim varImmagineData As String = ""

            '***** 1.4 ImpegnoATrasmettere (riservato alla presentazione in via telematica) *****
            Dim varCFintermediario As String = ""
            Dim varImpegnoATrasmettere As String = ""
            Dim varDataImpegno As String = ""
            Dim varFirmaIntermediario As String = ""


            '***** 1.5 Soggetti *****
            '*********** 1.5.1 Locatore ***********
            Dim varContatoreLocatore As String = "001"
            Dim varSoggettIVALocat As String = "0"
            Dim varDenominazione As String = ""


            '*********** 1.5.2 Conduttore ***********
            '(Variabili da intendersi per tutti i componenti del nucleo)
            Dim varContatoreSoggetti As Integer = 0
            Dim varSoggettivitaIVA As String = "0"
            Dim varSesso As String = ""
            Dim varCodFiscaleRich As String = ""
            Dim varDataNascita As String = ""
            Dim varComuneNascita As String = ""
            Dim varProvinciaNascita As String = ""
            Dim varCedente As String = "0"


            '***** 1.6 Immobili *****
            Dim varContatoreImmobili As Integer = 0

            Dim varTipoImmobile As String = ""
            'Assume i seguenti valori:
            '1 = Immobile principale
            '2 = Pertinenza locata congiuntamente all' immobile principale
            '3 = Pertinenza locata disgiuntamente all' immobile principale
            '• Se e' presente un rigo con valore 2, dovra' essere presente in uno dei righi precedenti un
            'immobile con valore 1 e dovra' essere preceduto da un rigo con valore 1 o 2.
            '• Se e' presente un rigo con valore 3, non e' necessario che sia presente un rigo con valore 1. 

            Dim vaCodComuneCatastale As String = ""

            Dim varTipoCatasto As String = "U" 'T/U (Terreni/Urbano) 
            'Dato obbligatorio se provincia e' diversa da "EE".
            'Se si tratta di prima registrazione se tipologia contratto = T1 o T2 e provincia(E) diversa da "EE", tipo catasto deve essere = T. 
            'Se si tratta di prima registrazione se tipologia contratto = da L1 A L4, e da S1 a S3 e provincia e' diversa da "EE" , tipo catasto deve essere = U

            Dim varPorzioneImmobile As String = "I" 'I/P (Intero/Porzione)

            Dim varSezioneUrbana As String = ""
            'Per gli immobili siti nelle sole zone in cui vige il sistema
            'tavolare indicare il codice “Comune catastale” presente nel documento catastale.


            Dim varFoglio As String = ""
            Dim varParticellaNumeratore As String = ""
            Dim varParticellaDenominatore As String = ""
            Dim varSubalterno As String = ""

            Dim varInViaDiAccattastam As String = "" 'Dato obbligatorio se provincia e' diversa da "EE" e in assenza di DatiCatastali

            Dim varComune As String = ""
            Dim varProvincia As String = ""
            Dim varCategCatastale As String = ""
            Dim varRenditaCatastale As String = ""
            Dim varTipoIndirizzo As String = ""
            Dim varIndirizzo As String = ""
            Dim varNumCivico As String = ""


            '***** 1.7 Relazioni *****
            'Questo quadro va compilato solo per le locazioni ad uso abitativo.
            'Se si tratta di prima registrazione il quadro può essere presente solo se tipologia contratto = L1 o L2 
            'e non sia stata barrata la casella “soggettivita' IVA” nella sezione dedicata ai locatori 
            'Nel caso di adempimenti successivi il quadro è obbligatorio se è presente il campo CedolareSecca; non può essere presente negli altri casi.

            Dim varImmobileNumero As Integer = 1
            'Se si tratta di prima registrazione il campo è obbigatorio.
            'Nel caso di adempimenti successivi non deve essere presente.
            'Devono essere presenti tutti gli immobili (e soltanto quelli) che hanno 
            'categoria catastale = gruppo A (+ relative pertinenze) e che abbiano una
            'rendita diversa da zero.
            'Non possono essere inseriti immobili con categoria catastale diversa da A.
            'Non possono essere presenti pertinenze con tipologia immobile = 3.
            'Il regime di tassazione scelto per l’immobile principale (tipologia immobile = 1) deve valere anche
            'per la relativa pertinenza (tipologia immobile = 2)

            Dim varLocatoreNumero As Integer = 1
            Dim varPercentualePossesso As String = "100"
            Dim varCedolare As String = "N"

            Dim FL_BOLLO_ESENTE As String = ""

            Dim varImportoBolloParam As String = ""
            'Dim varContatoreDoc As Integer = 0

            'If NuovoCodUfficio = 1 Then
            '    varIntestazione = "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "UTF-8" & Chr(34) & "?>" _
            '            & "<!--created with SEPA@Web (www.sistemiesoluzionisrl.it)-->" _
            '            & "<loc:Fornitura xmlns:sc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:common:v2" & Chr(34) & "xmlns:loc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:loc:v1" & Chr(34) & " xmlns:reg=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:reg:v1" & Chr(34) & " > " _
            '            & "<loc:Intestazione>" _
            '            & "<loc:CodiceFornitura>" & varCodiceFornitura & "</loc:CodiceFornitura>" _
            '            & "<loc:TipoFornitore>" & varTipoFornitore & "</loc:TipoFornitore>" _
            '            & "<loc:CodiceFiscaleFornitore>" & varCodFiscFornitore & "</loc:CodiceFiscaleFornitore>" _
            '            & "<loc:SpazioUtente>" & varSpazioUtente & "</loc:SpazioUtente>" _
            '            & "<loc:SpazioServizioTelematico>" & varSpazioServTelem & "</loc:SpazioServizioTelematico>" _
            '            & "</loc:Intestazione>" _
            '            & "<loc:DatiGenerali>" _
            '            & "<loc:UfficioCompetente>" _
            '            & "<loc:UfficioTerritoriale>" & varUfficioTerritoriale & "</loc:UfficioTerritoriale>" _
            '            & "</loc:UfficioCompetente>" _
            '            & "<loc:Versamento>" _
            '            & "<reg:CodiceABI>" & varCodiceABI & "</reg:CodiceABI>" _
            '            & "<reg:CodiceCAB>" & varCodiceCAB & "</reg:CodiceCAB>" _
            '            & "<reg:NumeroContoCorrente>" & varNumContoCorrente & "</reg:NumeroContoCorrente>" _
            '            & "<reg:CIN>" & varCodiceCIN & "</reg:CIN>" _
            '            & "<reg:CodiceFiscaleTitolareCC>" & varCodFiscTitolareCC & "</reg:CodiceFiscaleTitolareCC>" _
            '            & "</loc:Versamento>" _
            '            & "<loc:ImportoDaVersare>" & varImportoDaVersare & "</loc:ImportoDaVersare>" _
            '            & "</loc:DatiGenerali>"
            'End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=42"
            Dim myReaderB2 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB2.Read Then
                varCFintermediario = IfNull(myReaderB2("valore"), "")
            End If
            myReaderB.Close()

            Dim LimiteTassaRegistrazione As String = 0
            cmd.CommandText = "select valore from siscom_MI.parametri_BOLLETTA where ID=6"
            Dim myReaderJ As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderJ.Read Then
                LimiteTassaRegistrazione = PuntiInVirgole(IfNull(myReaderJ("VALORE"), ""))
            End If
            myReaderJ.Close()
            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=8"
            Dim myReaderP As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderP.Read Then
                varDenominazione = IfNull(myReaderP("valore"), "")
            End If
            myReaderP.Close()

            cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 18"
            Dim myReaderZ1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderZ1.Read Then
                varImportoBolloParam = IfNull(myReaderZ1("VALORE"), "0")
            End If
            myReaderZ1.Close()
            Dim persGiuridicaRich As Boolean = False
            Dim persGiuridica As Boolean = False
            Dim varCodContratto As String = ""
            If IdContratto <> 0 Then

                cmd.CommandText = "select * from siscom_mi.rapporti_utenza where id=" & IdContratto
                Dim myReaderRU As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderRU.Read Then
                    varCodContratto = IfNull(myReaderRU("COD_CONTRATTO"), "")
                End If
                myReaderRU.Close()

                cmd.CommandText = "select * from siscom_mi.tab_interessi_legali order by anno desc"
                Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                Do While myReaderA.Read
                    varInteressi.Add(myReaderA("anno"), myReaderA("tasso"))
                Loop
                myReaderA.Close()

                cmd.CommandText = "select * from siscom_mi.PARAMETRI_RICHIEDENTE_XML"
                myReaderA = cmd.ExecuteReader()
                If myReaderA.Read Then
                    varTipoRichiedente = IfNull(myReaderA("ID_TIPO_RICH"), -1)
                    varCodFiscaleRich = IfNull(myReaderA("CODFISC_PIVA"), "")
                    varCognomeRich = IfNull(myReaderA("DENOMINAZIONE"), "")
                    varCodFiscaleRappr = IfNull(myReaderA("CODFISC_RAPP"), "")
                    varCognomeRappr = IfNull(myReaderA("COGNOME_RAPP"), "")
                    varNomeRappr = IfNull(myReaderA("NOME_RAPP"), "")
                    If varTipoRichiedente = "0" Or varTipoRichiedente = "2" Then
                        persGiuridicaRich = True
                    End If
                End If
                myReaderA.Close()

                If varTipoRichiedente = "1" Then
                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                    Dim myReader12345 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReader12345.Read Then
                        If IfNull(myReader12345("cod_fiscale"), "") = "" And IfNull(myReader12345("partita_iva"), "") <> "" Then
                            varCognomeRich = IfNull(myReader12345("ragione_sociale"), "")
                            varCodFiscaleRich = IfNull(myReader12345("partita_iva"), "")
                            persGiuridicaRich = True
                        Else
                            varCognomeRich = IfNull(myReader12345("cognome"), "")
                            varNome = IfNull(myReader12345("nome"), "")
                            varCodFiscaleRich = IfNull(myReader12345("cod_fiscale"), "")
                        End If
                    End If
                    myReader12345.Close()
                End If

                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                Dim myReader1234 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader1234.Read Then
                    If IfNull(myReader1234("partita_iva"), "") <> "" Then
                        varCognomeCond = IfNull(myReader1234("ragione_sociale"), "")
                        varCodFiscaleCond = IfNull(myReader1234("partita_iva"), "")
                        persGiuridica = True
                    Else
                        varCognomeCond = IfNull(myReader1234("cognome"), "")
                        varNomeCond = IfNull(myReader1234("nome"), "")
                        varCodFiscaleCond = IfNull(myReader1234("cod_fiscale"), "")
                    End If
                End If
                myReader1234.Close()

                ''cmd.CommandText = "SELECT T_MOTIVO_DOMANDA_VSA.*,DOMANDE_BANDO_VSA.ID AS IDDOM,DOMANDE_BANDO_VSA.* FROM DOMANDE_BANDO_VSA,T_MOTIVO_DOMANDA_VSA,DICHIARAZIONI_VSA WHERE DICHIARAZIONI_VSA.ID=DOMANDE_BANDO_VSA.ID_DICHIARAZIONE AND DICHIARAZIONI_VSA.ID_STATO <> 2 AND DOMANDE_BANDO_VSA.FL_AUTORIZZAZIONE=1 and DOMANDE_BANDO_VSA.ID_MOTIVO_DOMANDA=1 AND DOMANDE_BANDO_VSA.ID_MOTIVO_DOMANDA = T_MOTIVO_DOMANDA_VSA.ID AND CONTRATTO_NUM='" & varCodContratto & "' ORDER BY DOMANDE_BANDO_VSA.DATA_PG DESC"
                ''myReader1234 = cmd.ExecuteReader()
                ''If myReader1234.Read Then
                ''    varSubentro = "1"
                ''End If
                ''myReader1234.Close()

                'Tag Documento (diverso per ogni contratto)
                'varContatoreDoc = varContatoreDoc + 1
                testoXML = "<loc:Documento identificativo=" & Chr(34) & Format(varContatoreDoc, "00000") & Chr(34) & "><loc:Frontespizio>" & vbCrLf _
                    & "<loc:IdentificativoProdSoftware>SEPA2009</loc:IdentificativoProdSoftware>" & vbCrLf _
                    & "<loc:NumeroModuliCompilati>4</loc:NumeroModuliCompilati>" & vbCrLf _
                    & "<loc:IDContratto>" & IdContratto & "</loc:IDContratto>" & vbCrLf _
                    & "<loc:Richiedente>" & vbCrLf _
                    & "<loc:CodiceFiscale>" & varCodFiscaleRich & "</loc:CodiceFiscale>" & vbCrLf

                If persGiuridicaRich = True Then
                    testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Denominazione>" & varCognomeRich.ToUpper & "</loc:Denominazione>" & vbCrLf _
                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Rappresentante>" & vbCrLf _
                    & "<loc:CodiceFiscaleRappresentante>" & varCodFiscaleRappr & "</loc:CodiceFiscaleRappresentante>" & vbCrLf _
                    & "<loc:CognomeRappresentante>" & varCognomeRappr & "</loc:CognomeRappresentante>" & vbCrLf _
                    & "<loc:NomeRappresentante>" & varNomeRappr & "</loc:NomeRappresentante>" & vbCrLf _
                    & "<loc:CodiceCarica>" & varCodiceCarica & "</loc:CodiceCarica>" & vbCrLf _
                    & "</loc:Rappresentante>" & vbCrLf
                Else
                    testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                    & "<loc:Cognome>" & varCognomeRich & "</loc:Cognome>" & vbCrLf _
                    & "<loc:Nome>" & varNome & "</loc:Nome>" & vbCrLf _
                    & "</loc:PersoneFisiche>" & vbCrLf
                End If
                If varTipoRichiedente = "0" Then
                    varTipoRichiedente = "1"
                End If
                If varTipoAdempim <> "3" Then
                    testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                        & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf _
                        & "<loc:Subentro>" & varSubentro & "</loc:Subentro>" & vbCrLf _
                        & "</loc:Richiedente>" & vbCrLf
                Else
                    testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                        & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf _
                        & "</loc:Richiedente>" & vbCrLf
                End If


                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                cmd.CommandText = "SELECT siscom_mi.seq_DATI_GENERALI_RLI.nextval from dual"
                idFornitura = IfNull(cmd.ExecuteScalar, 0)

                cmd.CommandText = " INSERT INTO SISCOM_MI.DATI_GENERALI_RLI (ID) VALUES (" & idFornitura & ")"
                cmd.ExecuteNonQuery()

                queryInsert = "UPDATE SISCOM_MI.DATI_GENERALI_RLI " _
                    & " SET " _
                    & " NUM_IDENTIFICATIVO_DOC   = " & insDbValue(Format(varContatoreDoc, "00000"), True) & "" _
                    & " ,IDENTIFICATIVO_PRODOTTO_SW   = 'SEPA2009' " _
                    & " ,NUMERO_MODULO_COMPILATI      = 4 " _
                    & " ,ID_CONTRATTO                 = " & insDbValue(IdContratto, False) & " " _
                    & " ,COD_FISCALE_RICHIEDENTE      = " & insDbValue(varCodFiscaleRich, True) & " " _
                    & " ,DENOMINAZIONE_RICHIEDENTE    = " & insDbValue(varCognomeRich.ToUpper, True) & " " _
                    & " ,COD_FISCALE_RAPPRESENTANTE   = " & insDbValue(varCodFiscaleRappr, True) & " " _
                    & " ,COGNOME_RAPPRESENTANTE       = " & insDbValue(varCognomeRappr, True) & " " _
                    & " ,NOME_RAPPRESENTANTE          = " & insDbValue(varNomeRappr, True) & " " _
                    & " ,CODICE_CARICA                = " & insDbValue(varCodiceCarica, False) & " " _
                    & " ,FIRMA                        = " & insDbValue(varFirma, False) & " " _
                    & " ,TIPOLOGIA_RICHIEDENTE        = " & insDbValue(varTipoRichiedente, False) & " " _
                    & " ,SUBENTRO                     = " & insDbValue(varSubentro, False) & " "

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI


                Dim data_riferimento As String = ""
                Dim data_riconsegna As String = ""
                'Dim giorniDiff As Integer = 0
                Dim idUnita As Long = 0
                Dim provenienza As String = ""
                Dim Agevolato As String = ""
                Dim CanoneDaScrivere As String = ""
                Dim dataValuta As String = ""
                Dim SU As Boolean = True
                Dim aggiornamento_istat As Decimal = 0
                Dim AltriAdeguamenti As Decimal = 0
                Dim importo112 As Decimal = 0
                Dim varSerieRegistr As String = ""
                Dim varAnnoRegistr As String = ""
                Dim varNumRegistr As Integer = 0
                Dim varIDTelematico As String = ""

                cmd.CommandText = "SELECT (SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_MOTIVO=2 AND ID_CONTRATTO=RAPPORTI_UTENZA.ID) AS ISTAT,(SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_MOTIVO<>2 AND ID_CONTRATTO=RAPPORTI_UTENZA.ID) AS ADEGUAMENTO,RAPPORTI_UTENZA_PROSSIMA_BOL.PROSSIMA_BOLLETTA,TIPOLOGIA_CONTRATTO_LOCAZIONE.DESCRIZIONE AS ""TIPO_C"",TIPOLOGIA_CONTRATTO_LOCAZIONE.RIF_LEGISLATIVO ,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_tr_canone,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_conduttore,RAPPORTI_UTENZA.*,SISCOM_MI.GETSTATOCONTRATTO(RAPPORTI_UTENZA.ID) AS ""STATO"" FROM SISCOM_MI.RAPPORTI_UTENZA_PROSSIMA_BOL,SISCOM_MI.RAPPORTI_UTENZA,SISCOM_MI.TIPOLOGIA_CONTRATTO_LOCAZIONE WHERE RAPPORTI_UTENZA_PROSSIMA_BOL.ID_CONTRATTO(+)=RAPPORTI_UTENZA.ID AND TIPOLOGIA_CONTRATTO_LOCAZIONE.COD=RAPPORTI_UTENZA.COD_TIPOLOGIA_CONTR_LOC AND RAPPORTI_UTENZA.ID=" & IdContratto
                Dim myReaderT As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderT.Read Then
                    CanoneCorrente = IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0)
                    Select Case IfNull(myReaderT("versamento_tr"), 0)
                        Case "A"
                            varPagamInteraDurataContr = "0"
                        Case "U"
                            varPagamInteraDurataContr = "1"
                    End Select
                    'cmd.CommandText = "SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_CONTRATTO=" & IdContratto
                    'Dim myReaderX1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    'If myReaderX1.Read Then
                    '    CanoneCorrente = CanoneCorrente + IfNull(myReaderX1(0), 0)
                    'End If
                    'myReaderX1.Close()

                    TipoContratto = IfNull(myReaderT("PROVENIENZA_ASS"), "")
                    data_riconsegna = IfNull(myReaderT("DATA_SCADENZA_RINNOVO"), "")
                    durataRinnovo = IfNull(myReaderT("DURATA_RINNOVO"), 0)
                    If durataRinnovo > 0 Then
                        While Mid(data_riconsegna, 1, 4) <= Year(Now)
                            data_riconsegna = AggiustaData(DateAdd(DateInterval.Year, durataRinnovo, CDate(FormattaData(data_riconsegna))))
                        End While
                    End If
                    varSerieRegistr = IfNull(myReaderT("SERIE_REGISTRAZIONE"), "")
                    varAnnoRegistr = Mid(IfNull(myReaderT("DATA_REG"), ""), 1, 4)
                    varNumRegistr = CInt(IfNull(myReaderT("NUM_REGISTRAZIONE"), 0))
                    varIDTelematico = IfNull(myReaderT("REG_TELEMATICA"), "")

                    'varImpostaDiRegistro = Format((IfNull(myReaderT("perc_tr_canone"), 0) * CanoneCorrente) / 100, "0.00")

                    '28/05/2015 max
                    Dim NumeroGiorniMese As Integer = DateTime.DaysInMonth(CInt(Mid(DataRiferimento, 1, 4)), CInt(Mid(DataRiferimento, 5, 2)))
                    If IfNull(myReaderT("data_stipula"), "29991231") < IfNull(myReaderT("data_decorrenza"), "29991231") Then
                        If NumeroGiorniMese < CInt(Mid(IfNull(myReaderT("data_stipula"), "01"), 7, 2)) Then
                            data_riferimento = DataRiferimento & Format(NumeroGiorniMese, "00")
                        Else
                            data_riferimento = DataRiferimento & Mid(IfNull(myReaderT("data_stipula"), "01"), 7, 2)
                        End If
                    Else
                        If NumeroGiorniMese < CInt(Mid(IfNull(myReaderT("data_decorrenza"), "01"), 7, 2)) Then
                            data_riferimento = DataRiferimento & Format(NumeroGiorniMese, "00")
                        Else
                            data_riferimento = DataRiferimento & Mid(IfNull(myReaderT("data_decorrenza"), "01"), 7, 2)
                        End If
                    End If
                    varDataInizio = FormattaData(data_riferimento)
                    varDataFine = FormattaData(IfNull(myReaderT("data_scadenza"), ""))
                    FL_BOLLO_ESENTE = IfNull(myReaderT("FL_BOLLO_ASSOLTO"), "0")

                    Agevolato = "N"
                    If IfNull(myReaderT("COD_TIPOLOGIA_CONTR_LOC"), "") = "L43198" And (IfNull(myReaderT("DEST_USO"), "") = "0" Or IfNull(myReaderT("DEST_USO"), "") = "P") Then
                        Agevolato = "S"
                    End If
                    If varTipoAdempim <> "3" Then
                        If Agevolato = "N" Then
                            CanoneDaScrivere = (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))
                            varImpostaDiRegistro = Format(((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2, "0.00")
                        Else
                            CanoneDaScrivere = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))))
                            varImpostaDiRegistro = Format((((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))) / 100) * 2, "0.00")
                        End If
                    End If

                    If SoluzioneUnica(CDbl(PuntiInVirgole((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))), CInt(Format(myReaderT("DURATA_RINNOVO"), "0")), IfNull(myReaderT("perc_tr_canone"), "2")) <= 67 Then
                        SU = True
                    Else
                        SU = False
                    End If

                    If SU = False Then
                        If Agevolato = "N" Then
                            CanoneDaScrivere = (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))
                            importo112 = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2
                        Else
                            CanoneDaScrivere = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))))
                            importo112 = (((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))) / 100) * 2
                        End If

                        If importo112 < 67 Then
                            importo112 = 67
                        End If
                        'tipopagamentoproroga = "P"
                    Else
                        importo112 = SoluzioneUnica(CDbl(IfNull(myReaderT("imp_CANONE_iniziale"), 0) + aggiornamento_istat + AltriAdeguamenti), CInt(myReaderT("DURATA_RINNOVO")), IfNull(myReaderT("PERC_TR_CANONE"), "0"))

                        If importo112 < 67 Then
                            importo112 = 67
                        End If
                        'tipopagamentoproroga = "T"
                    End If
                End If
                myReaderT.Close()

                Select Case varTipoAdempim
                    Case "1"
                        dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riferimento))))
                        varImportoCanone = Format(CanoneDaScrivere, "0.00")
                    Case "2"
                        dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riferimento))))
                        varImpostaDiRegistro = Format(Math.Round(importo112, 2), "0.00")
                    Case "3"
                        dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riferimento))))
                        'varImpostaDiRegistro = Format(Math.Round(ImportoRecesso, 2), "0.00")
                    Case "4"
                        dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riconsegna))))
                        varImpostaDiRegistro = Format(Math.Round(ImportoRecesso, 2), "0.00")
                End Select

                cmd.CommandText = "SELECT UNITA_IMMOBILIARI.ID FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE ID_CONTRATTO=" & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE IS NULL"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    idUnita = IfNull(myReaderT("ID"), 0)
                End If
                myReaderT.Close()

                If varTipoAdempim = "3" Then
                    cmd.CommandText = "select * from RAPPORTI_UTENZA_CESSIONI where id_Contratto=" & IdContratto & " order by data_Cessione desc"
                    myReaderT = cmd.ExecuteReader()
                    If myReaderT.Read Then
                        varImpostaDiRegistro = Format(IfNull(myReaderT("importo"), 0), "0.00")
                    End If
                    myReaderT.Close()
                End If
                cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_ASSEGNATE WHERE ID_UNITA=" & idUnita & " ORDER BY ID_DOMANDA DESC"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    provenienza = IfNull(myReaderT("PROVENIENZA"), "")
                End If
                myReaderT.Close()

                Select Case TipoContratto
                    Case "6"
                        Select Case provenienza
                            Case "C"
                                TipoContratto = "61"
                            Case "P"
                                TipoContratto = "62"
                            Case "S"
                                TipoContratto = "63"
                            Case "D"
                                TipoContratto = "64"
                            Case "V"
                                TipoContratto = "65"
                            Case Else

                        End Select
                    Case "3"
                        Select Case provenienza
                            Case "B"
                                TipoContratto = "BOX"
                            Case "N"
                                TipoContratto = "NEGOZI"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                    Case "5"
                        Select Case provenienza
                            Case "A"
                                TipoContratto = "392ASS"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                End Select

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varTipoContratto = "S1"
                ElseIf TipoContratto = "6" Or TipoContratto = "62" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varTipoContratto = "L2"
                Else
                    varTipoContratto = "L1"
                End If

                If varTipoAdempim = "2" Then
                    testoXML &= "<loc:PagamentoInteraDurataContratto>" & varPagamInteraDurataContr & "</loc:PagamentoInteraDurataContratto>" & vbCrLf
                End If
                '& "<loc:EventiEccezionali>" & varEventiEccezionali & "</loc:EventiEccezionali>" & vbCrLf
                '& "<loc:CasiParticolari>" & varCasiParticolari & "</loc:CasiParticolari>" & vbCrLf

                ''gioniDiff = DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(FormattaData(dataInvio)))

                ''If gioniDiff >= 31 And gioniDiff <= 90 Then
                ''    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 12) / 100, "0.00")
                ''End If

                ''If gioniDiff >= 91 And gioniDiff <= 365 Then
                ''    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 15) / 100, "0.00")
                ''End If

                ''If gioniDiff >= 366 Then
                ''    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 120) / 100, "0.00")
                ''End If

                If SU = True Then
                    cmd.CommandText = "update siscom_mi.rapporti_utenza set versamento_tr='U' where cod_contratto='" & IfNull(varCodContratto, "") & "'"
                Else
                    cmd.CommandText = "update siscom_mi.rapporti_utenza set versamento_tr='A' where cod_contratto='" & IfNull(varCodContratto, "") & "'"
                End If

                cmd.ExecuteNonQuery()

                Dim Giorni As Integer = 0
                Dim GiorniAnno As Integer = 0
                Dim dataPartenza As String = ""

                'Dim TotaleInteressi As Decimal = 0
                Dim TotalePeriodo As Decimal = 0
                Dim indice As Long = 0
                Dim tasso As Decimal = 0
                Dim DataFine As String = ""
                Dim DataInizio As String = ""

                varSanzImpostaDiRegistro = "0,00"
                TotaleInteressi = 0
                giorniDiff = 0
                varImpostaDiRegistro = Format(Math.Round(CDec(varImpostaDiRegistro), 0, MidpointRounding.AwayFromZero), "0.00")
                If AggiustaData(dataValuta) < dataInvio Then

                    giorniDiff = DateDiff(DateInterval.Day, CDate(dataValuta), CDate(FormattaData(dataInvio)))

                    If giorniDiff <= 90 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 3) / 100, "0.00")
                    End If

                    If giorniDiff >= 91 And giorniDiff <= 365 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 3.75) / 100, "0.00")
                    End If

                    If giorniDiff >= 366 Then
                        varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 30) / 100, "0.00")
                    End If

                    TotaleInteressi = 0
                    If varSanzImpostaDiRegistro > 0 Then
                        'DataCalcolo = AggiustaData(dataInvio)
                        DataInizio = Format(DateAdd(DateInterval.Day, 1, CDate(dataValuta)), "yyyyMMdd")

                        Giorni = 0
                        GiorniAnno = 0
                        dataPartenza = DataInizio
                        TotaleInteressi = 0
                        TotalePeriodo = 0

                        For KK1 = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))

                            If KK1 = CInt(Mid(dataInvio, 1, 4)) Then
                                DataFine = FormattaData(dataInvio)
                            Else
                                DataFine = "31/12/" & KK1

                            End If

                            GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK1), CDate("31/12/" & KK1)) + 1

                            Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1

                            If KK1 < 1990 Then
                                tasso = 5
                            Else
                                If varInteressi.ContainsKey(KK1) = True Then
                                    tasso = varInteressi(KK1)
                                End If
                            End If

                            TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                            TotaleInteressi = TotaleInteressi + TotalePeriodo

                            dataPartenza = KK1 + 1 & "0101"
                        Next
                    Else
                        TotaleInteressi = 0
                        TotalePeriodo = 0
                    End If
                End If

                ''If varSanzImpostaDiRegistro > 0 Then
                ''    'DataCalcolo = AggiustaData(dataInvio)
                ''    DataInizio = Format(DateAdd(DateInterval.Day, 30, CDate(FormattaData(data_riferimento))), "yyyyMMdd")

                ''    Giorni = 0
                ''    GiorniAnno = 0
                ''    dataPartenza = DataInizio
                ''    TotaleInteressi = 0
                ''    TotalePeriodo = 0

                ''    For KK = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))
                ''        If KK = CInt(Mid(dataInvio, 1, 4)) Then
                ''            DataFine = FormattaData(dataInvio)
                ''        Else
                ''            DataFine = "31/12/" & KK
                ''        End If
                ''        GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK), CDate("31/12/" & KK)) + 1
                ''        Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1
                ''        If KK < 1990 Then
                ''            tasso = 5
                ''        Else
                ''            If varInteressi.ContainsKey(KK) = True Then
                ''                tasso = varInteressi(KK)
                ''            End If
                ''        End If
                ''        TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                ''        TotaleInteressi = TotaleInteressi + TotalePeriodo
                ''        dataPartenza = KK + 1 & "0101"
                ''    Next
                ''Else
                ''    TotaleInteressi = 0
                ''    TotalePeriodo = 0
                ''End If

                Dim importobollo As String = ""
                importobollo = varImportoBolloParam
                If TipoContratto = "6" Or TipoContratto = "61" Or TipoContratto = "62" Or TipoContratto = "62" Or TipoContratto = "12" Or TipoContratto = "1" Or TipoContratto = "ERPB" Or TipoContratto = "8" Or TipoContratto = "2" Or TipoContratto = "10" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varNumeroPagine = "5"
                    'importobollo = "80,00"
                End If

                If TipoContratto = "392ASS" Then
                    varNumeroPagine = "5"
                    'importobollo = "96,00"
                End If

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varNumeroPagine = "6"
                    'importobollo = "96,00"
                End If

                importobollo = Ceiling((CDec(varNumeroPagine) / 4)) * CDec(PuntiInVirgole(importobollo)) * CDec(varNumeroCopie)
                If FL_BOLLO_ESENTE = "1" Then
                    varContrattoEsente = "1"
                    varNumeroPagine = "2"
                    importobollo = "0,00"
                End If

                'varImpostaDiBollo = importobollo
                varImpostaDiBollo = "0,00"

                testoXML &= "<loc:Importi>" & vbCrLf _
                        & "<loc:Imposte>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf _
                        & "<loc:ImpostaDiBollo>" & varImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf _
                        & "</loc:Imposte>" & vbCrLf _
                        & "<loc:Sanzioni>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varSanzImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf _
                        & "<loc:ImpostaDiBollo>" & varSanzImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf _
                        & "</loc:Sanzioni>" & vbCrLf _
                        & "<loc:Interessi>" & Format(TotaleInteressi, "0.00") & "</loc:Interessi>" & vbCrLf _
                        & "</loc:Importi>" & vbCrLf

                varTotSanzioni = CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo)

                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,IMPOSTA_REGISTRO = " & insDbValue(varImpostaDiRegistro, True) _
                        & " ,IMPOSTA_BOLLO                = " & insDbValue(varImpostaDiBollo, True) _
                        & " ,SANZIONE_IMP_REGISTRO        = " & insDbValue(varSanzImpostaDiRegistro, True) _
                        & " ,SANZIONE_IMP_BOLLO           = " & insDbValue(varSanzImpostaDiBollo, True) _
                        & " ,TOT_INTERESSI                = " & insDbValue(TotaleInteressi, True)


                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                testoXML &= "<loc:AdempSucc>" & vbCrLf _
                     & "<loc:TipologiaAdempimento>" & varTipoAdempim & "</loc:TipologiaAdempimento>" & vbCrLf

                Dim dataCessione As String = ""
                If varTipoAdempim = "3" Then
                    varSubentro = "1"
                    'If varTipoContratto = "L1" Then
                    '    cmd.CommandText = "select * from domande_bando_vsa where id_motivo_domanda in (1,6) and fl_autorizzazione=1 and contratto_num='" & varCodContratto & "'"
                    '    myReaderT = cmd.ExecuteReader()
                    '    If myReaderT.Read Then
                    '        dataCessione = IfNull(myReaderT("data_autorizzazione"), "")
                    '    End If
                    '    myReaderT.Close()
                    'Else
                    cmd.CommandText = "select * from siscom_mi.RAPPORTI_UTENZA_CESSIONI where id_Contratto=" & IdContratto & " order by data_Cessione desc"
                    myReaderT = cmd.ExecuteReader()
                    If myReaderT.Read Then
                        dataCessione = IfNull(myReaderT("data_cessione"), "")
                    End If
                    myReaderT.Close()
                    'End If
                End If

                Select Case varTipoAdempim
                    Case "1"
                        testoXML &= "<loc:Annualita>" & Format(Now, "yyyy") & "</loc:Annualita>" & vbCrLf
                    Case "2"
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(data_riconsegna), "/", "") & "</loc:DataFine>" & vbCrLf
                    Case "3"
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(dataCessione), "/", "") & "</loc:DataFine>" & vbCrLf
                    Case Else
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(data_riconsegna), "/", "") & "</loc:DataFine>" & vbCrLf
                End Select

                varUfficioTerritoriale = codUfficio
                Dim dataFineAdempSucc As String = ""
                If dataCessione = "" Then
                    dataFineAdempSucc = data_riconsegna
                End If

                testoXML &= "<loc:Registrazione>" & vbCrLf _
                & "<loc:UfficioDiRegistrazione>" & varUfficioTerritoriale & "</loc:UfficioDiRegistrazione>" & vbCrLf _
                & "<loc:Anno>" & varAnnoRegistr & "</loc:Anno>" & vbCrLf _
                & "<loc:Serie>" & varSerieRegistr & "</loc:Serie>" & vbCrLf _
                & "<loc:NumeroRegistrazione>" & varNumRegistr & "</loc:NumeroRegistrazione>" & vbCrLf _
                & "</loc:Registrazione>" & vbCrLf _
                & "</loc:AdempSucc>" & vbCrLf

                totImporti = CDec(varImpostaDiRegistro) + CDec(varImpostaDiBollo) + CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo) + CDec(TotaleInteressi)

                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,TIPOLOGIA_ADEMPIMENTO= " & insDbValue(varTipoAdempim, False) _
                         & " ,ANNUALITA = " & insDbValue(Format(Now, "yyyy"), False) _
                         & " ,DATA_FINE = " & insDbValue(dataFineAdempSucc, True) _
                         & " ,UFFICIO_REGISTRAZIONE= " & insDbValue(varUfficioTerritoriale, True) _
                         & " ,ANNO_REGISTRAZIONE= " & insDbValue(varAnnoRegistr, True) _
                         & " ,SERIE_REGISTRAZIONE= " & insDbValue(varSerieRegistr, True) _
                         & " ,NUMERO_REGISTRAZIONE= " & insDbValue(varNumRegistr, True)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                'If varContrattoEsente = "1" Then
                '    testoXML &= "<loc:ContrattoEsente>" & varContrattoEsente & "</loc:ContrattoEsente>" & vbCrLf
                'End If
                varImpegnoATrasmettere = "<loc:ImpegnoATrasmettere>" & vbCrLf _
                                         & " <reg:CFintermediario>" & varCFintermediario & "</reg:CFintermediario>" & vbCrLf _
                                          & "<reg:ImpegnoATrasmettere>1</reg:ImpegnoATrasmettere>" & vbCrLf _
                                          & " <reg:DataImpegno>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</reg:DataImpegno>" & vbCrLf _
                                         & " <reg:FirmaIntermediario>1</reg:FirmaIntermediario>" & vbCrLf _
                                       & "</loc:ImpegnoATrasmettere>" & vbCrLf

                testoXML &= varImpegnoATrasmettere & "</loc:Frontespizio>" & vbCrLf

                'COME DA RICHIESTA IN PRESENZA DI SUBENTRO NON RIPORTARE LE INFO DEL NUOVO INTESTATARIO

                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,CF_INTERMEDIARIO = " & insDbValue(varCFintermediario, True) _
                        & " ,IMPEGNO_A_TRASMETTERE        = 1" _
                        & " ,DATA_IMPEGNO                 = " & insDbValue(dataInvio, True) _
                        & " ,FIRMA_INTERMEDIARIO          = " & insDbValue(varFirmaIntermediario, False)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                Dim cFisc As String = ""
                If varSubentro = "1" Then

                    testoXML &= "<loc:Soggetti>" & vbCrLf _
                            & "<loc:PrimoModulo>" & vbCrLf
                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='EXINTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                    Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                    Dim dtAnagr As New Data.DataTable
                    da.Fill(dtAnagr)
                    da.Dispose()
                    If dtAnagr.Rows.Count > 0 Then
                        For Each rowAnagr As Data.DataRow In dtAnagr.Rows
                            varContatoreSoggetti = varContatoreSoggetti + 1

                            If IfNull(rowAnagr("PARTITA_IVA"), "") <> "" Then
                                cFisc = IfNull(rowAnagr("PARTITA_IVA"), "")
                                persGiuridica = True
                            Else
                                cFisc = IfNull(rowAnagr("COD_FISCALE"), "")
                                persGiuridica = False
                            End If

                            testoXML &= "<loc:Conduttore>" & vbCrLf _
                                    & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                    & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                                    & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                            cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr.Item("COD_FISCALE"), ""), 12, 4) & "'"
                            myReaderT = cmd.ExecuteReader()
                            If myReaderT.Read Then
                                varComuneNascita = IfNull(myReaderT("NOME"), "")
                                varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                            End If
                            myReaderT.Close()

                            If persGiuridica = False Then
                                testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                    & "<sc:Cognome>" & IfNull(rowAnagr("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                    & "<sc:Nome>" & IfNull(rowAnagr("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                    & "<sc:Sesso>" & IfNull(rowAnagr("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                    & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                    & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                                If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                    varProvinciaNascita = "EE"
                                End If
                                testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                                testoXML &= "</loc:PersoneFisiche>" & vbCrLf
                                testoXML &= "<loc:Cedente>1</loc:Cedente>" & vbCrLf _
                                  & "</loc:Conduttore>" & vbCrLf
                            Else
                                testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Denominazione>" & IfNull(rowAnagr("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Cedente>1</loc:Cedente>" & vbCrLf _
                                    & "</loc:Conduttore>" & vbCrLf
                            End If

                            '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                            queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE   = " & insDbValue("00" & varContatoreSoggetti, True) _
                            & " ,COD_FISCALE_CONDUTTORE       = " & insDbValue(cFisc, True) _
                            & " ,SOGGETTIVITA_IVA_CONDUTTORE  = " & insDbValue(varSoggettivitaIVA, False) _
                            & " ,COGNOME_CONDUTTORE           = " & insDbValue(rowAnagr("COGNOME").ToString, True) _
                            & " ,NOME_CONDUTTORE              = " & insDbValue(rowAnagr("NOME").ToString, True) _
                            & " ,DENOMINAZIONE_CONDUTTORE     = " & insDbValue(rowAnagr("RAGIONE_SOCIALE").ToString, True) _
                            & " ,SESSO_CONDUTTORE             = " & insDbValue(rowAnagr("SESSO").ToString, True) _
                            & " ,DATA_NASCITA_CONDUTTORE      = " & insDbValue(rowAnagr("DATA_NASCITA").ToString, True) _
                            & " ,COMUNE_NASCITA_CONDUTTORE    = " & insDbValue(varComuneNascita, True) _
                            & " ,PROVINCIA_NASCITA_CONDUTTORE = " & insDbValue(varProvinciaNascita, True)

                            '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI
                        Next
                    End If

                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='INTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                    Dim da2 As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                    Dim dtAnagr2 As New Data.DataTable
                    da2.Fill(dtAnagr2)
                    da2.Dispose()
                    If dtAnagr2.Rows.Count > 0 Then
                        For Each rowAnagr2 As Data.DataRow In dtAnagr2.Rows
                            varContatoreSoggetti = varContatoreSoggetti + 1
                            If IfNull(rowAnagr2("PARTITA_IVA"), "") <> "" Then
                                cFisc = IfNull(rowAnagr2("PARTITA_IVA"), "")
                                persGiuridica = True
                            Else
                                cFisc = IfNull(rowAnagr2("COD_FISCALE"), "")
                                persGiuridica = False
                            End If
                            testoXML &= "<loc:Conduttore>" & vbCrLf _
                                    & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                    & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                                    & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                            cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr2.Item("COD_FISCALE"), ""), 12, 4) & "'"
                            myReaderT = cmd.ExecuteReader()
                            If myReaderT.Read Then
                                varComuneNascita = IfNull(myReaderT("NOME"), "")
                                varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                            End If
                            myReaderT.Close()

                            If persGiuridica = False Then
                                testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                    & "<sc:Cognome>" & IfNull(rowAnagr2("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                    & "<sc:Nome>" & IfNull(rowAnagr2("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                    & "<sc:Sesso>" & IfNull(rowAnagr2("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                    & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr2("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                    & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                                If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                    varProvinciaNascita = "EE"
                                End If
                                testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                                testoXML &= "</loc:PersoneFisiche>" & vbCrLf
                                testoXML &= "<loc:Cedente>2</loc:Cedente>" & vbCrLf _
                                  & "</loc:Conduttore>" & vbCrLf
                            Else
                                testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Denominazione>" & IfNull(rowAnagr2("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Cedente>2</loc:Cedente>" & vbCrLf _
                                    & "</loc:Conduttore>" & vbCrLf
                            End If

                            '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                            queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE_2   = " & insDbValue("00" & varContatoreSoggetti, True) _
                            & " ,COD_FISCALE_CONDUTTORE_2       = " & insDbValue(cFisc, True) _
                            & " ,SOGGETTIVITA_IVA_CONDUTTORE_2  = " & insDbValue(varSoggettivitaIVA, False) _
                            & " ,COGNOME_CONDUTTORE_2           = " & insDbValue(rowAnagr2("COGNOME").ToString, True) _
                            & " ,NOME_CONDUTTORE_2              = " & insDbValue(rowAnagr2("NOME").ToString, True) _
                            & " ,DENOMINAZIONE_CONDUTTORE_2     = " & insDbValue(rowAnagr2("RAGIONE_SOCIALE").ToString, True) _
                            & " ,SESSO_CONDUTTORE_2             = " & insDbValue(rowAnagr2("SESSO").ToString, True) _
                            & " ,DATA_NASCITA_CONDUTTORE_2      = " & insDbValue(rowAnagr2("DATA_NASCITA").ToString, True) _
                            & " ,COMUNE_NASCITA_CONDUTTORE_2    = " & insDbValue(varComuneNascita, True) _
                            & " ,PROVINCIA_NASCITA_CONDUTTORE_2 = " & insDbValue(varProvinciaNascita, True)

                            '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                        Next
                    End If
                    testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                        & "</loc:Soggetti>" & vbCrLf
                End If
                'COME DA RICHIESTA IN PRESENZA DI SUBENTRO NON RIPORTARE LE INFO DEL NUOVO INTESTATARIO


                'testoXML &= "<loc:Immobili>" & vbCrLf _
                '    & "<loc:PrimoModulo>" & vbCrLf

                ''Dim idUnita As Long = 0
                'Dim categCatast As String = ""
                'cmd.CommandText = "SELECT edifici.id_complesso as complesso,edifici.denominazione as denominazioneedificio,rapporti_utenza.id_domanda,rapporti_utenza.cod_contratto,rapporti_utenza.descr_dest_uso,RAPPORTI_UTENZA.DEST_USO,rapporti_utenza.data_stipula,rapporti_utenza.cod_ufficio_reg,RAPPORTI_UTENZA.MESI_DISDETTA,rapporti_utenza.durata_anni,rapporti_utenza.data_decorrenza,rapporti_utenza.data_scadenza,rapporti_utenza.imp_canone_iniziale,rapporti_utenza.imp_deposito_cauz,rapporti_utenza.durata_rinnovo,rapporti_utenza.data_scadenza_rinnovo,rapporti_utenza.data_delibera,rapporti_utenza.delibera,rapporti_utenza.nro_rate,rapporti_utenza.perc_istat,unita_contrattuale.*,comuni_nazioni.cod as ""cod_catastale"",comuni_nazioni.nome as ""comune"",comuni_nazioni.sigla from siscom_MI.rapporti_utenza,comuni_nazioni,siscom_mi.UNITA_CONTRATTuale,SISCOM_MI.edifici where edifici.id=unita_contrattuale.id_edificio and rapporti_utenza.id=unita_contrattuale.id_contratto and comuni_nazioni.cod=unita_contrattuale.cod_comune and id_CONTRATTO=" & IdContratto & " order by id_unita_principale desc"
                'Dim daImm As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                'Dim dtImm As New Data.DataTable
                'daImm.Fill(dtImm)
                'daImm.Dispose()

                'If dtImm.Rows.Count > 0 Then
                '    For Each rowImm As Data.DataRow In dtImm.Rows
                '        If IfNull(rowImm.Item("ID_UNITA_PRINCIPALE"), 0) <> 0 Then
                '            varTipoImmobile = "2"
                '        Else
                '            varTipoImmobile = "1"
                '        End If
                '        varContatoreImmobili = varContatoreImmobili + 1

                '        testoXML &= "<loc:Immobile>" & vbCrLf _
                '                & "<loc:NumeroProgressivoImmobile>00" & varContatoreImmobili & "</loc:NumeroProgressivoImmobile>" & vbCrLf _
                '                & "<loc:TipologiaImmobile>" & varTipoImmobile & "</loc:TipologiaImmobile>" & vbCrLf _
                '                & "<loc:CodiceComuneCatastale>" & IfNull(rowImm.Item("cod_catastale"), "") & "</loc:CodiceComuneCatastale>" & vbCrLf _
                '                & "<loc:TipoCatasto>" & varTipoCatasto & "</loc:TipoCatasto>" & vbCrLf _
                '                & "<loc:PorzioneImmobile>" & varPorzioneImmobile & "</loc:PorzioneImmobile>" & vbCrLf

                '        If Mid(IfNull(rowImm.Item("sezione"), "   "), 1, 3) <> "   " Then
                '            testoXML &= "<loc:SezioneUrbana>" & Mid(IfNull(rowImm.Item("sezione"), "   "), 1, 3) & "</loc:SezioneUrbana>" & vbCrLf
                '        End If

                '        If varTipoImmobile <> "2" Then
                '            testoXML &= "<loc:DatiCatastali>" & vbCrLf _
                '                & "<reg:Foglio>" & IfNull(rowImm.Item("foglio"), "") & "</reg:Foglio>" & vbCrLf _
                '                & "<reg:Particella>" & IfNull(rowImm.Item("NUMERO"), "") & "</reg:Particella>" & vbCrLf _
                '                & "<reg:Particella_Denominatore>" & Mid(IfNull(rowImm.Item("NUMERO"), "     "), 1, 5) & "</reg:Particella_Denominatore>" & vbCrLf

                '            If Mid(IfNull(rowImm.Item("sub"), "    "), 1, 4) <> "    " Then
                '                testoXML &= "<reg:Subalterno>" & Mid(IfNull(rowImm.Item("sub"), "    "), 1, 4) & "</reg:Subalterno>" & vbCrLf
                '            End If

                '            testoXML &= "</loc:DatiCatastali>" & vbCrLf
                '        End If

                '        testoXML &= "<loc:Comune>" & IfNull(rowImm.Item("comune"), "") & "</loc:Comune>" & vbCrLf _
                '            & "<loc:Provincia>" & IfNull(rowImm.Item("sigla"), "") & "</loc:Provincia>" & vbCrLf

                '        If IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "" And IfNull(rowImm.Item("cod_categoria_catastale"), "") <> "000" Then
                '            If Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1) = "0" Then
                '                categCatast = Replace(IfNull(rowImm.Item("cod_categoria_catastale"), ""), Mid(IfNull(rowImm.Item("cod_categoria_catastale"), ""), 2, 1), "")
                '            End If
                '            testoXML &= "<loc:CategoriaCatastale>" & categCatast & "</loc:CategoriaCatastale>" & vbCrLf
                '        End If
                '        If IfNull(rowImm.Item("rendita"), 0) <> 0 Then
                '            testoXML &= "<loc:RenditaCatastale>" & IfNull(rowImm.Item("rendita"), "") & "</loc:RenditaCatastale>" & vbCrLf
                '        End If

                '        testoXML &= "<loc:TipologiaIndirizzo>" & RicavaVial(IfNull(rowImm.Item("indirizzo"), "")) & "</loc:TipologiaIndirizzo>" & vbCrLf _
                '            & "<loc:Indirizzo>" & IfNull(rowImm.Item("indirizzo"), "") & "</loc:Indirizzo>" & vbCrLf _
                '            & "<loc:NumCivico>" & IfNull(rowImm.Item("civico"), "") & "</loc:NumCivico>" & vbCrLf _
                '            & "</loc:Immobile>" & vbCrLf
                '    Next
                'End If
                'testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                '    & "</loc:Immobili>" & vbCrLf _
                '    & "<loc:Relazioni>" & vbCrLf _
                '    & "<loc:PrimoModulo>" & vbCrLf

                'varContatoreImmobili = 0

                'For Each rowRelaz As Data.DataRow In dtImm.Rows
                '    varContatoreImmobili = varContatoreImmobili + 1

                '    cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_IMMOBILIARI,SISCOM_MI.IDENTIFICATIVI_CATASTALI WHERE IDENTIFICATIVI_CATASTALI.ID(+)=UNITA_IMMOBILIARI.ID_CATASTALE AND UNITA_IMMOBILIARI.ID=" & IfNull(rowRelaz.Item("ID_UNITA"), 0)
                '    myReaderT = cmd.ExecuteReader()
                '    If myReaderT.Read Then
                '        varPercentualePossesso = Mid(IfNull(rowRelaz.Item("PERC_POSSESSO"), "0"), 1, 3)
                '    End If
                '    myReaderT.Close()

                '    testoXML &= "<loc:LocazioneUsoAbitativo>" & vbCrLf _
                '       & "<loc:ImmobileNumero>00" & varContatoreImmobili & "</loc:ImmobileNumero>" & vbCrLf _
                '       & "<loc:LocatoreNumero>001</loc:LocatoreNumero>" & vbCrLf _
                '       & "<loc:PercentualePossesso>" & varPercentualePossesso & "</loc:PercentualePossesso>" & vbCrLf _
                '       & "<loc:Cedolare>N</loc:Cedolare>" & vbCrLf _
                '       & "</loc:LocazioneUsoAbitativo>" & vbCrLf
                'Next

                'testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                '       & "</loc:Relazioni>" & vbCrLf _
                '       & "</loc:Documento>" & vbCrLf
                testoXML &= "</loc:Documento>" & vbCrLf
            End If

            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
            End If

            Return testoXML

        End Function

        Public Function GetQueryIN1000(ByVal ValoriIN As String, ByVal CampoDB As String, Optional ByVal ValoreSplit As String = ",", Optional ByVal CondizioneIn As Boolean = True) As String
            Dim Condizione As String = "IN"
            If CondizioneIn = False Then
                Condizione = "NOT IN"
            End If
            GetQueryIN1000 = " ('INDICE', " & CampoDB & ") " & Condizione & " ("
            Dim PrimoValore As Boolean = True
            Dim ArraySelezionati() As String = Nothing
            ArraySelezionati = ValoriIN.Split(ValoreSplit)
            For i As Long = 0 To ArraySelezionati.Length - 1
                If PrimoValore Then
                    GetQueryIN1000 &= " ('INDICE', " & ArraySelezionati(i).ToString & ") "
                    PrimoValore = False
                Else
                    GetQueryIN1000 &= ", ('INDICE', " & ArraySelezionati(i).ToString & ") "
                End If
            Next
            GetQueryIN1000 &= ") "
        End Function

        Public Function ScriveXMLAdempSuccContr(ByVal IdContratto As Long, ByVal dataInvio As String, ByVal varContatoreDoc As Integer, ByRef totImporti As Decimal, ByVal varTipoAdempim As String, ByVal codUfficio As String, ByRef CanoneCorrente As Decimal, ByRef varImpostaDiRegistro As String, ByRef varTotSanzioni As Decimal, ByRef TotaleInteressi As Decimal, ByRef giorniDiff As Integer, ByVal DataRiferimento As String, ByRef queryInsert As String, ByRef idFornitura As Long) As String
            Dim testoXML As String = ""
            'Try
            Dim ConOpenNow As Boolean = False
            Dim bTrovato As Boolean = False
            Dim sStringaSql As String = ""
            Dim alertInfoMancante As Boolean = False

            Dim TipoContratto As String = ""

            '***** 0 Intestazione XML *****
            Dim varIntestazione As String = ""
            Dim varCodiceFornitura As String = "RLI12"

            Dim varTipoFornitore As String = "10"
            'Assume i valori:
            '1 - Soggetti che inviano le proprie dichiarazione.
            '10 - C.A.F. dipendenti e pensionati; C.A.F. imprese;
            'Societa' ed enti di cui all'art.3, comma 2 del DPR 322/98 (se tale societa' appartiene a un gruppo puo' trasmettere la propria dichiarazione e quelle delle aziende del gruppo);
            'Altri intermediari di cui all'art.3. comma 3 lett a), b), c) ed e) del DPR 322/98; Societa' degli Ordini di cui all' art. 3 Decr. Dir. 18/2/99;
            'Soggetto che trasmette le dichiarazioni per le quali l'impegno a trasmettere e' stato assunto da un professionista deceduto.
            Dim varInViaDiAccatastam As String = ""
            Dim varCodFiscFornitore As String = ""
            Dim varSpazioUtente As String = ""
            Dim varSpazioServTelem As String = ""
            Dim varUfficioTerritoriale As String = ""
            Dim varCodiceABI As String = ""
            Dim varCodiceCAB As String = ""
            Dim varCodiceCIN As String = ""
            Dim varNumContoCorrente As String = ""
            Dim varCodFiscTitolareCC As String = ""
            Dim varImportoDaVersare As String = "" '=??? ImportoBollo, ImportoRegistrazione, ImportoSanzioniRegistrazione, ImportoInteressi
            Dim ImportoRecesso As Decimal = 0
            Dim ImportoRegistrazione As Decimal = 0
            Dim varPdfBase64 As String = ""
            Dim durataRinnovo As Integer = 0
            totImporti = 0

            If OracleConn.State = Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=1"
            Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReader.Read Then
                ImportoRecesso = CDec(PuntiInVirgole(IfNull(myReader("valore"), "")))
            End If
            myReader.Close()

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=6"
            myReader = cmd.ExecuteReader()
            If myReader.Read Then
                ImportoRegistrazione = CDec(PuntiInVirgole(IfNull(myReader("valore"), "")))
            End If
            myReader.Close()

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=10"
            Dim myReaderB As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB.Read Then
                varCodFiscFornitore = IfNull(myReaderB("valore"), "")
            End If
            myReaderB.Close()

            '***** 1 Frontespizio *****
            Dim varIDProdottoSw As String = ""
            Dim varNumModuliCompilati As String = ""
            Dim varIDcontratto As String = ""

            '***** 1.1 Richiedente (persona fisica o giuridica) *****
            Dim varCfRichiedente As String = ""
            Dim varNome As String = ""
            Dim varCognomeRich As String = ""

            Dim varNomeCond As String = ""
            Dim varCognomeCond As String = ""
            Dim varCodFiscaleCond As String = ""

            Dim varCodFiscaleRappr As String = ""
            Dim varCognomeRappr As String = ""
            Dim varNomeRappr As String = ""
            Dim varCodiceCarica As String = "1"
            'Può assumere uno dei seguenti valori:
            '1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15

            Dim varFirma As String = "1"
            Dim varTipoRichiedente As String = "1" '1: parte del contratto; 2:mediatore del contratto 
            Dim varSubentro As String = "0"

            Dim varTipoContratto As String = ""
            'LEGENDA TIPI CONTRATTO:
            'L1 = Locazione di immobile ad uso abitativo; (VALIDO)
            'L2 = Locazione agevolata di immobile ad uso abitativo; (VALIDO)
            'L3 = Locazione di immobile ad uso abitativo (contratto soggetto ad IVA); 
            'L4 = Locazione finanziaria di immobile ad uso abitativo;
            'S1 = Locazione di immobile ad uso diverso dall'abitativo; (VALIDO)
            'S2 = Locazione di immobile ad uso diverso dall'abitativo con locatore soggetto ad IVA; 
            'S3 = Locazione Finanziaria di immobile ad uso diverso dall'abitativo; 
            'T1 = Affitto di fondo rustico; 
            'T2 = Affitto di fondo rustico agevolato; 
            'T3 = Affitto di terreni ed aree non edificabili, cave e torbiere; 
            'T4 = Affitto di terreni edificabili o non edificabili destinati a parcheggio (contratto assoggettato ad IVA)

            Dim varPagamInteraDurataContr As String = "" '= FLAG. 
            'La casella va barrata se si tratta di una locazione di un immobile urbano di durata pluriennale e se il pagamento della relativa imposta di registro viene
            'versata per l'intero periodo, ottenendo quindi uno sconto di imposta, va barrata la casella anche se trattasi di proroga.
            'Nel caso di prima registrazione può essere 
            'presente solo per tipologia di contratto = L1, L2, L3, S1, S2, T1, T2, T3, T4.
            'Nel caso di prima registrazione è obbligatorio per tipologia di contratto = T1, T2, T3, T4 e per la
            'tipologia contratto L1, L2, L3, S1, S2 se la durata del contratto (data fine – data inizio) è minore o uguale a 365 giorni 
            '(in assenza di durata non è obbligatorio). 
            'Nel caso di adempimenti successivi può essere presente solo se tipologia di adempimento è uguale a 2.

            Dim varEventiEccezionali As String = "0" 'La casella va barrata dai contribuenti che hanno diritto alle agevolazioni fiscali a seguito di calamità naturali o eventi eccezionali. 
            'Se barrata non devono essere presenti sanzioni ed interessi

            Dim varCasiParticolari As String = "" '= FLAG. (0 in caso di prima registrazione)
            'Questa casella va barrata se il contratto di locazione che si intende registrare prevede particolari clausole contrattuali. Va indicato il codice 1, se si prevede un canone diverso per il primo anno di locazione o più annualità.

            '***** 1.2 Importi *****
            'Dim CanoneCorrente As Decimal = 0
            '*********** 1.2.1 Imposte *****
            'Dim varImpostaDiRegistro As String = "0,00"
            Dim varImpostaDiBollo As String = "0"

            '*********** 1.2.2 Sanzioni *****
            Dim varSanzImpostaDiRegistro As String = "0"
            Dim varSanzImpostaDiBollo As String = "0"
            Dim varInteressi As New SortedDictionary(Of Integer, Double)
            varInteressi.Clear()
            Dim varInterImpostaDiBollo As String = "0"

            '***** 1.3 Registrazione *****
            Dim varNumProgressCanone As String = "00000001" 'Vale sempre 1

            '***** 1.3.1 Contratto *****
            Dim varDataInizio As String = ""
            Dim varDataFine As String = ""
            Dim varImportoCanone As String = "0,00"
            Dim varDataStipula As String = ""
            Dim varNumeroPagine As String = "" '(Fisso come prima?)
            Dim varNumeroCopie As String = "1" 'Indicare il numero di esemplari cartacei del contratto sottoscritti dalle parti (minimo uno).
            Dim varContrSoggettoIVA As String = "0" 'NO per il comune di Milano
            Dim varCondizioneSospensiva As String = "0"
            Dim varNumeroAllegatoA As String = "" 'Numero fogli o esemplari di scritture private, inventari (allegati al contratto)
            Dim varNumeroAllegatoB As String = "" 'Numero fogli o esemplari di ricevute e quietanze (allegati al contratto)
            Dim varNumeroAllegatoC As String = "" 'Numero fogli o esemplari di mappe, planimetrie e disegni (allegati al contratto)

            Dim varContrattoEsente As String = "" '1=esente bollo, 2= esente bollo e registro

            '***** 1.3.2 Garanzia ***** 'Se nel contratto di locazione e' presente una garanzia prestata da terzi indicare i codici fiscali dei garanti (almeno uno).
            Dim varTipologiaGaranzia As String = ""
            Dim varImportoGaranziaPrestataDaTerzi As String = ""
            Dim varCodiceFiscaleGarante As String = ""
            Dim varCodiceFiscaleSecondoGarante As String = ""

            '***** 1.3.3 Allegati *****
            'deve essere allegato il contratto da registrare.
            'L’allegazione è facoltativa in presenza contemporanea dei seguenti requisiti:
            '- Tipologia contratto: L1 o L2
            '- Contratto non soggetto a Iva;
            '- Assenza di allegati (Mappe, planimetrie, disegni,ecc....).
            '- massimo 3 Locatori persone fisiche e soggettività Iva non barrata
            '- massimo 3 Conduttori persone fisiche e soggettività Iva non barrata
            '- deve essere presente almeno un immobile con codice 1 (immobile principale).
            '- Gli altri immobili (max 3) devono avere codice 2 (pertinenza locata congiuntamente).
            '- Tipologia immobile: U = urbano.
            '- Rendita catastale presente
            Dim varTipoFile As String = ""
            Dim varNomeFile As String = ""
            Dim varDescrizioneFile As String = ""
            Dim varImmagineData As String = ""

            '***** 1.4 ImpegnoATrasmettere (riservato alla presentazione in via telematica) *****
            Dim varCFintermediario As String = ""
            Dim varImpegnoATrasmettere As String = ""
            Dim varDataImpegno As String = ""
            Dim varFirmaIntermediario As String = ""


            '***** 1.5 Soggetti *****
            '*********** 1.5.1 Locatore ***********
            Dim varContatoreLocatore As String = "001"
            Dim varSoggettIVALocat As String = "0"
            Dim varDenominazione As String = ""


            '*********** 1.5.2 Conduttore ***********
            '(Variabili da intendersi per tutti i componenti del nucleo)
            Dim varContatoreSoggetti As Integer = 0
            Dim varSoggettivitaIVA As String = "0"
            Dim varSesso As String = ""
            Dim varCodFiscaleRich As String = ""
            Dim varDataNascita As String = ""
            Dim varComuneNascita As String = ""
            Dim varProvinciaNascita As String = ""
            Dim varCedente As String = "0"


            '***** 1.6 Immobili *****
            Dim varContatoreImmobili As Integer = 0

            Dim varTipoImmobile As String = ""
            'Assume i seguenti valori:
            '1 = Immobile principale
            '2 = Pertinenza locata congiuntamente all' immobile principale
            '3 = Pertinenza locata disgiuntamente all' immobile principale
            '• Se e' presente un rigo con valore 2, dovra' essere presente in uno dei righi precedenti un
            'immobile con valore 1 e dovra' essere preceduto da un rigo con valore 1 o 2.
            '• Se e' presente un rigo con valore 3, non e' necessario che sia presente un rigo con valore 1. 

            Dim vaCodComuneCatastale As String = ""

            Dim varTipoCatasto As String = "U" 'T/U (Terreni/Urbano) 
            'Dato obbligatorio se provincia e' diversa da "EE".
            'Se si tratta di prima registrazione se tipologia contratto = T1 o T2 e provincia(E) diversa da "EE", tipo catasto deve essere = T. 
            'Se si tratta di prima registrazione se tipologia contratto = da L1 A L4, e da S1 a S3 e provincia e' diversa da "EE" , tipo catasto deve essere = U

            Dim varPorzioneImmobile As String = "I" 'I/P (Intero/Porzione)

            Dim varSezioneUrbana As String = ""
            'Per gli immobili siti nelle sole zone in cui vige il sistema
            'tavolare indicare il codice “Comune catastale” presente nel documento catastale.


            Dim varFoglio As String = ""
            Dim varParticellaNumeratore As String = ""
            Dim varParticellaDenominatore As String = ""
            Dim varSubalterno As String = ""

            Dim varInViaDiAccattastam As String = "" 'Dato obbligatorio se provincia e' diversa da "EE" e in assenza di DatiCatastali

            Dim varComune As String = ""
            Dim varProvincia As String = ""
            Dim varCategCatastale As String = ""
            Dim varRenditaCatastale As String = ""
            Dim varTipoIndirizzo As String = ""
            Dim varIndirizzo As String = ""
            Dim varNumCivico As String = ""


            '***** 1.7 Relazioni *****
            'Questo quadro va compilato solo per le locazioni ad uso abitativo.
            'Se si tratta di prima registrazione il quadro può essere presente solo se tipologia contratto = L1 o L2 
            'e non sia stata barrata la casella “soggettivita' IVA” nella sezione dedicata ai locatori 
            'Nel caso di adempimenti successivi il quadro è obbligatorio se è presente il campo CedolareSecca; non può essere presente negli altri casi.

            Dim varImmobileNumero As Integer = 1
            'Se si tratta di prima registrazione il campo è obbigatorio.
            'Nel caso di adempimenti successivi non deve essere presente.
            'Devono essere presenti tutti gli immobili (e soltanto quelli) che hanno 
            'categoria catastale = gruppo A (+ relative pertinenze) e che abbiano una
            'rendita diversa da zero.
            'Non possono essere inseriti immobili con categoria catastale diversa da A.
            'Non possono essere presenti pertinenze con tipologia immobile = 3.
            'Il regime di tassazione scelto per l’immobile principale (tipologia immobile = 1) deve valere anche
            'per la relativa pertinenza (tipologia immobile = 2)

            Dim varLocatoreNumero As Integer = 1
            Dim varPercentualePossesso As String = "100"
            Dim varCedolare As String = "N"

            Dim FL_BOLLO_ESENTE As String = ""

            Dim varImportoBolloParam As String = ""
            'Dim varContatoreDoc As Integer = 0

            'If NuovoCodUfficio = 1 Then
            '    varIntestazione = "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "UTF-8" & Chr(34) & "?>" _
            '            & "<!--created with SEPA@Web (www.sistemiesoluzionisrl.it)-->" _
            '            & "<loc:Fornitura xmlns:sc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:common:v2" & Chr(34) & "xmlns:loc=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:loc:v1" & Chr(34) & " xmlns:reg=" & Chr(34) & "urn:www.agenziaentrate.gov.it:specificheTecniche:sco:reg:v1" & Chr(34) & " > " _
            '            & "<loc:Intestazione>" _
            '            & "<loc:CodiceFornitura>" & varCodiceFornitura & "</loc:CodiceFornitura>" _
            '            & "<loc:TipoFornitore>" & varTipoFornitore & "</loc:TipoFornitore>" _
            '            & "<loc:CodiceFiscaleFornitore>" & varCodFiscFornitore & "</loc:CodiceFiscaleFornitore>" _
            '            & "<loc:SpazioUtente>" & varSpazioUtente & "</loc:SpazioUtente>" _
            '            & "<loc:SpazioServizioTelematico>" & varSpazioServTelem & "</loc:SpazioServizioTelematico>" _
            '            & "</loc:Intestazione>" _
            '            & "<loc:DatiGenerali>" _
            '            & "<loc:UfficioCompetente>" _
            '            & "<loc:UfficioTerritoriale>" & varUfficioTerritoriale & "</loc:UfficioTerritoriale>" _
            '            & "</loc:UfficioCompetente>" _
            '            & "<loc:Versamento>" _
            '            & "<reg:CodiceABI>" & varCodiceABI & "</reg:CodiceABI>" _
            '            & "<reg:CodiceCAB>" & varCodiceCAB & "</reg:CodiceCAB>" _
            '            & "<reg:NumeroContoCorrente>" & varNumContoCorrente & "</reg:NumeroContoCorrente>" _
            '            & "<reg:CIN>" & varCodiceCIN & "</reg:CIN>" _
            '            & "<reg:CodiceFiscaleTitolareCC>" & varCodFiscTitolareCC & "</reg:CodiceFiscaleTitolareCC>" _
            '            & "</loc:Versamento>" _
            '            & "<loc:ImportoDaVersare>" & varImportoDaVersare & "</loc:ImportoDaVersare>" _
            '            & "</loc:DatiGenerali>"
            'End If

            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=42"
            Dim myReaderB2 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderB2.Read Then
                varCFintermediario = IfNull(myReaderB2("valore"), "")
            End If
            myReaderB2.Close()

            Dim LimiteTassaRegistrazione As String = 0
            cmd.CommandText = "select valore from siscom_MI.parametri_BOLLETTA where ID=6"
            Dim myReaderJ As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderJ.Read Then
                LimiteTassaRegistrazione = PuntiInVirgole(IfNull(myReaderJ("VALORE"), ""))
            End If
            myReaderJ.Close()
            cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=8"
            Dim myReaderP As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderP.Read Then
                varDenominazione = IfNull(myReaderP("valore"), "")
            End If
            myReaderP.Close()

            cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 18"
            Dim myReaderZ1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
            If myReaderZ1.Read Then
                varImportoBolloParam = IfNull(myReaderZ1("VALORE"), "0")
            End If
            myReaderZ1.Close()
            Dim persGiuridicaRich As Boolean = False
            Dim persGiuridica As Boolean = False
            Dim varCodContratto As String = ""
            If IdContratto <> 0 Then

                cmd.CommandText = "select * from siscom_mi.rapporti_utenza where id=" & IdContratto
                Dim myReaderRU As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderRU.Read Then
                    varCodContratto = IfNull(myReaderRU("COD_CONTRATTO"), "")
                    'If IfNull(myReaderRU("VERSAMENTO_TR"), "A") = "A" Then
                    '    SU = False
                    'Else
                    '    SU = True
                    'End If
                End If
                myReaderRU.Close()

                cmd.CommandText = "select * from siscom_mi.tab_interessi_legali order by anno desc"
                Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                Do While myReaderA.Read
                    varInteressi.Add(myReaderA("anno"), myReaderA("tasso"))
                Loop
                myReaderA.Close()

                cmd.CommandText = "select * from siscom_mi.PARAMETRI_RICHIEDENTE_XML"
                myReaderA = cmd.ExecuteReader()
                If myReaderA.Read Then
                    varTipoRichiedente = IfNull(myReaderA("ID_TIPO_RICH"), -1)
                    varCodFiscaleRich = IfNull(myReaderA("CODFISC_PIVA"), "")
                    varCognomeRich = IfNull(myReaderA("DENOMINAZIONE"), "")
                    varCodFiscaleRappr = IfNull(myReaderA("CODFISC_RAPP"), "")
                    varCognomeRappr = IfNull(myReaderA("COGNOME_RAPP"), "")
                    varNomeRappr = IfNull(myReaderA("NOME_RAPP"), "")
                    If varTipoRichiedente = "0" Or varTipoRichiedente = "2" Then
                        persGiuridicaRich = True
                    End If
                End If
                myReaderA.Close()

                If varTipoRichiedente = "1" Then
                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                    Dim myReader12345 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReader12345.Read Then
                        If IfNull(myReader12345("cod_fiscale"), "") = "" And IfNull(myReader12345("partita_iva"), "") <> "" Then
                            varCognomeRich = IfNull(myReader12345("ragione_sociale"), "")
                            varCodFiscaleRich = IfNull(myReader12345("partita_iva"), "")
                            persGiuridicaRich = True
                        Else
                            varCognomeRich = IfNull(myReader12345("cognome"), "")
                            varNome = IfNull(myReader12345("nome"), "")
                            varCodFiscaleRich = IfNull(myReader12345("cod_fiscale"), "")
                        End If
                    End If
                    myReader12345.Close()
                End If

                cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                Dim myReader1234 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader1234.Read Then
                    If IfNull(myReader1234("partita_iva"), "") <> "" Then
                        varCognomeCond = IfNull(myReader1234("ragione_sociale"), "")
                        varCodFiscaleCond = IfNull(myReader1234("partita_iva"), "")
                        persGiuridica = True
                    Else
                        varCognomeCond = IfNull(myReader1234("cognome"), "")
                        varNomeCond = IfNull(myReader1234("nome"), "")
                        varCodFiscaleCond = IfNull(myReader1234("cod_fiscale"), "")
                    End If
                End If
                myReader1234.Close()

                ''cmd.CommandText = "SELECT T_MOTIVO_DOMANDA_VSA.*,DOMANDE_BANDO_VSA.ID AS IDDOM,DOMANDE_BANDO_VSA.* FROM DOMANDE_BANDO_VSA,T_MOTIVO_DOMANDA_VSA,DICHIARAZIONI_VSA WHERE DICHIARAZIONI_VSA.ID=DOMANDE_BANDO_VSA.ID_DICHIARAZIONE AND DICHIARAZIONI_VSA.ID_STATO <> 2 AND DOMANDE_BANDO_VSA.FL_AUTORIZZAZIONE=1 and DOMANDE_BANDO_VSA.ID_MOTIVO_DOMANDA=1 AND DOMANDE_BANDO_VSA.ID_MOTIVO_DOMANDA = T_MOTIVO_DOMANDA_VSA.ID AND CONTRATTO_NUM='" & varCodContratto & "' ORDER BY DOMANDE_BANDO_VSA.DATA_PG DESC"
                ''myReader1234 = cmd.ExecuteReader()
                ''If myReader1234.Read Then
                ''    varSubentro = "1"
                ''End If
                ''myReader1234.Close()

                'Tag Documento (diverso per ogni contratto)
                'varContatoreDoc = varContatoreDoc + 1
                testoXML = "<loc:Documento identificativo=" & Chr(34) & Format(varContatoreDoc, "00000") & Chr(34) & "><loc:Frontespizio>" & vbCrLf _
                    & "<loc:IdentificativoProdSoftware>SEPA2009</loc:IdentificativoProdSoftware>" & vbCrLf _
                    & "<loc:NumeroModuliCompilati>4</loc:NumeroModuliCompilati>" & vbCrLf _
                    & "<loc:IDContratto>" & IdContratto & "</loc:IDContratto>" & vbCrLf _
                    & "<loc:Richiedente>" & vbCrLf _
                    & "<loc:CodiceFiscale>" & varCodFiscaleRich & "</loc:CodiceFiscale>" & vbCrLf

                If persGiuridicaRich = True Then
                    testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Denominazione>" & varCognomeRich.ToUpper & "</loc:Denominazione>" & vbCrLf _
                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                    & "<loc:Rappresentante>" & vbCrLf _
                    & "<loc:CodiceFiscaleRappresentante>" & varCodFiscaleRappr & "</loc:CodiceFiscaleRappresentante>" & vbCrLf _
                    & "<loc:CognomeRappresentante>" & varCognomeRappr & "</loc:CognomeRappresentante>" & vbCrLf _
                    & "<loc:NomeRappresentante>" & varNomeRappr & "</loc:NomeRappresentante>" & vbCrLf _
                    & "<loc:CodiceCarica>" & varCodiceCarica & "</loc:CodiceCarica>" & vbCrLf _
                    & "</loc:Rappresentante>" & vbCrLf
                Else
                    testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                    & "<loc:Cognome>" & varCognomeRich & "</loc:Cognome>" & vbCrLf _
                    & "<loc:Nome>" & varNome & "</loc:Nome>" & vbCrLf _
                    & "</loc:PersoneFisiche>" & vbCrLf
                End If
                If varTipoRichiedente = "0" Then
                    varTipoRichiedente = "1"
                End If
                If varTipoAdempim <> "6" Then
                    testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                        & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf _
                        & "</loc:Richiedente>" & vbCrLf
                Else
                    testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                        & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf _
                        & "</loc:Richiedente>" & vbCrLf
                End If


                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                cmd.CommandText = "SELECT siscom_mi.seq_DATI_GENERALI_RLI.nextval from dual"
                idFornitura = IfNull(cmd.ExecuteScalar, 0)

                cmd.CommandText = " INSERT INTO SISCOM_MI.DATI_GENERALI_RLI (ID) VALUES (" & idFornitura & ")"
                cmd.ExecuteNonQuery()

                queryInsert = "UPDATE SISCOM_MI.DATI_GENERALI_RLI " _
                    & " SET " _
                    & " NUM_IDENTIFICATIVO_DOC   = " & insDbValue(Format(varContatoreDoc, "00000"), True) & "" _
                    & " ,IDENTIFICATIVO_PRODOTTO_SW   = 'SEPA2009' " _
                    & " ,NUMERO_MODULO_COMPILATI      = 4 " _
                    & " ,ID_CONTRATTO                 = " & insDbValue(IdContratto, False) & " " _
                    & " ,COD_FISCALE_RICHIEDENTE      = " & insDbValue(varCodFiscaleRich, True) & " " _
                    & " ,DENOMINAZIONE_RICHIEDENTE    = " & insDbValue(varCognomeRich.ToUpper, True) & " " _
                    & " ,COD_FISCALE_RAPPRESENTANTE   = " & insDbValue(varCodFiscaleRappr, True) & " " _
                    & " ,COGNOME_RAPPRESENTANTE       = " & insDbValue(varCognomeRappr, True) & " " _
                    & " ,NOME_RAPPRESENTANTE          = " & insDbValue(varNomeRappr, True) & " " _
                    & " ,CODICE_CARICA                = " & insDbValue(varCodiceCarica, False) & " " _
                    & " ,FIRMA                        = " & insDbValue(varFirma, False) & " " _
                    & " ,TIPOLOGIA_RICHIEDENTE        = " & insDbValue(varTipoRichiedente, False) & " " _
                    & " ,SUBENTRO                     = " & insDbValue(varSubentro, False) & " "

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI


                Dim data_riferimento As String = ""
                Dim data_riconsegna As String = ""
                'Dim giorniDiff As Integer = 0
                Dim idUnita As Long = 0
                Dim provenienza As String = ""
                Dim Agevolato As String = ""
                Dim CanoneDaScrivere As String = ""
                Dim dataValuta As String = ""
                Dim SU As Boolean = True
                Dim aggiornamento_istat As Decimal = 0
                Dim AltriAdeguamenti As Decimal = 0
                Dim importo112 As Decimal = 0
                Dim varSerieRegistr As String = ""
                Dim varAnnoRegistr As String = ""
                Dim varNumRegistr As Integer = 0
                Dim varIDTelematico As String = ""
                Dim dataDecorrenzaRu As String = ""
                Dim dataScadenzaRu As String = ""

                cmd.CommandText = "SELECT (SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_MOTIVO=2 AND ID_CONTRATTO=RAPPORTI_UTENZA.ID) AS ISTAT,(SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_MOTIVO<>2 AND ID_CONTRATTO=RAPPORTI_UTENZA.ID) AS ADEGUAMENTO,RAPPORTI_UTENZA_PROSSIMA_BOL.PROSSIMA_BOLLETTA,TIPOLOGIA_CONTRATTO_LOCAZIONE.DESCRIZIONE AS ""TIPO_C"",TIPOLOGIA_CONTRATTO_LOCAZIONE.RIF_LEGISLATIVO ,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_tr_canone,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_conduttore,RAPPORTI_UTENZA.*,SISCOM_MI.GETSTATOCONTRATTO(RAPPORTI_UTENZA.ID) AS ""STATO"" FROM SISCOM_MI.RAPPORTI_UTENZA_PROSSIMA_BOL,SISCOM_MI.RAPPORTI_UTENZA,SISCOM_MI.TIPOLOGIA_CONTRATTO_LOCAZIONE WHERE RAPPORTI_UTENZA_PROSSIMA_BOL.ID_CONTRATTO(+)=RAPPORTI_UTENZA.ID AND TIPOLOGIA_CONTRATTO_LOCAZIONE.COD=RAPPORTI_UTENZA.COD_TIPOLOGIA_CONTR_LOC AND RAPPORTI_UTENZA.ID=" & IdContratto
                Dim myReaderT As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderT.Read Then
                    CanoneCorrente = IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0)
                    Select Case IfNull(myReaderT("versamento_tr"), "A")
                        Case "A"
                            varPagamInteraDurataContr = "0"
                        Case "U"
                            varPagamInteraDurataContr = "1"
                    End Select
                    'cmd.CommandText = "SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_CONTRATTO=" & IdContratto
                    'Dim myReaderX1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    'If myReaderX1.Read Then
                    '    CanoneCorrente = CanoneCorrente + IfNull(myReaderX1(0), 0)
                    'End If
                    'myReaderX1.Close()

                    TipoContratto = IfNull(myReaderT("PROVENIENZA_ASS"), "")
                    data_riconsegna = IfNull(myReaderT("DATA_SCADENZA_RINNOVO"), "")
                    durataRinnovo = IfNull(myReaderT("DURATA_RINNOVO"), 0)
                    If durataRinnovo > 0 Then
                        While Mid(data_riconsegna, 1, 4) <= Year(Now)
                            data_riconsegna = AggiustaData(DateAdd(DateInterval.Year, durataRinnovo, CDate(FormattaData(data_riconsegna))))
                        End While
                    End If
                    varSerieRegistr = IfNull(myReaderT("SERIE_REGISTRAZIONE"), "")
                    varAnnoRegistr = Mid(IfNull(myReaderT("DATA_REG"), ""), 1, 4)
                    varNumRegistr = CInt(IfNull(myReaderT("NUM_REGISTRAZIONE"), 0))
                    varIDTelematico = IfNull(myReaderT("REG_TELEMATICA"), "")
                    dataDecorrenzaRu = AggiustaData(DateAdd(DateInterval.Year, IfNull(myReaderT("DURATA_RINNOVO"), 0) * -1, CDate(FormattaData(data_riconsegna)))) 'IfNull(myReaderT("DATA_DECORRENZA"), "")
                    dataScadenzaRu = data_riconsegna 'IfNull(myReaderT("DATA_SCADENZA_RINNOVO"), "")
                    'varImpostaDiRegistro = Format((IfNull(myReaderT("perc_tr_canone"), 0) * CanoneCorrente) / 100, "0.00")

                    '28/05/2015 max
                    Dim NumeroGiorniMese As Integer = DateTime.DaysInMonth(CInt(Mid(DataRiferimento, 1, 4)), CInt(Mid(DataRiferimento, 5, 2)))
                    If IfNull(myReaderT("data_stipula"), "29991231") < IfNull(myReaderT("data_decorrenza_AE"), "29991231") And IfNull(myReaderT("data_decorrenza_AE"), "29991231") = IfNull(myReaderT("data_decorrenza"), "29991231") Then
                        If NumeroGiorniMese < CInt(Mid(IfNull(myReaderT("data_stipula"), "01"), 7, 2)) Then
                            data_riferimento = DataRiferimento & Format(NumeroGiorniMese, "00")
                        Else
                            data_riferimento = DataRiferimento & Mid(IfNull(myReaderT("data_stipula"), "01"), 7, 2)
                        End If
                    Else
                        If NumeroGiorniMese < CInt(Mid(IfNull(myReaderT("data_decorrenza_aE"), "01"), 7, 2)) Then
                            data_riferimento = DataRiferimento & Format(NumeroGiorniMese, "00")
                        Else
                            data_riferimento = DataRiferimento & Mid(IfNull(myReaderT("data_decorrenza_aE"), "01"), 7, 2)
                        End If
                    End If
                    varDataInizio = FormattaData(data_riferimento)
                    varDataFine = FormattaData(IfNull(myReaderT("data_scadenza"), ""))

                    If varTipoAdempim = "4" Then
                        data_riconsegna = IfNull(myReaderT("DATA_RICONSEGNA"), "")
                    End If

                    FL_BOLLO_ESENTE = IfNull(myReaderT("FL_BOLLO_ASSOLTO"), "0")

                    Agevolato = "N"
                    If IfNull(myReaderT("COD_TIPOLOGIA_CONTR_LOC"), "") = "L43198" And (IfNull(myReaderT("DEST_USO"), "") = "0" Or IfNull(myReaderT("DEST_USO"), "") = "P" Or IfNull(myReaderT("DEST_USO"), "") = "D" Or IfNull(myReaderT("DEST_USO"), "") = "V") Then
                        Agevolato = "S"
                    End If
                    If varTipoAdempim <> "6" Then
                        If Agevolato = "N" Then
                            CanoneDaScrivere = (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))
                            varImpostaDiRegistro = Format(((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2, "0.00")
                        Else
                            CanoneDaScrivere = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))))
                            varImpostaDiRegistro = Format((((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))) / 100) * 2, "0.00")
                        End If
                    End If

                    If SoluzioneUnica(CDbl(PuntiInVirgole((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))), CInt(Format(myReaderT("DURATA_RINNOVO"), "0")), IfNull(myReaderT("perc_tr_canone"), "2")) <= 67 Then
                        SU = True
                    Else
                        SU = False
                    End If

                    If SU = False Then
                        If Agevolato = "N" Then
                            CanoneDaScrivere = (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))
                            importo112 = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2
                        Else
                            CanoneDaScrivere = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))))
                            importo112 = (((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))) / 100) * 2
                        End If

                        If importo112 < 67 Then
                            importo112 = 67
                        End If


                        'tipopagamentoproroga = "P"
                    Else
                        importo112 = SoluzioneUnica(CDbl(IfNull(myReaderT("imp_CANONE_iniziale"), 0) + aggiornamento_istat + AltriAdeguamenti), CInt(myReaderT("DURATA_RINNOVO")), IfNull(myReaderT("PERC_TR_CANONE"), "0"))

                        If importo112 < 67 Then
                            importo112 = 67
                        End If


                        'tipopagamentoproroga = "T"
                    End If
                End If
                myReaderT.Close()

                varImportoCanone = Format(CanoneCorrente, "0.00")

                If Mid(varDataInizio, 1, 2) = "29" Then
                    If IsDate(varDataInizio) = False Then
                        varDataInizio = Replace(varDataInizio, "29", "28")
                    End If
                End If

                Select Case varTipoAdempim
                    Case "1"
                        dataValuta = CStr(DateAdd("d", 30, CDate(FormattaData(data_riferimento))))
                        'varImportoCanone = Format(CanoneDaScrivere, "0.00")
                    Case "2"
                        dataValuta = CStr(DateAdd("d", 30, CDate(FormattaData(data_riferimento))))
                        varImpostaDiRegistro = Format(Math.Round(importo112, 2), "0.00")
                    Case "6"
                        dataValuta = CStr(DateAdd("d", 30, CDate(FormattaData(data_riferimento))))

                    Case "4"
                        dataValuta = CStr(DateAdd("d", 30, CDate(FormattaData(data_riconsegna))))
                        varImpostaDiRegistro = Format(Math.Round(ImportoRecesso, 2), "0.00")
                End Select

                cmd.CommandText = "SELECT UNITA_IMMOBILIARI.ID FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE ID_CONTRATTO=" & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE IS NULL"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    idUnita = IfNull(myReaderT("ID"), 0)
                End If
                myReaderT.Close()

                If varTipoAdempim = "6" Then
                    cmd.CommandText = "select * from siscom_mi.RAPPORTI_UTENZA_CESSIONI where id_Contratto=" & IdContratto & " order by data_Cessione desc"
                    myReaderT = cmd.ExecuteReader()
                    If myReaderT.Read Then
                        varImpostaDiRegistro = "0,00" 'Format(IfNull(myReaderT("importo"), 0), "0.00")
                    End If
                    myReaderT.Close()
                End If
                cmd.CommandText = "SELECT * FROM SISCOM_MI.UNITA_ASSEGNATE WHERE ID_UNITA=" & idUnita & " ORDER BY ID_DOMANDA DESC"
                myReaderT = cmd.ExecuteReader()
                If myReaderT.Read Then
                    provenienza = IfNull(myReaderT("PROVENIENZA"), "")
                End If
                myReaderT.Close()

                Select Case TipoContratto
                    Case "6"
                        Select Case provenienza
                            Case "C"
                                TipoContratto = "61"
                            Case "P"
                                TipoContratto = "62"
                            Case "S"
                                TipoContratto = "63"
                            Case "D"
                                TipoContratto = "64"
                            Case "V"
                                TipoContratto = "65"
                            Case Else

                        End Select
                    Case "3"
                        Select Case provenienza
                            Case "B"
                                TipoContratto = "BOX"
                            Case "N"
                                TipoContratto = "NEGOZI"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                    Case "5"
                        Select Case provenienza
                            Case "A"
                                TipoContratto = "392ASS"
                            Case Else
                                'Response.Write("<script>win=window.open('../GestioneModelli/ModificaContratto.aspx?C=" & lblContratto.Text & "&T=" & TipoContratto & "&ID=" & lIdContratto & "&V=" & lIdConnessione & "&U=" & par.Cripta(CType(Tab_Registrazione1.FindControl("lblRegTot"), Label).Text) & "','Modifica','top=300,left=300,resizable=yes,scrollbars=yes');win.focus();</script>")
                        End Select
                End Select

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varTipoContratto = "S1"
                ElseIf TipoContratto = "62" Or TipoContratto = "64" Or TipoContratto = "65" Or Agevolato = "S" Then
                    varTipoContratto = "L2"
                Else
                    varTipoContratto = "L1"
                End If

                '& "<loc:EventiEccezionali>" & varEventiEccezionali & "</loc:EventiEccezionali>" & vbCrLf
                '& "<loc:CasiParticolari>" & varCasiParticolari & "</loc:CasiParticolari>" & vbCrLf

                ''gioniDiff = DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(FormattaData(dataInvio)))

                ''If gioniDiff >= 31 And gioniDiff <= 90 Then
                ''    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 12) / 100, "0.00")
                ''End If

                ''If gioniDiff >= 91 And gioniDiff <= 365 Then
                ''    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 15) / 100, "0.00")
                ''End If

                ''If gioniDiff >= 366 Then
                ''    varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 120) / 100, "0.00")
                ''End If

                If SU = True Then
                    cmd.CommandText = "update siscom_mi.rapporti_utenza set versamento_tr='U' where cod_contratto='" & IfNull(varCodContratto, "") & "'"
                Else
                    cmd.CommandText = "update siscom_mi.rapporti_utenza set versamento_tr='A' where cod_contratto='" & IfNull(varCodContratto, "") & "'"
                End If

                cmd.ExecuteNonQuery()

                Dim Giorni As Integer = 0
                Dim GiorniAnno As Integer = 0
                Dim dataPartenza As String = ""

                'Dim TotaleInteressi As Decimal = 0
                Dim TotalePeriodo As Decimal = 0
                Dim indice As Long = 0
                Dim tasso As Decimal = 0
                Dim DataFine As String = ""
                Dim DataInizio As String = ""

                varSanzImpostaDiRegistro = "0"
                TotaleInteressi = 0
                giorniDiff = 0
                varImpostaDiRegistro = Format(Math.Round(CDec(varImpostaDiRegistro), 0, MidpointRounding.AwayFromZero), "0.00")
                If AggiustaData(dataValuta) < dataInvio Then

                    'giorniDiff = DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(CStr(DateAdd("d", 30, CDate(FormattaData(data_riferimento)))))) 'DateDiff(DateInterval.Day, CDate(FormattaData(data_riferimento)), CDate(FormattaData(dataInvio)))
                    'giorniDiff = (CDate(FormattaData(dataInvio)) - CDate(CStr(DateAdd("d", 30, CDate(FormattaData(dataValuta)))))).Days
                    giorniDiff = (CDate(FormattaData(dataInvio)) - CDate(FormattaData(dataValuta))).Days

                    If giorniDiff > 0 Then
                        Select Case giorniDiff
                            Case Is < 15
                                varSanzImpostaDiRegistro = Format(((varImpostaDiRegistro * 0.1) / 100) * giorniDiff, "0.00")
                            Case Is <= 30
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 1.5) / 100, "0.00")
                            Case Is <= 90
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 1.67) / 100, "0.00")
                            Case Is <= 365
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 3.75) / 100, "0.00")
                            Case Is > 365
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 4.29) / 100, "0.00")
                        End Select
                    End If
                    TotaleInteressi = 0
                    If varSanzImpostaDiRegistro > 0 Then
                        'DataCalcolo = AggiustaData(dataInvio)
                        DataInizio = Format(DateAdd(DateInterval.Day, 1, CDate(dataValuta)), "yyyyMMdd")

                        Giorni = 0
                        GiorniAnno = 0
                        dataPartenza = DataInizio
                        TotaleInteressi = 0
                        TotalePeriodo = 0

                        For KK1 = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))

                            If KK1 = CInt(Mid(dataInvio, 1, 4)) Then
                                DataFine = FormattaData(dataInvio)
                            Else
                                DataFine = "31/12/" & KK1

                            End If

                            GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK1), CDate("31/12/" & KK1)) + 1

                            Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1

                            If KK1 < 1990 Then
                                tasso = 5
                            Else
                                If varInteressi.ContainsKey(KK1) = True Then
                                    tasso = varInteressi(KK1)
                                End If
                            End If

                            TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                            TotaleInteressi = TotaleInteressi + TotalePeriodo

                            dataPartenza = KK1 + 1 & "0101"
                        Next
                    Else
                        TotaleInteressi = 0
                        TotalePeriodo = 0
                    End If
                End If

                ''If varSanzImpostaDiRegistro > 0 Then
                ''    'DataCalcolo = AggiustaData(dataInvio)
                ''    DataInizio = Format(DateAdd(DateInterval.Day, 30, CDate(FormattaData(data_riferimento))), "yyyyMMdd")

                ''    Giorni = 0
                ''    GiorniAnno = 0
                ''    dataPartenza = DataInizio
                ''    TotaleInteressi = 0
                ''    TotalePeriodo = 0

                ''    For KK = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))
                ''        If KK = CInt(Mid(dataInvio, 1, 4)) Then
                ''            DataFine = FormattaData(dataInvio)
                ''        Else
                ''            DataFine = "31/12/" & KK
                ''        End If
                ''        GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK), CDate("31/12/" & KK)) + 1
                ''        Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1
                ''        If KK < 1990 Then
                ''            tasso = 5
                ''        Else
                ''            If varInteressi.ContainsKey(KK) = True Then
                ''                tasso = varInteressi(KK)
                ''            End If
                ''        End If
                ''        TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                ''        TotaleInteressi = TotaleInteressi + TotalePeriodo
                ''        dataPartenza = KK + 1 & "0101"
                ''    Next
                ''Else
                ''    TotaleInteressi = 0
                ''    TotalePeriodo = 0
                ''End If

                Dim importobollo As String = ""
                importobollo = varImportoBolloParam
                If TipoContratto = "6" Or TipoContratto = "61" Or TipoContratto = "62" Or TipoContratto = "62" Or TipoContratto = "12" Or TipoContratto = "1" Or TipoContratto = "ERPB" Or TipoContratto = "8" Or TipoContratto = "2" Or TipoContratto = "10" Or TipoContratto = "64" Or TipoContratto = "65" Then
                    varNumeroPagine = "5"
                    'importobollo = "80,00"
                End If

                If TipoContratto = "392ASS" Then
                    varNumeroPagine = "5"
                    'importobollo = "96,00"
                End If

                If TipoContratto = "3" Or TipoContratto = "BOX" Or TipoContratto = "NEGOZI" Or TipoContratto = "5" Then
                    varNumeroPagine = "6"
                    'importobollo = "96,00"
                End If

                importobollo = Ceiling((CDec(varNumeroPagine) / 4)) * CDec(PuntiInVirgole(importobollo)) * CDec(varNumeroCopie)
                If FL_BOLLO_ESENTE = "1" Then
                    varContrattoEsente = "1"
                    varNumeroPagine = "2"
                    importobollo = "0,00"
                End If

                'varImpostaDiBollo = importobollo
                varImpostaDiBollo = "0"


                testoXML &= "<loc:TipologiaContratto>" & varTipoContratto & "</loc:TipologiaContratto>" & vbCrLf
                If varTipoAdempim = 1 Then

                    testoXML &= "<loc:DataInizio>" & Replace(FormattaData(data_riferimento), "/", "") & "</loc:DataInizio>" & vbCrLf _
                       & "<loc:DataFine>" & Replace(FormattaData(Year(Now) + 1 & Mid(data_riferimento, 5, 6)), "/", "") & "</loc:DataFine>" & vbCrLf _
                       & "<loc:ImportoCanone>" & varImportoCanone & "</loc:ImportoCanone>" & vbCrLf
                End If
                If varTipoAdempim = 2 Then
                    testoXML &= "<loc:DataInizio>" & Replace(FormattaData(dataDecorrenzaRu), "/", "") & "</loc:DataInizio>" & vbCrLf _
                       & "<loc:DataFine>" & Replace(FormattaData(dataScadenzaRu), "/", "") & "</loc:DataFine>" & vbCrLf _
                       & "<loc:ImportoCanone>" & varImportoCanone & "</loc:ImportoCanone>" & vbCrLf

                    If varPagamInteraDurataContr = 1 Then
                        testoXML &= "<loc:PagamentoInteraDurataContratto>" & varPagamInteraDurataContr & "</loc:PagamentoInteraDurataContratto>" & vbCrLf
                    End If
                End If

                testoXML &= "<loc:Importi>" & vbCrLf _
                        & "<loc:Imposte>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf
                If varImpostaDiBollo <> "0" Then
                    testoXML &= "<loc:ImpostaDiBollo>" & varImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf
                End If
                testoXML &= "</loc:Imposte>" & vbCrLf

                If varSanzImpostaDiRegistro <> "0" Then
                    testoXML &= "<loc:Sanzioni>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & varSanzImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf
                    If varSanzImpostaDiBollo <> "0" Then
                        testoXML &= "<loc:ImpostaDiBollo>" & varSanzImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf
                    End If
                    testoXML &= "</loc:Sanzioni>" & vbCrLf
                End If

                If TotaleInteressi <> 0 Then
                    testoXML &= "<loc:Interessi>" & vbCrLf _
                        & "<loc:ImpostaDiRegistro>" & Format(TotaleInteressi, "0.00") & "</loc:ImpostaDiRegistro>" & vbCrLf
                    If varInterImpostaDiBollo <> "0" Then
                        testoXML &= "<loc:ImpostaDiBollo>" & varInterImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf
                    End If
                    testoXML &= "</loc:Interessi>" & vbCrLf
                End If
                testoXML &= "</loc:Importi>" & vbCrLf


                varTotSanzioni = CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo)

                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,IMPOSTA_REGISTRO = " & insDbValue(varImpostaDiRegistro, True) _
                        & " ,IMPOSTA_BOLLO                = " & insDbValue(varImpostaDiBollo, True) _
                        & " ,SANZIONE_IMP_REGISTRO        = " & insDbValue(varSanzImpostaDiRegistro, True) _
                        & " ,SANZIONE_IMP_BOLLO           = " & insDbValue(varSanzImpostaDiBollo, True) _
                        & " ,TOT_INTERESSI                = " & insDbValue(TotaleInteressi, True)


                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                testoXML &= "<loc:AdempSucc>" & vbCrLf _
                     & "<loc:TipologiaAdempimento>" & varTipoAdempim & "</loc:TipologiaAdempimento>" & vbCrLf

                If varTipoContratto = "L1" Or varTipoContratto = "L2" Then
                    testoXML &= "<loc:CedolareSecca>3</loc:CedolareSecca>" & vbCrLf
                End If

                Dim dataCessione As String = ""
                If varTipoAdempim = "6" Then
                    varSubentro = "1"
                    'If varTipoContratto = "L1" Then
                    '    cmd.CommandText = "select * from domande_bando_vsa where id_motivo_domanda in (1,6) and fl_autorizzazione=1 and contratto_num='" & varCodContratto & "'"
                    '    myReaderT = cmd.ExecuteReader()
                    '    If myReaderT.Read Then
                    '        dataCessione = IfNull(myReaderT("data_autorizzazione"), "")
                    '    End If
                    '    myReaderT.Close()
                    'Else
                    cmd.CommandText = "select * from siscom_mi.RAPPORTI_UTENZA_CESSIONI where id_Contratto=" & IdContratto & " order by data_Cessione desc"
                    myReaderT = cmd.ExecuteReader()
                    If myReaderT.Read Then
                        dataCessione = IfNull(myReaderT("data_cessione"), "")
                    End If
                    myReaderT.Close()
                    'End If
                End If

                Dim varTipoSubentro As String = ""
                If dataCessione <> "" Then
                    cmd.CommandText = "Select * from domande_bando_vsa where id_motivo_domanda In (1,6) And fl_autorizzazione=1 And contratto_num='" & varCodContratto & "'"
                    myReaderT = cmd.ExecuteReader()
                    If myReaderT.Read Then
                        If IfNull(myReaderT("id_causale_domanda"), "") = 8 Then
                            varTipoSubentro = "1"
                        Else
                            varTipoSubentro = "6"
                        End If
                    End If
                    myReaderT.Close()
                End If

                Select Case varTipoAdempim
                    Case "1"
                        testoXML &= "<loc:Annualita>" & Format(Now, "yyyy") & "</loc:Annualita>" & vbCrLf
                    Case "2"
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(data_riconsegna), "/", "") & "</loc:DataFine>" & vbCrLf
                    Case "6"
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(dataCessione), "/", "") & "</loc:DataFine>" & vbCrLf
                    Case Else
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(data_riconsegna), "/", "") & "</loc:DataFine>" & vbCrLf
                End Select

                varUfficioTerritoriale = codUfficio
                Dim dataFineAdempSucc As String = ""
                If dataCessione = "" Then
                    dataFineAdempSucc = data_riconsegna
                End If

                testoXML &= "<loc:Registrazione>" & vbCrLf _
                & "<loc:UfficioDiRegistrazione>" & varUfficioTerritoriale & "</loc:UfficioDiRegistrazione>" & vbCrLf _
                & "<loc:Anno>" & varAnnoRegistr & "</loc:Anno>" & vbCrLf _
                & "<loc:Serie>" & varSerieRegistr & "</loc:Serie>" & vbCrLf _
                & "<loc:NumeroRegistrazione>" & varNumRegistr & "</loc:NumeroRegistrazione>" & vbCrLf _
                & "</loc:Registrazione>" & vbCrLf

                If varTipoAdempim = 1 Then
                    If varTipoContratto = "L1" Or varTipoContratto = "L2" Then
                        If varSanzImpostaDiRegistro <> "0" Then
                            testoXML &= "<loc:TardivitaAnnualitaSuccessiva>2</loc:TardivitaAnnualitaSuccessiva>" & vbCrLf
                        End If
                    End If
                End If

                If varTipoContratto = "L1" Or varTipoContratto = "L2" Then
                    If varTipoAdempim = 2 Then
                        testoXML &= "<loc:TipologiaProroga>1</loc:TipologiaProroga>" & vbCrLf
                    End If
                End If

                If varTipoAdempim = 6 Then
                    testoXML &= "<loc:TipologiaSubentro>" & varTipoSubentro & "</loc:TipologiaSubentro>" & vbCrLf
                End If

                testoXML &= "</loc:AdempSucc>" & vbCrLf

                totImporti = CDec(varImpostaDiRegistro) + CDec(varImpostaDiBollo) + CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo) + CDec(TotaleInteressi)

                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,TIPOLOGIA_ADEMPIMENTO= " & insDbValue(varTipoAdempim, False) _
                         & " ,ANNUALITA = " & insDbValue(Format(Now, "yyyy"), False) _
                         & " ,DATA_FINE = " & insDbValue(dataFineAdempSucc, True) _
                         & " ,UFFICIO_REGISTRAZIONE= " & insDbValue(varUfficioTerritoriale, True) _
                         & " ,ANNO_REGISTRAZIONE= " & insDbValue(varAnnoRegistr, True) _
                         & " ,SERIE_REGISTRAZIONE= " & insDbValue(varSerieRegistr, True) _
                         & " ,NUMERO_REGISTRAZIONE= " & insDbValue(varNumRegistr, True)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI


                varImpegnoATrasmettere = "<loc:ImpegnoATrasmettere>" & vbCrLf _
                                         & " <reg:CFintermediario>" & varCFintermediario & "</reg:CFintermediario>" & vbCrLf _
                                          & "<reg:ImpegnoATrasmettere>1</reg:ImpegnoATrasmettere>" & vbCrLf _
                                          & " <reg:DataImpegno>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</reg:DataImpegno>" & vbCrLf _
                                         & " <reg:FirmaIntermediario>1</reg:FirmaIntermediario>" & vbCrLf _
                                        & "</loc:ImpegnoATrasmettere>" & vbCrLf _
                                        & " <loc:DataInvio>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</loc:DataInvio>" & vbCrLf

                testoXML &= varImpegnoATrasmettere & "</loc:Frontespizio>" & vbCrLf

                Dim cFisc As String = ""
                If varSubentro = "1" Then

                    testoXML &= "<loc:Soggetti>" & vbCrLf _
                            & "<loc:PrimoModulo>" & vbCrLf
                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='EXINTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                    Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                    Dim dtAnagr As New Data.DataTable
                    da.Fill(dtAnagr)
                    da.Dispose()
                    If dtAnagr.Rows.Count > 0 Then
                        For Each rowAnagr As Data.DataRow In dtAnagr.Rows
                            varContatoreSoggetti = varContatoreSoggetti + 1

                            If IfNull(rowAnagr("PARTITA_IVA"), "") <> "" Then
                                cFisc = IfNull(rowAnagr("PARTITA_IVA"), "")
                                persGiuridica = True
                            Else
                                cFisc = IfNull(rowAnagr("COD_FISCALE"), "")
                                persGiuridica = False
                            End If

                            testoXML &= "<loc:Conduttore>" & vbCrLf _
                                    & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                    & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                                    & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                            cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr.Item("COD_FISCALE"), ""), 12, 4) & "'"
                            myReaderT = cmd.ExecuteReader()
                            If myReaderT.Read Then
                                varComuneNascita = IfNull(myReaderT("NOME"), "")
                                varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                            End If
                            myReaderT.Close()

                            If persGiuridica = False Then
                                testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                    & "<sc:Cognome>" & IfNull(rowAnagr("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                    & "<sc:Nome>" & IfNull(rowAnagr("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                    & "<sc:Sesso>" & IfNull(rowAnagr("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                    & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                    & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                                If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                    varProvinciaNascita = "EE"
                                End If
                                testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                                testoXML &= "</loc:PersoneFisiche>" & vbCrLf
                                testoXML &= "<loc:Cedente>1</loc:Cedente>" & vbCrLf
                            Else
                                testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Denominazione>" & IfNull(rowAnagr("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Cedente>1</loc:Cedente>" & vbCrLf
                            End If
                            testoXML &= "<loc:TipologiaConduttore>3</loc:TipologiaConduttore></loc:Conduttore>" & vbCrLf
                            '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                            queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE   = " & insDbValue("00" & varContatoreSoggetti, True) _
                            & " ,COD_FISCALE_CONDUTTORE       = " & insDbValue(cFisc, True) _
                            & " ,SOGGETTIVITA_IVA_CONDUTTORE  = " & insDbValue(varSoggettivitaIVA, False) _
                            & " ,COGNOME_CONDUTTORE           = " & insDbValue(rowAnagr("COGNOME").ToString, True) _
                            & " ,NOME_CONDUTTORE              = " & insDbValue(rowAnagr("NOME").ToString, True) _
                            & " ,DENOMINAZIONE_CONDUTTORE     = " & insDbValue(rowAnagr("RAGIONE_SOCIALE").ToString, True) _
                            & " ,SESSO_CONDUTTORE             = " & insDbValue(rowAnagr("SESSO").ToString, True) _
                            & " ,DATA_NASCITA_CONDUTTORE      = " & insDbValue(rowAnagr("DATA_NASCITA").ToString, True) _
                            & " ,COMUNE_NASCITA_CONDUTTORE    = " & insDbValue(varComuneNascita, True) _
                            & " ,PROVINCIA_NASCITA_CONDUTTORE = " & insDbValue(varProvinciaNascita, True)

                            '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI
                        Next
                    End If

                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='INTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                    Dim da2 As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                    Dim dtAnagr2 As New Data.DataTable
                    da2.Fill(dtAnagr2)
                    da2.Dispose()
                    If dtAnagr2.Rows.Count > 0 Then
                        For Each rowAnagr2 As Data.DataRow In dtAnagr2.Rows
                            varContatoreSoggetti = varContatoreSoggetti + 1
                            If IfNull(rowAnagr2("PARTITA_IVA"), "") <> "" Then
                                cFisc = IfNull(rowAnagr2("PARTITA_IVA"), "")
                                persGiuridica = True
                            Else
                                cFisc = IfNull(rowAnagr2("COD_FISCALE"), "")
                                persGiuridica = False
                            End If
                            testoXML &= "<loc:Conduttore>" & vbCrLf _
                                    & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                    & "<loc:CodiceFiscale>" & cFisc & "</loc:CodiceFiscale>" & vbCrLf _
                                    & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                            cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr2.Item("COD_FISCALE"), ""), 12, 4) & "'"
                            myReaderT = cmd.ExecuteReader()
                            If myReaderT.Read Then
                                varComuneNascita = IfNull(myReaderT("NOME"), "")
                                varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                            End If
                            myReaderT.Close()

                            If persGiuridica = False Then
                                testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                    & "<sc:Cognome>" & IfNull(rowAnagr2("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                    & "<sc:Nome>" & IfNull(rowAnagr2("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                    & "<sc:Sesso>" & IfNull(rowAnagr2("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                    & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr2("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                    & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                                If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                    varProvinciaNascita = "EE"
                                End If
                                testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                                testoXML &= "</loc:PersoneFisiche>" & vbCrLf
                                testoXML &= "<loc:Cedente>2</loc:Cedente>" & vbCrLf

                            Else
                                testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Denominazione>" & IfNull(rowAnagr2("RAGIONE_SOCIALE"), "") & "</loc:Denominazione>" & vbCrLf _
                                    & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                    & "<loc:Cedente>2</loc:Cedente>" & vbCrLf
                            End If

                            '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                            queryInsert = queryInsert & " ,NUM_PROGRESSIVO_CONDUTTORE_2   = " & insDbValue("00" & varContatoreSoggetti, True) _
                            & " ,COD_FISCALE_CONDUTTORE_2       = " & insDbValue(cFisc, True) _
                            & " ,SOGGETTIVITA_IVA_CONDUTTORE_2  = " & insDbValue(varSoggettivitaIVA, False) _
                            & " ,COGNOME_CONDUTTORE_2           = " & insDbValue(rowAnagr2("COGNOME").ToString, True) _
                            & " ,NOME_CONDUTTORE_2              = " & insDbValue(rowAnagr2("NOME").ToString, True) _
                            & " ,DENOMINAZIONE_CONDUTTORE_2     = " & insDbValue(rowAnagr2("RAGIONE_SOCIALE").ToString, True) _
                            & " ,SESSO_CONDUTTORE_2             = " & insDbValue(rowAnagr2("SESSO").ToString, True) _
                            & " ,DATA_NASCITA_CONDUTTORE_2      = " & insDbValue(rowAnagr2("DATA_NASCITA").ToString, True) _
                            & " ,COMUNE_NASCITA_CONDUTTORE_2    = " & insDbValue(varComuneNascita, True) _
                            & " ,PROVINCIA_NASCITA_CONDUTTORE_2 = " & insDbValue(varProvinciaNascita, True)

                            '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                        Next
                    End If
                    testoXML &= "<loc:TipologiaConduttore>3</loc:TipologiaConduttore></loc:Conduttore></loc:PrimoModulo>" & vbCrLf _
                        & "</loc:Soggetti>" & vbCrLf
                End If
                'COME DA RICHIESTA IN PRESENZA DI SUBENTRO NON RIPORTARE LE INFO DEL NUOVO INTESTATARIO

                '************** 14/12/2016 SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                queryInsert = queryInsert & " ,CF_INTERMEDIARIO = " & insDbValue(varCFintermediario, True) _
                        & " ,IMPEGNO_A_TRASMETTERE        = 1" _
                        & " ,DATA_IMPEGNO                 = " & insDbValue(dataInvio, True) _
                        & " ,FIRMA_INTERMEDIARIO          = " & insDbValue(varFirmaIntermediario, False)

                '************** 14/12/2016 fine SCRITTURA NELLA TABELLA DI TUTTI I VALORI

                testoXML &= "</loc:Documento>" & vbCrLf
            End If

            If ConOpenNow = True Then
                cmd.Dispose()
                OracleConn.Close()
            End If

            Return testoXML

        End Function


        Public Function ScriveXMLAdempSuccAnteAler(ByVal IdContratto As Long, ByVal dataInvio As String, ByVal varContatoreDoc As Integer, ByRef totImporti As Decimal, ByVal varTipoAdempim As String, ByVal codUfficio As String, ByRef CanoneCorrente As Decimal, ByRef varImpostaDiRegistro As String, ByRef varTotSanzioni As Decimal, ByRef TotaleInteressi As Decimal, ByRef giorniDiff As Integer, ByRef CalcolaInteressi As Boolean, ByRef AnnotazioneXML As String) As String
            Dim testoXML As String = ""
            '
            Try
                Dim ConOpenNow As Boolean = False
                Dim bTrovato As Boolean = False
                Dim sStringaSql As String = ""
                Dim alertInfoMancante As Boolean = False

                Dim TipoContratto As String = ""

                '***** 0 Intestazione XML *****
                Dim varIntestazione As String = ""
                Dim varCodiceFornitura As String = "RLI12"

                Dim varTipoFornitore As String = "10"

                Dim varCodFiscFornitore As String = ""
                Dim varSpazioUtente As String = ""
                Dim varSpazioServTelem As String = ""
                Dim varUfficioTerritoriale As String = ""
                Dim varCodiceABI As String = ""
                Dim varCodiceCAB As String = ""
                Dim varCodiceCIN As String = ""
                Dim varNumContoCorrente As String = ""
                Dim varCodFiscTitolareCC As String = ""
                Dim varImportoDaVersare As String = "" '=??? ImportoBollo, ImportoRegistrazione, ImportoSanzioniRegistrazione, ImportoInteressi
                Dim ImportoRecesso As Decimal = 0
                Dim ImportoRegistrazione As Decimal = 0
                Dim varPdfBase64 As String = ""
                totImporti = 0

                If OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                End If

                cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=1"
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader.Read Then
                    ImportoRecesso = CDec(PuntiInVirgole(IfNull(myReader("valore"), "")))
                End If
                myReader.Close()

                cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=6"
                myReader = cmd.ExecuteReader()
                If myReader.Read Then
                    ImportoRegistrazione = CDec(PuntiInVirgole(IfNull(myReader("valore"), "")))
                End If
                myReader.Close()

                cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=10"
                Dim myReaderB As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderB.Read Then
                    varCodFiscFornitore = IfNull(myReaderB("valore"), "")
                End If
                myReaderB.Close()

                '***** 1 Frontespizio *****
                Dim varIDProdottoSw As String = ""
                Dim varNumModuliCompilati As String = ""
                Dim varIDcontratto As String = ""

                '***** 1.1 Richiedente (persona fisica o giuridica) *****
                Dim varCfRichiedente As String = ""
                Dim varNome As String = ""
                Dim varCognomeRich As String = ""

                Dim varNomeCond As String = ""
                Dim varCognomeCond As String = ""
                Dim varCodFiscaleCond As String = ""

                Dim varCodFiscaleRappr As String = ""
                Dim varCognomeRappr As String = ""
                Dim varNomeRappr As String = ""
                Dim varCodiceCarica As String = "1"

                Dim varFirma As String = "1"
                Dim varTipoRichiedente As String = "1" '1: parte del contratto; 2:mediatore del contratto 
                Dim varSubentro As String = "0"

                Dim varTipoContratto As String = ""

                Dim varPagamInteraDurataContr As String = "" '= FLAG. 


                Dim varEventiEccezionali As String = "0" 'La casella va barrata dai contribuenti che hanno diritto alle agevolazioni fiscali a seguito di calamità naturali o eventi eccezionali. 
                'Se barrata non devono essere presenti sanzioni ed interessi

                Dim varCasiParticolari As String = "" '= FLAG. (0 in caso di prima registrazione)
                'Questa casella va barrata se il contratto di locazione che si intende registrare prevede particolari clausole contrattuali. Va indicato il codice 1, se si prevede un canone diverso per il primo anno di locazione o più annualità.

                '***** 1.2 Importi *****
                'Dim CanoneCorrente As Decimal = 0
                '*********** 1.2.1 Imposte *****
                'Dim varImpostaDiRegistro As String = "0,00"
                Dim varImpostaDiBollo As String = "0,00"

                '*********** 1.2.2 Sanzioni *****
                Dim varSanzImpostaDiRegistro As String = "0,00"
                Dim varSanzImpostaDiBollo As String = "0,00"
                Dim varInteressi As New SortedDictionary(Of Integer, Double)
                varInteressi.Clear()

                '***** 1.3 Registrazione *****
                Dim varNumProgressCanone As String = "00000001" 'Vale sempre 1

                '***** 1.3.1 Contratto *****
                Dim varDataInizio As String = ""
                Dim varDataFine As String = ""
                Dim varImportoCanone As String = "0,00"
                Dim varDataStipula As String = ""
                Dim varNumeroPagine As String = "" '(Fisso come prima?)
                Dim varNumeroCopie As String = "1" 'Indicare il numero di esemplari cartacei del contratto sottoscritti dalle parti (minimo uno).
                Dim varContrSoggettoIVA As String = "0" 'NO per il comune di Milano
                Dim varCondizioneSospensiva As String = "0"
                Dim varNumeroAllegatoA As String = "" 'Numero fogli o esemplari di scritture private, inventari (allegati al contratto)
                Dim varNumeroAllegatoB As String = "" 'Numero fogli o esemplari di ricevute e quietanze (allegati al contratto)
                Dim varNumeroAllegatoC As String = "" 'Numero fogli o esemplari di mappe, planimetrie e disegni (allegati al contratto)

                Dim varContrattoEsente As String = "" '1=esente bollo, 2= esente bollo e registro

                '***** 1.3.2 Garanzia ***** 'Se nel contratto di locazione e' presente una garanzia prestata da terzi indicare i codici fiscali dei garanti (almeno uno).
                Dim varTipologiaGaranzia As String = ""
                Dim varImportoGaranziaPrestataDaTerzi As String = ""
                Dim varCodiceFiscaleGarante As String = ""
                Dim varCodiceFiscaleSecondoGarante As String = ""

                '***** 1.3.3 Allegati *****
                'deve essere allegato il contratto da registrare.
                'L’allegazione è facoltativa in presenza contemporanea dei seguenti requisiti:
                '- Tipologia contratto: L1 o L2
                '- Contratto non soggetto a Iva;
                '- Assenza di allegati (Mappe, planimetrie, disegni,ecc....).
                '- massimo 3 Locatori persone fisiche e soggettività Iva non barrata
                '- massimo 3 Conduttori persone fisiche e soggettività Iva non barrata
                '- deve essere presente almeno un immobile con codice 1 (immobile principale).
                '- Gli altri immobili (max 3) devono avere codice 2 (pertinenza locata congiuntamente).
                '- Tipologia immobile: U = urbano.
                '- Rendita catastale presente
                Dim varTipoFile As String = ""
                Dim varNomeFile As String = ""
                Dim varDescrizioneFile As String = ""
                Dim varImmagineData As String = ""

                '***** 1.4 ImpegnoATrasmettere (riservato alla presentazione in via telematica) *****
                Dim varCFintermediario As String = ""
                Dim varImpegnoATrasmettere As String = ""
                Dim varDataImpegno As String = ""
                Dim varFirmaIntermediario As String = ""


                '***** 1.5 Soggetti *****
                '*********** 1.5.1 Locatore ***********
                Dim varContatoreLocatore As String = "001"
                Dim varSoggettIVALocat As String = "0"
                Dim varDenominazione As String = ""


                '*********** 1.5.2 Conduttore ***********
                '(Variabili da intendersi per tutti i componenti del nucleo)
                Dim varContatoreSoggetti As Integer = 0
                Dim varSoggettivitaIVA As String = "0"
                Dim varSesso As String = ""
                Dim varCodFiscaleRich As String = ""
                Dim varDataNascita As String = ""
                Dim varComuneNascita As String = ""
                Dim varProvinciaNascita As String = ""
                Dim varCedente As String = "0"


                '***** 1.6 Immobili *****
                Dim varContatoreImmobili As Integer = 0

                Dim varTipoImmobile As String = ""
                'Assume i seguenti valori:
                '1 = Immobile principale
                '2 = Pertinenza locata congiuntamente all' immobile principale
                '3 = Pertinenza locata disgiuntamente all' immobile principale
                '• Se e' presente un rigo con valore 2, dovra' essere presente in uno dei righi precedenti un
                'immobile con valore 1 e dovra' essere preceduto da un rigo con valore 1 o 2.
                '• Se e' presente un rigo con valore 3, non e' necessario che sia presente un rigo con valore 1. 

                Dim vaCodComuneCatastale As String = ""

                Dim varTipoCatasto As String = "U" 'T/U (Terreni/Urbano) 
                'Dato obbligatorio se provincia e' diversa da "EE".
                'Se si tratta di prima registrazione se tipologia contratto = T1 o T2 e provincia(E) diversa da "EE", tipo catasto deve essere = T. 
                'Se si tratta di prima registrazione se tipologia contratto = da L1 A L4, e da S1 a S3 e provincia e' diversa da "EE" , tipo catasto deve essere = U

                Dim varPorzioneImmobile As String = "I" 'I/P (Intero/Porzione)

                Dim varSezioneUrbana As String = ""
                'Per gli immobili siti nelle sole zone in cui vige il sistema
                'tavolare indicare il codice “Comune catastale” presente nel documento catastale.


                Dim varFoglio As String = ""
                Dim varParticellaNumeratore As String = ""
                Dim varParticellaDenominatore As String = ""
                Dim varSubalterno As String = ""

                Dim varInViaDiAccattastam As String = "" 'Dato obbligatorio se provincia e' diversa da "EE" e in assenza di DatiCatastali

                Dim varComune As String = ""
                Dim varProvincia As String = ""
                Dim varCategCatastale As String = ""
                Dim varRenditaCatastale As String = ""
                Dim varTipoIndirizzo As String = ""
                Dim varIndirizzo As String = ""
                Dim varNumCivico As String = ""

                Dim idUnita As Long = 0
                Dim TipologiaUnita As String = ""

                '***** 1.7 Relazioni *****
                'Questo quadro va compilato solo per le locazioni ad uso abitativo.
                'Se si tratta di prima registrazione il quadro può essere presente solo se tipologia contratto = L1 o L2 
                'e non sia stata barrata la casella “soggettivita' IVA” nella sezione dedicata ai locatori 
                'Nel caso di adempimenti successivi il quadro è obbligatorio se è presente il campo CedolareSecca; non può essere presente negli altri casi.

                Dim varImmobileNumero As Integer = 1
                'Se si tratta di prima registrazione il campo è obbigatorio.
                'Nel caso di adempimenti successivi non deve essere presente.
                'Devono essere presenti tutti gli immobili (e soltanto quelli) che hanno 
                'categoria catastale = gruppo A (+ relative pertinenze) e che abbiano una
                'rendita diversa da zero.
                'Non possono essere inseriti immobili con categoria catastale diversa da A.
                'Non possono essere presenti pertinenze con tipologia immobile = 3.
                'Il regime di tassazione scelto per l’immobile principale (tipologia immobile = 1) deve valere anche
                'per la relativa pertinenza (tipologia immobile = 2)

                Dim varLocatoreNumero As Integer = 1
                Dim varPercentualePossesso As String = "100"
                Dim varCedolare As String = "N"

                Dim FL_BOLLO_ESENTE As String = ""

                Dim varImportoBolloParam As String = ""
                'Dim varContatoreDoc As Integer = 0

                Dim LimiteTassaRegistrazione As String = 0
                cmd.CommandText = "select valore from siscom_MI.parametri_BOLLETTA where ID=6"
                Dim myReaderJ As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderJ.Read Then
                    LimiteTassaRegistrazione = PuntiInVirgole(IfNull(myReaderJ("VALORE"), ""))
                End If
                myReaderJ.Close()
                cmd.CommandText = "SELECT * from siscom_mi.parametri_bolletta where id=8"
                Dim myReaderP As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderP.Read Then
                    varDenominazione = IfNull(myReaderP("valore"), "")
                End If
                myReaderP.Close()

                cmd.CommandText = "select valore from SISCOM_MI.PARAMETRI_BOLLETTA where ID = 18"
                Dim myReaderZ1 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderZ1.Read Then
                    varImportoBolloParam = IfNull(myReaderZ1("VALORE"), "0")
                End If
                myReaderZ1.Close()
                Dim persGiuridicaRich As Boolean = False
                Dim persGiuridica As Boolean = False
                Dim varCodContratto As String = ""
                If IdContratto <> 0 Then

                    cmd.CommandText = "select rapporti_utenza.*,UNITA_IMMOBILIARI.ID as id_unita,UNITA_IMMOBILIARI.COD_TIPOLOGIA from siscom_mi.rapporti_utenza,siscom_mi.unita_contrattuale,SISCOM_MI.UNITA_IMMOBILIARI where rapporti_utenza.id=" & IdContratto & " and unita_contrattuale.id_contratto=rapporti_utenza.id and unita_contrattuale.id_unita_principale is null AND UNITA_IMMOBILIARI.ID=UNITA_CONTRATTUALE.ID_UNITA"
                    Dim myReaderRU As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReaderRU.Read Then
                        varCodContratto = IfNull(myReaderRU("COD_CONTRATTO"), "")
                        idUnita = IfNull(myReaderRU("ID_UNITA"), "")
                        TipoContratto = IfNull(myReaderRU("COD_TIPOLOGIA_CONTR_LOC"), "")
                        TipologiaUnita = IfNull(myReaderRU("COD_TIPOLOGIA"), "")
                    End If
                    myReaderRU.Close()

                    cmd.CommandText = "select * from siscom_mi.tab_interessi_legali order by anno desc"
                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    Do While myReaderA.Read
                        varInteressi.Add(myReaderA("anno"), myReaderA("tasso"))
                    Loop
                    myReaderA.Close()

                    cmd.CommandText = "select * from siscom_mi.PARAMETRI_RICHIEDENTE_XML"
                    myReaderA = cmd.ExecuteReader()
                    If myReaderA.Read Then
                        varTipoRichiedente = IfNull(myReaderA("ID_TIPO_RICH"), -1)
                        varCodFiscaleRich = IfNull(myReaderA("CODFISC_PIVA"), "")
                        varCognomeRich = IfNull(myReaderA("DENOMINAZIONE"), "")
                        varCodFiscaleRappr = IfNull(myReaderA("CODFISC_RAPP"), "")
                        varCognomeRappr = IfNull(myReaderA("COGNOME_RAPP"), "")
                        varNomeRappr = IfNull(myReaderA("NOME_RAPP"), "")
                        If varTipoRichiedente = "0" Or varTipoRichiedente = "2" Then
                            persGiuridicaRich = True
                        End If
                    End If
                    myReaderA.Close()

                    If varTipoRichiedente = "1" Then
                        cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                        Dim myReader12345 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                        If myReader12345.Read Then
                            If IfNull(myReader12345("partita_iva"), "") <> "" Then
                                varCognomeRich = IfNull(myReader12345("ragione_sociale"), "")
                                varCodFiscaleRich = IfNull(myReader12345("partita_iva"), "")
                                persGiuridicaRich = True
                            Else
                                varCognomeRich = IfNull(myReader12345("cognome"), "")
                                varNome = IfNull(myReader12345("nome"), "")
                                varCodFiscaleRich = IfNull(myReader12345("cod_fiscale"), "")
                            End If
                        End If
                        myReader12345.Close()
                    End If

                    cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica and cod_tipologia_occupante='INTE' AND id_contratto=" & IdContratto
                    Dim myReader1234 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReader1234.Read Then
                        If IfNull(myReader1234("partita_iva"), "") <> "" Then
                            varCognomeCond = IfNull(myReader1234("ragione_sociale"), "")
                            varCodFiscaleCond = IfNull(myReader1234("partita_iva"), "")
                            persGiuridica = True
                        Else
                            varCognomeCond = IfNull(myReader1234("cognome"), "")
                            varNomeCond = IfNull(myReader1234("nome"), "")
                            varCodFiscaleCond = IfNull(myReader1234("cod_fiscale"), "")
                        End If
                    End If
                    myReader1234.Close()

                    cmd.CommandText = "SELECT T_MOTIVO_DOMANDA_VSA.*,DOMANDE_BANDO_VSA.ID AS IDDOM,DOMANDE_BANDO_VSA.* FROM DOMANDE_BANDO_VSA,T_MOTIVO_DOMANDA_VSA,DICHIARAZIONI_VSA WHERE DICHIARAZIONI_VSA.ID=DOMANDE_BANDO_VSA.ID_DICHIARAZIONE AND DICHIARAZIONI_VSA.ID_STATO <> 2 AND DOMANDE_BANDO_VSA.FL_AUTORIZZAZIONE=1 and DOMANDE_BANDO_VSA.ID_MOTIVO_DOMANDA=1 AND DOMANDE_BANDO_VSA.ID_MOTIVO_DOMANDA = T_MOTIVO_DOMANDA_VSA.ID AND CONTRATTO_NUM='" & varCodContratto & "' ORDER BY DOMANDE_BANDO_VSA.DATA_PG DESC"
                    myReader1234 = cmd.ExecuteReader()
                    If myReader1234.Read Then
                        'varSubentro = "1"
                        AnnotazioneXML = AnnotazioneXML & "Rilevato Subentro/"
                    End If
                    myReader1234.Close()

                    'Tag Documento (diverso per ogni contratto)
                    'varContatoreDoc = varContatoreDoc + 1
                    testoXML = "<loc:Documento identificativo=" & Chr(34) & Format(varContatoreDoc, "00000") & Chr(34) & "><loc:Frontespizio>" & vbCrLf _
                        & "<loc:IdentificativoProdSoftware>SEPA2009</loc:IdentificativoProdSoftware>" & vbCrLf _
                        & "<loc:NumeroModuliCompilati>4</loc:NumeroModuliCompilati>" & vbCrLf _
                        & "<loc:IDContratto>" & IdContratto & "</loc:IDContratto>" & vbCrLf _
                        & "<loc:Richiedente>" & vbCrLf _
                        & "<loc:CodiceFiscale>" & varCodFiscaleRich & "</loc:CodiceFiscale>" & vbCrLf

                    If persGiuridicaRich = True Then
                        testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                        & "<loc:Denominazione>" & varCognomeRich.ToUpper & "</loc:Denominazione>" & vbCrLf _
                        & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                        & "<loc:Rappresentante>" & vbCrLf _
                        & "<loc:CodiceFiscaleRappresentante>" & varCodFiscaleRappr & "</loc:CodiceFiscaleRappresentante>" & vbCrLf _
                        & "<loc:CognomeRappresentante>" & varCognomeRappr & "</loc:CognomeRappresentante>" & vbCrLf _
                        & "<loc:NomeRappresentante>" & varNomeRappr & "</loc:NomeRappresentante>" & vbCrLf _
                        & "<loc:CodiceCarica>" & varCodiceCarica & "</loc:CodiceCarica>" & vbCrLf _
                        & "</loc:Rappresentante>" & vbCrLf
                    Else
                        testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                        & "<loc:Cognome>" & varCognomeRich & "</loc:Cognome>" & vbCrLf _
                        & "<loc:Nome>" & varNome & "</loc:Nome>" & vbCrLf _
                        & "</loc:PersoneFisiche>" & vbCrLf
                    End If
                    If varTipoRichiedente = "0" Then
                        varTipoRichiedente = "1"
                    End If
                    testoXML &= "<loc:Firma>" & varFirma & "</loc:Firma>" & vbCrLf _
                            & "<loc:TipologiaRichiedente>" & varTipoRichiedente & "</loc:TipologiaRichiedente>" & vbCrLf _
                            & "<loc:Subentro>" & varSubentro & "</loc:Subentro>" & vbCrLf _
                            & "</loc:Richiedente>" & vbCrLf

                    Dim data_riferimento As String = ""
                    Dim data_riconsegna As String = ""
                    'Dim giorniDiff As Integer = 0

                    Dim provenienza As String = ""
                    Dim Agevolato As String = ""
                    Dim CanoneDaScrivere As String = ""
                    Dim dataValuta As String = ""
                    Dim SU As Boolean = True
                    Dim aggiornamento_istat As Decimal = 0
                    Dim AltriAdeguamenti As Decimal = 0
                    Dim importo112 As Decimal = 0
                    Dim varSerieRegistr As String = ""
                    Dim varAnnoRegistr As String = ""
                    Dim varNumRegistr As Integer = 0
                    Dim varIDTelematico As String = ""

                    cmd.CommandText = "SELECT (SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_MOTIVO=2 AND ID_CONTRATTO=RAPPORTI_UTENZA.ID) AS ISTAT,(SELECT SUM(IMPORTO) FROM SISCOM_MI.RAPPORTI_UTENZA_AD_CANONE WHERE ID_MOTIVO<>2 AND ID_CONTRATTO=RAPPORTI_UTENZA.ID) AS ADEGUAMENTO,RAPPORTI_UTENZA_PROSSIMA_BOL.PROSSIMA_BOLLETTA,TIPOLOGIA_CONTRATTO_LOCAZIONE.DESCRIZIONE AS ""TIPO_C"",TIPOLOGIA_CONTRATTO_LOCAZIONE.RIF_LEGISLATIVO ,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_tr_canone,TIPOLOGIA_CONTRATTO_LOCAZIONE.perc_conduttore,RAPPORTI_UTENZA.*,SISCOM_MI.GETSTATOCONTRATTO(RAPPORTI_UTENZA.ID) AS ""STATO"" FROM SISCOM_MI.RAPPORTI_UTENZA_PROSSIMA_BOL,SISCOM_MI.RAPPORTI_UTENZA,SISCOM_MI.TIPOLOGIA_CONTRATTO_LOCAZIONE WHERE RAPPORTI_UTENZA_PROSSIMA_BOL.ID_CONTRATTO(+)=RAPPORTI_UTENZA.ID AND TIPOLOGIA_CONTRATTO_LOCAZIONE.COD=RAPPORTI_UTENZA.COD_TIPOLOGIA_CONTR_LOC AND RAPPORTI_UTENZA.ID=" & IdContratto
                    Dim myReaderT As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                    If myReaderT.Read Then
                        CanoneCorrente = IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0)
                        varPagamInteraDurataContr = "0"

                        TipoContratto = IfNull(myReaderT("PROVENIENZA_ASS"), "")
                        data_riconsegna = IfNull(myReaderT("DATA_SCADENZA_RINNOVO"), "")
                        varSerieRegistr = IfNull(myReaderT("SERIE_REGISTRAZIONE"), "1")
                        varAnnoRegistr = Mid(IfNull(myReaderT("DATA_REG"), ""), 1, 4)
                        varNumRegistr = CInt(IfNull(myReaderT("NUM_REGISTRAZIONE"), 999999))
                        varIDTelematico = IfNull(myReaderT("REG_TELEMATICA"), "")

                        If varNumRegistr = 999999 Then
                            AnnotazioneXML = AnnotazioneXML & "Num.Registrazione impostato a 999999/"
                        End If
                        If IfNull(myReaderT("SERIE_REGISTRAZIONE"), "X") = "X" Then
                            AnnotazioneXML = AnnotazioneXML & "Serie Registrazione impostata a 1/"
                        End If

                        If varAnnoRegistr = "" Then
                            If IfNull(myReaderT("data_stipula"), "29991231") < IfNull(myReaderT("data_decorrenza"), "29991231") Then
                                varAnnoRegistr = Mid(IfNull(myReaderT("data_stipula"), "29991231"), 1, 4)
                                AnnotazioneXML = AnnotazioneXML & "Data reg. impostata come Data Stipula/"
                            Else
                                varAnnoRegistr = Mid(IfNull(myReaderT("data_decorrenza"), "29991231"), 1, 4)
                                AnnotazioneXML = AnnotazioneXML & "Data reg. impostata come Data Decorrenza/"
                            End If
                        End If
                        If IfNull(myReaderT("data_stipula"), "29991231") < IfNull(myReaderT("data_decorrenza"), "29991231") Then
                            data_riferimento = Mid(dataInvio, 1, 4) & Mid(IfNull(myReaderT("data_stipula"), "29991231"), 5, 4)
                        Else
                            data_riferimento = Mid(dataInvio, 1, 4) & Mid(IfNull(myReaderT("data_decorrenza"), "29991231"), 5, 4)
                        End If
                        If data_riferimento = "20140229" Then data_riferimento = "20140228"
                        varDataInizio = FormattaData(data_riferimento)
                        varDataFine = FormattaData(IfNull(myReaderT("data_scadenza"), ""))
                        If varDataFine < Format(Now, "yyyyMMdd") Then
                            varDataFine = IfNull(myReaderT("data_scadenza_rinnovo"), "")
                        End If
                        FL_BOLLO_ESENTE = IfNull(myReaderT("FL_BOLLO_ASSOLTO"), "0")

                        Agevolato = "N"
                        If IfNull(myReaderT("COD_TIPOLOGIA_CONTR_LOC"), "") = "L43198" And (IfNull(myReaderT("DEST_USO"), "") = "0" Or IfNull(myReaderT("DEST_USO"), "") = "P") Then
                            Agevolato = "S"
                        End If

                        If Agevolato = "N" Then
                            CanoneDaScrivere = (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))
                            'varImpostaDiRegistro = Format(((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2, "0.00")
                            varImpostaDiRegistro = Format(Math.Round(((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2, 0, MidpointRounding.AwayFromZero), "0.00")

                        Else
                            CanoneDaScrivere = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))))
                            varImpostaDiRegistro = Format(Math.Round((((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))) / 100) * 2, 0, MidpointRounding.AwayFromZero), "0.00")
                        End If

                        SU = False

                        If SU = False Then
                            If Agevolato = "N" Then
                                CanoneDaScrivere = (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))
                                importo112 = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) / 100) * 2
                            Else
                                CanoneDaScrivere = ((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0))))
                                importo112 = (((IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)) - ((30 / 100) * (IfNull(myReaderT("imp_canone_iniziale"), 0) + IfNull(myReaderT("istat"), 0) + IfNull(myReaderT("adeguamento"), 0)))) / 100) * 2
                            End If

                            If importo112 < 67 Then
                                importo112 = 67
                            End If
                            'tipopagamentoproroga = "P"
                        End If
                    End If
                    myReaderT.Close()

                    Select Case varTipoAdempim
                        Case "1"
                            dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riferimento))))
                            varImportoCanone = Format(CDbl(CanoneDaScrivere), "0.00")
                        Case "2"
                            dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riferimento))))
                            varImpostaDiRegistro = Format(Math.Round(importo112, 0, MidpointRounding.AwayFromZero), "0.00")
                        Case "4"
                            dataValuta = CStr(DateAdd("d", 29, CDate(FormattaData(data_riconsegna))))
                            varImpostaDiRegistro = Format(Math.Round(ImportoRecesso, 2), "0.00")
                    End Select

                    'cmd.CommandText = "SELECT UNITA_IMMOBILIARI.ID FROM SISCOM_MI.UNITA_CONTRATTUALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE ID_CONTRATTO=" & IdContratto & " AND UNITA_CONTRATTUALE.ID_UNITA=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE IS NULL"
                    'myReaderT = cmd.ExecuteReader()
                    'If myReaderT.Read Then
                    '    idUnita = IfNull(myReaderT("ID"), 0)
                    'End If
                    'myReaderT.Close()

                    'LEGENDA TIPI CONTRATTO:
                    'L1 = Locazione di immobile ad uso abitativo; (VALIDO)
                    'L2 = Locazione agevolata di immobile ad uso abitativo; (VALIDO)
                    'L3 = Locazione di immobile ad uso abitativo (contratto soggetto ad IVA); 
                    'L4 = Locazione finanziaria di immobile ad uso abitativo;
                    'S1 = Locazione di immobile ad uso diverso dall'abitativo; (VALIDO)
                    'S2 = Locazione di immobile ad uso diverso dall'abitativo con locatore soggetto ad IVA; 
                    'S3 = Locazione Finanziaria di immobile ad uso diverso dall'abitativo; 
                    'T1 = Affitto di fondo rustico; 
                    'T2 = Affitto di fondo rustico agevolato; 
                    'T3 = Affitto di terreni ed aree non edificabili, cave e torbiere; 
                    'T4 = Affitto di terreni edificabili o non edificabili destinati a parcheggio (contratto assoggettato ad IVA)

                    Select Case TipoContratto
                        Case "USD"
                            varTipoContratto = "S1"
                        Case Else
                            If Agevolato = "S" Then
                                varTipoContratto = "L2"
                            Else
                                If TipologiaUnita = "AL" Then
                                    varTipoContratto = "L1"
                                Else
                                    varTipoContratto = "S1"
                                End If
                            End If
                    End Select


                    If varTipoAdempim = "2" Then
                        testoXML &= "<loc:PagamentoInteraDurataContratto>" & varPagamInteraDurataContr & "</loc:PagamentoInteraDurataContratto>" & vbCrLf
                    End If

                    Dim Giorni As Integer = 0
                    Dim GiorniAnno As Integer = 0
                    Dim dataPartenza As String = ""


                    Dim TotalePeriodo As Decimal = 0
                    Dim indice As Long = 0
                    Dim tasso As Decimal = 0
                    Dim DataFine As String = ""
                    Dim DataInizio As String = ""

                    varSanzImpostaDiRegistro = "0,00"
                    TotaleInteressi = 0
                    giorniDiff = 0

                    If CalcolaInteressi = True Then
                        If AggiustaData(dataValuta) < dataInvio Then

                            giorniDiff = DateDiff(DateInterval.Day, CDate(FormattaData(dataValuta)), CDate(FormattaData(dataInvio)))

                            If giorniDiff <= 90 Then
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 3) / 100, "0.00")
                            End If

                            If giorniDiff >= 91 And giorniDiff <= 365 Then
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 3.75) / 100, "0.00")
                            End If

                            If giorniDiff >= 366 Then
                                varSanzImpostaDiRegistro = Format((varImpostaDiRegistro * 30) / 100, "0.00")
                            End If



                            TotaleInteressi = 0
                            If varSanzImpostaDiRegistro > 0 Then
                                'DataCalcolo = AggiustaData(dataInvio)
                                DataInizio = Format(DateAdd(DateInterval.Day, 1, CDate(dataValuta)), "yyyyMMdd")

                                Giorni = 0
                                GiorniAnno = 0
                                dataPartenza = DataInizio
                                TotaleInteressi = 0
                                TotalePeriodo = 0

                                For KK1 = CInt(Mid(DataInizio, 1, 4)) To CInt(Mid(dataInvio, 1, 4))

                                    If KK1 = CInt(Mid(dataInvio, 1, 4)) Then
                                        DataFine = FormattaData(dataInvio)
                                    Else
                                        DataFine = "31/12/" & KK1

                                    End If

                                    GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK1), CDate("31/12/" & KK1)) + 1

                                    Giorni = DateDiff(DateInterval.Day, CDate(FormattaData(dataPartenza)), CDate(DataFine)) + 1

                                    If KK1 < 1990 Then
                                        tasso = 5
                                    Else
                                        If varInteressi.ContainsKey(KK1) = True Then
                                            tasso = varInteressi(KK1)
                                        End If
                                    End If

                                    TotalePeriodo = Format((((varImpostaDiRegistro * tasso) / 100) / GiorniAnno) * Giorni, "0.00")
                                    TotaleInteressi = TotaleInteressi + TotalePeriodo

                                    dataPartenza = KK1 + 1 & "0101"
                                Next
                            Else
                                TotaleInteressi = 0
                                TotalePeriodo = 0
                            End If
                        End If
                    End If

                    Dim importobollo As String = ""
                    importobollo = varImportoBolloParam


                    Select Case TipoContratto
                        Case "USD"
                            varNumeroPagine = "6"
                        Case Else
                            varNumeroPagine = "5"
                    End Select

                    importobollo = Ceiling((CDec(varNumeroPagine) / 4)) * CDec(PuntiInVirgole(importobollo)) * CDec(varNumeroCopie)
                    If FL_BOLLO_ESENTE = "1" Then
                        varContrattoEsente = "1"
                        varNumeroPagine = "2"
                        importobollo = "0,00"
                    End If

                    varImpostaDiBollo = "0,00"

                    testoXML &= "<loc:Importi>" & vbCrLf _
                            & "<loc:Imposte>" & vbCrLf _
                            & "<loc:ImpostaDiRegistro>" & varImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf _
                            & "<loc:ImpostaDiBollo>" & varImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf _
                            & "</loc:Imposte>" & vbCrLf _
                            & "<loc:Sanzioni>" & vbCrLf _
                            & "<loc:ImpostaDiRegistro>" & varSanzImpostaDiRegistro & "</loc:ImpostaDiRegistro>" & vbCrLf _
                            & "<loc:ImpostaDiBollo>" & varSanzImpostaDiBollo & "</loc:ImpostaDiBollo>" & vbCrLf _
                            & "</loc:Sanzioni>" & vbCrLf _
                            & "<loc:Interessi>" & Format(TotaleInteressi, "0.00") & "</loc:Interessi>" & vbCrLf _
                            & "</loc:Importi>" & vbCrLf

                    varTotSanzioni = CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo)

                    testoXML &= "<loc:AdempSucc>" & vbCrLf _
                         & "<loc:TipologiaAdempimento>" & varTipoAdempim & "</loc:TipologiaAdempimento>" & vbCrLf

                    If varTipoAdempim = "1" Then
                        testoXML &= "<loc:Annualita>" & Format(Now, "yyyy") & "</loc:Annualita>" & vbCrLf
                    End If

                    If varTipoAdempim <> "1" Then
                        testoXML &= "<loc:DataFine>" & Replace(FormattaData(varDataFine), "/", "") & "</loc:DataFine>" & vbCrLf
                    End If



                    varUfficioTerritoriale = codUfficio

                    testoXML &= "<loc:Registrazione>" & vbCrLf _
                    & "<loc:UfficioDiRegistrazione>" & varUfficioTerritoriale & "</loc:UfficioDiRegistrazione>" & vbCrLf _
                    & "<loc:Anno>" & varAnnoRegistr & "</loc:Anno>" & vbCrLf _
                    & "<loc:Serie>" & varSerieRegistr & "</loc:Serie>" & vbCrLf _
                    & "<loc:NumeroRegistrazione>" & varNumRegistr & "</loc:NumeroRegistrazione>" & vbCrLf _
                    & "</loc:Registrazione>" & vbCrLf _
                    & "</loc:AdempSucc>" & vbCrLf

                    totImporti = CDec(varImpostaDiRegistro) + CDec(varImpostaDiBollo) + CDec(varSanzImpostaDiRegistro) + CDec(varSanzImpostaDiBollo) + CDec(TotaleInteressi)


                    varImpegnoATrasmettere = "<loc:ImpegnoATrasmettere>" & vbCrLf _
                                             & " <reg:CFintermediario>01349670156</reg:CFintermediario>" & vbCrLf _
                                              & "<reg:ImpegnoATrasmettere>1</reg:ImpegnoATrasmettere>" & vbCrLf _
                                              & " <reg:DataImpegno>" & Replace(FormattaData(IfNull(dataInvio, "")), "/", "") & "</reg:DataImpegno>" & vbCrLf _
                                             & " <reg:FirmaIntermediario>1</reg:FirmaIntermediario>" & vbCrLf _
                                           & "</loc:ImpegnoATrasmettere>" & vbCrLf

                    testoXML &= varImpegnoATrasmettere & "</loc:Frontespizio>" & vbCrLf

                    If varSubentro = "1" Then

                        testoXML &= "<loc:Soggetti>" & vbCrLf _
                                & "<loc:PrimoModulo>" & vbCrLf

                        cmd.CommandText = "select id_anagrafica,anagrafica.* from siscom_mi.soggetti_contrattuali,siscom_mi.anagrafica where anagrafica.id=soggetti_contrattuali.id_anagrafica AND COD_TIPOLOGIA_OCCUPANTE='INTE' and id_contratto=" & IdContratto & " ORDER BY ID_ANAGRAFICA ASC"
                        Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(cmd)
                        Dim dtAnagr As New Data.DataTable
                        da.Fill(dtAnagr)
                        da.Dispose()
                        If dtAnagr.Rows.Count > 0 Then
                            For Each rowAnagr As Data.DataRow In dtAnagr.Rows
                                varContatoreSoggetti = varContatoreSoggetti + 1

                                testoXML &= "<loc:Conduttore>" & vbCrLf _
                                        & "<loc:NumeroProgressivo>00" & varContatoreSoggetti & "</loc:NumeroProgressivo>" & vbCrLf _
                                        & "<loc:CodiceFiscale>" & varCodFiscaleCond & "</loc:CodiceFiscale>" & vbCrLf _
                                        & "<loc:SoggettivitaIVA>" & varSoggettivitaIVA & "</loc:SoggettivitaIVA>" & vbCrLf

                                cmd.CommandText = "SELECT * FROM COMUNI_NAZIONI WHERE COD='" & Mid(IfNull(rowAnagr.Item("COD_FISCALE"), ""), 12, 4) & "'"
                                myReaderT = cmd.ExecuteReader()
                                If myReaderT.Read Then
                                    varComuneNascita = IfNull(myReaderT("NOME"), "")
                                    varProvinciaNascita = IfNull(myReaderT("SIGLA"), "")
                                End If
                                myReaderT.Close()

                                If persGiuridica = False Then
                                    testoXML &= "<loc:PersoneFisiche>" & vbCrLf _
                                        & "<sc:Cognome>" & IfNull(rowAnagr("COGNOME"), "") & "</sc:Cognome>" & vbCrLf _
                                        & "<sc:Nome>" & IfNull(rowAnagr("NOME"), "") & "</sc:Nome>" & vbCrLf _
                                        & "<sc:Sesso>" & IfNull(rowAnagr("SESSO"), "") & "</sc:Sesso>" & vbCrLf _
                                        & "<sc:DataNascita>" & Replace(FormattaData(IfNull(rowAnagr("DATA_NASCITA"), "")), "/", "") & "</sc:DataNascita>" & vbCrLf _
                                        & "<sc:ComuneNascita>" & varComuneNascita & "</sc:ComuneNascita>" & vbCrLf
                                    If varProvinciaNascita = "E" Or varProvinciaNascita = "C" Then
                                        varProvinciaNascita = "EE"
                                    End If
                                    testoXML &= "<sc:ProvinciaNascita>" & varProvinciaNascita & "</sc:ProvinciaNascita>" & vbCrLf
                                    testoXML &= "</loc:PersoneFisiche>" & vbCrLf _
                                        & "</loc:Conduttore>" & vbCrLf

                                    If ControllaCFNomeCognome(varCodFiscaleCond, IfNull(rowAnagr("COGNOME"), ""), IfNull(rowAnagr("NOME"), "")) = False Then
                                        ' Beep()
                                        AnnotazioneXML = AnnotazioneXML & "Codice Fiscale non corretto o non corrispondente a Nome-Cognome/"
                                    End If
                                Else
                                    testoXML &= "<loc:SoggettiDiversiDaPF>" & vbCrLf _
                                        & "<loc:Denominazione>" & varCognomeCond & "</loc:Denominazione>" & vbCrLf _
                                        & "</loc:SoggettiDiversiDaPF>" & vbCrLf _
                                        & "</loc:Conduttore>" & vbCrLf
                                End If
                            Next
                        End If
                        testoXML &= "</loc:PrimoModulo>" & vbCrLf _
                            & "</loc:Soggetti>" & vbCrLf
                    End If


                    testoXML &= "</loc:Documento>" & vbCrLf
                End If

                If ConOpenNow = True Then
                    cmd.Dispose()
                    OracleConn.Close()
                End If


                Return testoXML

            Catch ex As Exception
                'Beep()
            End Try

        End Function


        Public Function CalcolaImportoRateizzato(ByVal IdContratto As Long) As Double
            Dim par As New CM.Global
            Try
                Dim TotRateizzato As Double = 0

                par.OracleConn.Open()
                par.SettaCommand(par)

                '******PER OGNI RIGA DEI DATI CONTRATTUALI VIENE GENERATO IL SALDO***************

                par.cmd.CommandText = "SELECT " _
                    & "SUM(NVL(IMPORTO_RICLASSIFICATO,0)-NVL(IMPORTO_RICLASSIFICATO_PAGATO,0)) IMP_RATEIZZATO " _
                    & " " _
                    & "FROM SISCOM_MI.BOL_BOLLETTE " _
                    & "WHERE ID_RATEIZZAZIONE IS NOT NULL AND (BOL_BOLLETTE.FL_ANNULLATA=0 OR (BOL_BOLLETTE.FL_ANNULLATA<>0 AND DATA_PAGAMENTO IS NOT NULL )) " _
                    & "AND ID_CONTRATTO = " & IdContratto

                Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader3.Read Then
                    TotRateizzato = par.IfNull(myReader3("IMP_RATEIZZATO"), 0)
                End If
                myReader3.Close()

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

                CalcolaImportoRateizzato = TotRateizzato

            Catch ex As Exception
                CalcolaImportoRateizzato = 0
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function

        Public Function CalcolaSaldoAttuale(ByVal IdContratto As Long) As Double
            'Dim par As New CM.Global
            Try


                'Dim Saldo As Double = 0
                'Dim TotEmesso As Double = 0
                'Dim TotIncassato As Double = 0
                Dim TotSaldo As Double = 0
                'Dim TotContabile As Double = 0
                'Dim EmessoContabile As Double = 0
                'Dim incassato As Double = 0

                Dim ConOpenNow As Boolean = False
                If OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    'par.OracleConn.Open()
                    'par.SettaCommand(par)
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                End If

                '******PER OGNI RIGA DEI DATI CONTRATTUALI VIENE GENERATO IL SALDO***************

                cmd.CommandText = "SELECT " _
                    & "SUM(NVL(IMPORTO_TOTALE,0)- NVL(IMPORTO_RIC_B,0)) EMESSO_BOLLETTA," _
                    & "SUM(IMPORTO_TOTALE -  NVL(IMPORTO_RIC_B,0) - NVL(QUOTA_SIND_B,0)) AS EMESSO_CONTABILE, " _
                    & "SUM(NVL(IMPORTO_PAGATO,0) - NVL(QUOTA_SIND_PAGATA_B,0)- NVL(IMPORTO_RIC_PAGATO_B,0)) AS INCASSATO, " _
                    & "(SUM(IMPORTO_TOTALE -  NVL(IMPORTO_RIC_B,0) - NVL(QUOTA_SIND_B,0) - nvl(imp_ruolo_pagato,0))-(SUM(NVL(IMPORTO_PAGATO,0) - NVL(QUOTA_SIND_PAGATA_B,0)- NVL(IMPORTO_RIC_PAGATO_B,0)))) AS saldo " _
                    & "FROM SISCOM_MI.BOL_BOLLETTE " _
                    & "WHERE (BOL_BOLLETTE.FL_ANNULLATA=0 OR (BOL_BOLLETTE.FL_ANNULLATA<>0 AND DATA_PAGAMENTO IS NOT NULL )) " _
                    & "AND ID_CONTRATTO = " & IdContratto

                Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader3.Read Then
                    'TotEmesso = TotEmesso + par.IfNull(myReader3("EMESSO_BOLLETTA"), 0)
                    'incassato = par.IfNull(myReader3("INCASSATO"), 0)
                    'Saldo = EmessoContabile - incassato
                    TotSaldo = IfNull(myReader3("SALDO"), 0)

                    ''*******IMPORTO CONTABILE DETRATTE LE QUOTE SINDACALI**************
                    'par.cmd.CommandText = "SELECT SUM(IMPORTO) AS QUOTE_SINDACALI FROM SISCOM_MI.BOL_BOLLETTE,SISCOM_MI.BOL_BOLLETTE_VOCI, " _
                    '                    & "SISCOM_MI.T_VOCI_BOLLETTA WHERE ID_BOLLETTA = BOL_BOLLETTE.ID AND BOL_BOLLETTE.FL_ANNULLATA=0 AND " _
                    '                    & " T_VOCI_BOLLETTA.ID= BOL_BOLLETTE_VOCI.ID_VOCE AND T_VOCI_BOLLETTA.COMPETENZA = 3 " _
                    '                    & "AND BOL_BOLLETTE.ID_CONTRATTO = " & IdContratto & " "

                    ''AND BOL_BOLLETTE.ID_TIPO <> 5 
                    'Dim myReader4 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    'If myReader4.Read Then
                    '    EmessoContabile = par.IfNull(myReader3("EMESSO_BOLLETTA"), 0) - par.IfNull(myReader4("QUOTE_SINDACALI"), 0)
                    'End If
                    'myReader4.Close()
                    'Saldo = par.IfNull(EmessoContabile, 0)
                    'TotContabile = TotContabile + EmessoContabile
                    '***************************FINE SALDO****************************
                End If
                myReader3.Close()

                ''QUOETE SINDACALI INCASSATE
                'par.cmd.CommandText = "SELECT SUM(IMPORTO) AS QUOTE_SINDACALI_PAGATE FROM SISCOM_MI.BOL_BOLLETTE,SISCOM_MI.BOL_BOLLETTE_VOCI, " _
                '                    & "SISCOM_MI.T_VOCI_BOLLETTA WHERE ID_BOLLETTA = BOL_BOLLETTE.ID AND BOL_BOLLETTE.FL_ANNULLATA=0 AND " _
                '                    & "T_VOCI_BOLLETTA.ID= BOL_BOLLETTE_VOCI.ID_VOCE AND T_VOCI_BOLLETTA.COMPETENZA = 3 AND " _
                '                    & " BOL_BOLLETTE.ID_CONTRATTO = " & IdContratto _
                '                    & " AND BOL_BOLLETTE.importo_pagato IS NOT NULL"
                'Dim ReaderPep As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader
                'Dim QuoteSindIncass As Double = 0
                'If ReaderPep.Read Then
                '    QuoteSindIncass = par.IfNull(ReaderPep("QUOTE_SINDACALI_PAGATE"), 0)
                'End If
                'ReaderPep.Close()

                ''fine quote sindacali incassate
                ''par.cmd.CommandText = "SELECT SUM(IMPORTO_PAGATO) AS IMPORTO_PAGATO FROM SISCOM_MI.BOL_BOLLETTE WHERE ID_CONTRATTO = " & IdContratto & ""
                'par.cmd.CommandText = "SELECT SUM(IMPORTO_PAGATO) AS IMPORTO_PAGATO FROM SISCOM_MI.BOL_BOLLETTE  WHERE ID_CONTRATTO = " & IdContratto '& " AND BOL_BOLLETTE.ID_TIPO <> 5"
                'myReader3 = par.cmd.ExecuteReader()
                'If myReader3.Read Then
                '    incassato = (par.IfNull(myReader3("IMPORTO_PAGATO"), 0) - QuoteSindIncass)
                '    If incassato < 0 Then
                '        incassato = 0
                '    End If
                '    Saldo = EmessoContabile - incassato
                '    TotSaldo = TotSaldo + Saldo
                '    TotIncassato = TotIncassato + (par.IfNull(myReader3("IMPORTO_PAGATO"), 0) - QuoteSindIncass)

                '    Saldo = 0
                'End If
                'myReader3.Close()


                '*********************CHIUSURA CONNESSIONE**********************
                If ConOpenNow = True Then
                    cmd.Dispose()
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If

                CalcolaSaldoAttuale = TotSaldo

            Catch ex As Exception
                CalcolaSaldoAttuale = 0
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function





        Public Function CalcolaInteressiLegali(ByVal DataCalcolo As String, ByVal DataInizioCalcolo As String, ByVal Importo As Double) As Double
            Dim par As New CM.Global
            Dim Giorni As Long = 0
            Dim GiorniAnno As Long = 0
            Dim dataPartenza As String = DataInizioCalcolo
            Dim Totale As Double = 0
            Dim TotalePeriodo As Double = 0
            Dim KK As Long = 0
            Dim DataFine As String = ""
            Dim tasso As Double = 0
            Try

                Dim Interessi As New SortedDictionary(Of Integer, Double)
                Interessi.Clear()

                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select * from siscom_mi.tab_interessi_legaLI order by anno desc"
                Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                Do While myReaderA.Read
                    Interessi.Add(myReaderA("anno"), myReaderA("tasso"))
                Loop
                myReaderA.Close()

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

                CalcolaInteressiLegali = 0

                For KK = CInt(Mid(DataInizioCalcolo, 1, 4)) To CInt(Mid(DataCalcolo, 1, 4))

                    If KK = CInt(Mid(DataCalcolo, 1, 4)) Then
                        DataFine = par.FormattaData(DataCalcolo)
                    Else
                        DataFine = "31/12/" & KK
                    End If

                    GiorniAnno = DateDiff(DateInterval.Day, CDate("01/01/" & KK), CDate("31/12/" & KK)) + 1

                    Giorni = DateDiff(DateInterval.Day, CDate(par.FormattaData(dataPartenza)), CDate(DataFine)) + 1

                    If KK < 1990 Then
                        tasso = 5
                    Else
                        If Interessi.ContainsKey(KK) = True Then
                            tasso = Interessi(KK)
                        End If
                    End If

                    TotalePeriodo = (((Importo * tasso) / 100) / GiorniAnno) * Giorni
                    Totale = Totale + TotalePeriodo

                    dataPartenza = KK + 1 & "0101"

                Next
                CalcolaInteressiLegali = Format(Totale, "0.00")
            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                CalcolaInteressiLegali = -1
            End Try
        End Function

        Public Function ConfrontaAU(ByVal IndiceAUNuova As Long, ByVal IndiceAUVecchia As Long, ByRef Descrizione As String) As Integer
            'questa funzione confronta i valori reddituali e patrimoniali dei singoli componenti tra NuovaAU e VecchiaAU
            'i valori restituiti sono:

            '1=Differenze di reddito
            '2=Differenze di Patrimonio
            '3=Differenze di Reddito e Patrimonio
            '4=Nessuna Differenza

            '50=Differenza solo nucleo
            '51=Differenze Nucleo e Differenze di reddito
            '52=Differenze Nucleo e Differenze di Patrimonio
            '53=Differenze Nucleo e di Reddito e Patrimonio

            '0=Errore/Nessun confronto effettuato

            'Nella variabile descrizione maggiori informazioni sul risultato


            Dim par As New CM.Global
            Dim NumCNuova As Integer = 0
            Dim NumCVecchia As Integer = 0
            Dim NumErrore As Integer = 0
            Dim DifferenzaIrpef As Integer = 0
            Dim DifferenzaPatrimonio As Integer = 0
            Dim TotIrpefNuova As Double = 0
            Dim TotIrpefVecchia As Double = 0
            Dim Trovato As Boolean = False
            Dim TotPatrNuova As Double = 0
            Dim TotPatrVecchia As Double = 0

            Try
                ConfrontaAU = 0

                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select count(id) from utenza_comp_nucleo where id_dichiarazione=" & IndiceAUNuova
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    NumCNuova = myReader(0)
                End If
                myReader.Close()

                par.cmd.CommandText = "select count(id) from utenza_comp_nucleo where id_dichiarazione=" & IndiceAUVecchia
                myReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    NumCVecchia = myReader(0)
                End If
                myReader.Close()

                If NumCNuova > NumCVecchia Then
                    Descrizione = "Numero componenti maggiore nella nuova AU rispetto alla vecchia AU/"
                    NumErrore = 50
                ElseIf NumCNuova < NumCVecchia Then
                    Descrizione = "Numero componenti minore nella nuova AU rispetto alla vecchia AU/"
                    NumErrore = 50
                End If

                DifferenzaIrpef = 0
                DifferenzaPatrimonio = 0

                par.cmd.CommandText = "select * from utenza_comp_nucleo where id_dichiarazione=" & IndiceAUNuova
                myReader = par.cmd.ExecuteReader()
                Do While myReader.Read
                    TotIrpefNuova = 0
                    TotIrpefVecchia = 0
                    TotPatrNuova = 0
                    TotPatrVecchia = 0

                    'redditi irpef componente nuovo
                    par.cmd.CommandText = "select sum(reddito_irpef) from UTENZA_COMP_REDDITO where id_componente=" & myReader("id")
                    Dim myReaderIrpefNuova As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderIrpefNuova.Read Then
                        TotIrpefNuova = IfNull(myReaderIrpefNuova(0), 0)
                    End If
                    myReaderIrpefNuova.Close()

                    par.cmd.CommandText = "select sum(importo) from UTENZA_COMP_ALTRI_REDDITI where id_componente=" & myReader("id")
                    myReaderIrpefNuova = par.cmd.ExecuteReader()
                    If myReaderIrpefNuova.Read Then
                        TotIrpefNuova = TotIrpefNuova + IfNull(myReaderIrpefNuova(0), 0)
                    End If
                    myReaderIrpefNuova.Close()

                    par.cmd.CommandText = "select sum(importo) from UTENZA_COMP_DETRAZIONI where id_componente=" & myReader("id")
                    myReaderIrpefNuova = par.cmd.ExecuteReader()
                    If myReaderIrpefNuova.Read Then
                        TotIrpefNuova = TotIrpefNuova + IfNull(myReaderIrpefNuova(0), 0)
                    End If
                    myReaderIrpefNuova.Close()
                    par.cmd.CommandText = "select sum(prov_agrari) from UTENZA_COMP_REDDITO where id_componente=" & myReader("id")
                    myReaderIrpefNuova = par.cmd.ExecuteReader()
                    If myReaderIrpefNuova.Read Then
                        TotIrpefNuova = TotIrpefNuova + IfNull(myReaderIrpefNuova(0), 0)
                    End If
                    myReaderIrpefNuova.Close()


                    'patrimonio componente nuovo
                    par.cmd.CommandText = "select sum(valore) from UTENZA_COMP_PATR_IMMOB where id_componente=" & myReader("id")
                    Dim myReaderPatrNuova As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderPatrNuova.Read Then
                        TotPatrNuova = IfNull(myReaderPatrNuova(0), 0)
                    End If
                    myReaderPatrNuova.Close()
                    par.cmd.CommandText = "select sum(valore) from UTENZA_COMP_PATR_MOB where id_componente=" & myReader("id")
                    myReaderPatrNuova = par.cmd.ExecuteReader()
                    If myReaderPatrNuova.Read Then
                        TotPatrNuova = TotPatrNuova + IfNull(myReaderPatrNuova(0), 0)
                    End If
                    myReaderPatrNuova.Close()

                    Trovato = False
                    par.cmd.CommandText = "select * from utenza_comp_nucleo where id_dichiarazione=" & IndiceAUVecchia
                    Dim myReaderVecchia As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    Do While myReaderVecchia.Read
                        If UCase(par.IfNull(myReader("cod_fiscale"), "")) = UCase(par.IfNull(myReaderVecchia("cod_fiscale"), "")) Then
                            'redditi irpef componente vecchio
                            par.cmd.CommandText = "select sum(reddito_irpef) from UTENZA_COMP_REDDITO where id_componente=" & myReaderVecchia("id")
                            Dim myReaderIrpefVecchia As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                            If myReaderIrpefVecchia.Read Then
                                TotIrpefVecchia = IfNull(myReaderIrpefVecchia(0), 0)
                            End If
                            myReaderIrpefVecchia.Close()

                            par.cmd.CommandText = "select sum(importo) from UTENZA_COMP_ALTRI_REDDITI where id_componente=" & myReaderVecchia("id")
                            myReaderIrpefVecchia = par.cmd.ExecuteReader()
                            If myReaderIrpefVecchia.Read Then
                                TotIrpefVecchia = TotIrpefVecchia + IfNull(myReaderIrpefVecchia(0), 0)
                            End If
                            myReaderIrpefVecchia.Close()

                            par.cmd.CommandText = "select sum(importo) from UTENZA_COMP_DETRAZIONI where id_componente=" & myReaderVecchia("id")
                            myReaderIrpefVecchia = par.cmd.ExecuteReader()
                            If myReaderIrpefVecchia.Read Then
                                TotIrpefVecchia = TotIrpefVecchia + IfNull(myReaderIrpefVecchia(0), 0)
                            End If
                            myReaderIrpefVecchia.Close()
                            par.cmd.CommandText = "select sum(prov_agrari) from UTENZA_COMP_REDDITO where id_componente=" & myReaderVecchia("id")
                            myReaderIrpefVecchia = par.cmd.ExecuteReader()
                            If myReaderIrpefVecchia.Read Then
                                TotIrpefVecchia = TotIrpefVecchia + IfNull(myReaderIrpefVecchia(0), 0)
                            End If
                            myReaderIrpefVecchia.Close()

                            'patrimonio componente vecchio
                            par.cmd.CommandText = "select sum(valore) from UTENZA_COMP_PATR_IMMOB where id_componente=" & myReaderVecchia("id")
                            Dim myReaderPatrVechia As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                            If myReaderPatrNuova.Read Then
                                TotPatrVecchia = IfNull(myReaderPatrVechia(0), 0)
                            End If
                            myReaderPatrVechia.Close()
                            par.cmd.CommandText = "select sum(valore) from UTENZA_COMP_PATR_MOB where id_componente=" & myReaderVecchia("id")
                            myReaderPatrVechia = par.cmd.ExecuteReader()
                            If myReaderPatrVechia.Read Then
                                TotPatrVecchia = TotPatrVecchia + IfNull(myReaderPatrVechia(0), 0)
                            End If
                            myReaderPatrVechia.Close()

                            Trovato = True
                            If TotIrpefNuova <> TotIrpefVecchia Then
                                DifferenzaIrpef = 1
                            End If
                            If TotPatrNuova <> TotPatrVecchia Then
                                DifferenzaPatrimonio = 1
                            End If

                        End If
                    Loop
                    myReaderVecchia.Close()
                    If Trovato = False Then
                        Descrizione = Descrizione & "Il componente cod. fiscale " & par.IfNull(myReader("cod_fiscale"), "") & " non era presente nella vecchia AU/"
                        NumErrore = 50
                    End If
                Loop
                myReader.Close()

                If NumErrore = 50 Then
                    If DifferenzaIrpef = 1 And DifferenzaPatrimonio = 1 Then
                        ConfrontaAU = 53
                    End If
                    If DifferenzaIrpef = 1 And DifferenzaPatrimonio = 0 Then
                        ConfrontaAU = 51
                    End If
                    If DifferenzaIrpef = 0 And DifferenzaPatrimonio = 1 Then
                        ConfrontaAU = 52
                    End If
                    If DifferenzaIrpef = 0 And DifferenzaPatrimonio = 0 Then
                        ConfrontaAU = 50
                    End If
                Else
                    If DifferenzaIrpef = 1 And DifferenzaPatrimonio = 1 Then
                        ConfrontaAU = 3
                    End If
                    If DifferenzaIrpef = 1 And DifferenzaPatrimonio = 0 Then
                        ConfrontaAU = 1
                    End If
                    If DifferenzaIrpef = 0 And DifferenzaPatrimonio = 1 Then
                        ConfrontaAU = 2
                    End If
                    If DifferenzaIrpef = 0 And DifferenzaPatrimonio = 0 Then
                        ConfrontaAU = 4
                    End If
                End If

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                ConfrontaAU = 0
                Descrizione = ex.Message
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            End Try
        End Function

        Public Function SoluzioneUnica(ByVal Canone As Double, ByVal Anni As Integer, ByVal Percentuale As String) As Double
            Dim par As New CM.Global
            Dim tasso As Double = 0
            Dim imposta As Double = 0

            Try
                SoluzioneUnica = 0

                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select * from siscom_mi.tab_interessi_legali order by anno desc"
                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderW.Read Then
                    tasso = myReaderW("tasso")
                End If
                myReaderW.Close()

                If tasso > 0 Then
                    imposta = Format(((Canone * Anni) * Percentuale) / 100, "0")
                    SoluzioneUnica = Format(imposta - ((imposta * ((tasso / 2) * Anni)) / 100), "0")
                End If

                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                SoluzioneUnica = -1
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function
        Public Function NomeFile(ByVal tipo As String, ByVal id As Integer) As String
            NomeFile = ""
            Dim connOpenNow As Boolean = False
            Dim par As New CM.Global
            Dim progr As String = ""
            Dim repert As String = ""


            If Not String.IsNullOrEmpty(tipo) Then
                If par.OracleConn.State = Data.ConnectionState.Closed Then
                    par.OracleConn.Open()
                    par.SettaCommand(par)
                    connOpenNow = True
                End If

                Select Case tipo

                    Case "MAN"
                        par.cmd.CommandText = "select progr||'_'||anno from siscom_mi.manutenzioni where id = " & id
                        progr = par.cmd.ExecuteScalar

                        par.cmd.CommandText = "select num_repertorio from siscom_mi.appalti where id = (select id_appalto from siscom_mi.manutenzioni where id = " & id & ")"
                        repert = par.cmd.ExecuteScalar

                    Case "SAL"
                        par.cmd.CommandText = "select progr_appalto||'_'||anno from siscom_mi.pagamenti where id = " & id
                        progr = par.cmd.ExecuteScalar


                        par.cmd.CommandText = "select num_repertorio from siscom_mi.appalti where id = (select id_appalto from siscom_mi.pagamenti where id = " & id & ")"
                        repert = par.cmd.ExecuteScalar



                    Case "CDP"
                        par.cmd.CommandText = "select progr||'_'||anno from siscom_mi.pagamenti where id = " & id
                        progr = par.cmd.ExecuteScalar

                        par.cmd.CommandText = "select num_repertorio from siscom_mi.appalti where id = (select id_appalto from siscom_mi.pagamenti where id = " & id & ")"
                        repert = par.cmd.ExecuteScalar


                    Case Else

                End Select

                If Not String.IsNullOrEmpty(progr) Then
                    NomeFile &= progr

                End If
                If Not String.IsNullOrEmpty(repert) Then
                    NomeFile &= "_" & repert.Replace("/", "_")
                End If

                If Not String.IsNullOrEmpty(NomeFile) Then
                    NomeFile &= "_" & Format(Now, "yyyyMMddHHmmss")
                Else
                    NomeFile = Format(Now, "yyyyMMddHHmmss")
                End If

                If connOpenNow = True Then
                    par.OracleConn.Close()
                End If

            End If


            Return NomeFile
        End Function
        Public Function NomeFileManut(ByVal tipo As String, ByVal id As Integer) As String
            NomeFileManut = ""
            Dim connOpenNow As Boolean = False
            Dim par As New CM.Global
            Dim progr As String = ""
            Dim repert As String = ""


            If Not String.IsNullOrEmpty(tipo) Then
                If par.OracleConn.State = Data.ConnectionState.Closed Then
                    par.OracleConn.Open()
                    par.SettaCommand(par)
                    connOpenNow = True
                End If

                Select Case tipo

                    Case "MAN"
                        par.cmd.CommandText = "select progr||'_'||anno from siscom_mi.manutenzioni where id = " & id
                        progr = par.cmd.ExecuteScalar

                        par.cmd.CommandText = "select num_repertorio from siscom_mi.appalti where id = (select id_appalto from siscom_mi.manutenzioni where id = " & id & ")"
                        repert = par.cmd.ExecuteScalar

                        NomeFileManut = "Ordine_"
                    Case "SAL"
                        par.cmd.CommandText = "select progr_appalto||'_'||anno from siscom_mi.pagamenti where id = " & id
                        progr = par.cmd.ExecuteScalar


                        par.cmd.CommandText = "select num_repertorio from siscom_mi.appalti where id = (select id_appalto from siscom_mi.pagamenti where id = " & id & ")"
                        repert = par.cmd.ExecuteScalar
                        NomeFileManut = "AttSAL_"


                    Case "CDP"
                        par.cmd.CommandText = "select progr||'_'||anno from siscom_mi.pagamenti where id = " & id
                        progr = par.cmd.ExecuteScalar

                        par.cmd.CommandText = "select num_repertorio from siscom_mi.appalti where id = (select id_appalto from siscom_mi.pagamenti where id = " & id & ")"
                        repert = par.cmd.ExecuteScalar

                        NomeFileManut = "AttPagamento_"
                    Case "ODP"
                        par.cmd.CommandText = "select progr||'_'||anno from siscom_mi.pagamenti where id = " & id
                        progr = par.cmd.ExecuteScalar
                        repert = ""
                        NomeFileManut = "AttPagamento_"
                    Case "PRENODP"
                        par.cmd.CommandText = "select ODL.progr||'_'||ODL.anno FROM SISCOM_MI.ODL,SISCOM_MI.PRENOTAZIONI where PRENOTAZIONI.ID=ODL.ID_PRENOTAZIONE (+)  AND PRENOTAZIONI.ID= " & id
                        progr = par.cmd.ExecuteScalar
                        repert = ""
                        NomeFileManut = "Impegno_"

                    Case Else

                End Select

                If Not String.IsNullOrEmpty(progr) Then
                    NomeFileManut &= progr

                End If
                If Not String.IsNullOrEmpty(repert) Then
                    NomeFileManut &= "_" & repert.Replace("/", "_")
                End If

                If Not String.IsNullOrEmpty(NomeFileManut) Then
                    NomeFileManut &= "_" & Format(Now, "yyyyMMddHHmmss")
                Else
                    NomeFileManut &= Format(Now, "yyyyMMddHHmmss")
                End If

                If connOpenNow = True Then
                    par.OracleConn.Close()
                End If

            End If


            Return NomeFileManut
        End Function
		Public Sub RicavaBPcredito(ByVal IDG As Long, ByRef HFIdVocePF As Integer, ByRef HFidVoceInteressi As Integer, ByRef HFidStruttura As Integer,
                ByRef HFidFornitore As Integer, ByRef HFdocRestCred As Integer, Optional cambioIntUSD As Boolean = False)

            Dim par As New CM.Global
            Dim idTipoGest As String = ""

            par.OracleConn.Open()
            par.SettaCommand(par)

            If cambioIntUSD = True Then
                par.cmd.CommandText = "select VALORE FROM SISCOM_MI.PARAMETRI_BOLLETTA WHERE ID=60"
                Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderA.HasRows = True Then
                    If myReaderA.Read Then
                        idTipoGest = par.IfNull(myReaderA("VALORE"), "")
                    End If
                End If
                myReaderA.Close()
            Else
                par.cmd.CommandText = "select id_tipo from siscom_mi.bol_bollette_gest where id in (" & IDG & ")"
                idTipoGest = par.IfNull(par.cmd.ExecuteScalar, "-1")
            End If


            par.cmd.CommandText = "select max(id) from siscom_mi.pf_voci where ID_PIANO_FINANZIARIO=" & par.RicavaPianoUltimoApprovato & " and " _
                & "codice in (select distinct codice_pf_voce from siscom_mi.TAB_GEST_REST_CREDITO where id_tipo_gest in (" & idTipoGest & "))"
            Dim lettoreBP As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
            If lettoreBP.Read Then
                HFIdVocePF = par.IfNull(lettoreBP(0), -1)
            End If
            lettoreBP.Close()

            par.cmd.CommandText = "select max(id) from siscom_mi.pf_voci where ID_PIANO_FINANZIARIO=" & par.RicavaPianoUltimoApprovato & " and " _
                & "codice in (select distinct codice_pf_voce from siscom_mi.TAB_GEST_REST_CREDITO where id_tipo_gest=57)"
            lettoreBP = par.cmd.ExecuteReader()
            If lettoreBP.Read Then
                HFidVoceInteressi = par.IfNull(lettoreBP(0), -1)
            End If
            lettoreBP.Close()

            If HFIdVocePF = -1 Then
                par.cmd.CommandText = "select id from siscom_mi.pf_voci where ID_PIANO_FINANZIARIO=" & par.RicavaPianoUltimoApprovato & " and codice = (select codice_pf_voce from siscom_mi.TAB_GEST_REST_CREDITO where id_tipo_gest is null)"
                Dim lettoreBP2 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If lettoreBP2.Read Then
                    HFIdVocePF = par.IfNull(lettoreBP2(0), -1)
                End If
                lettoreBP2.Close()
            End If

            par.cmd.CommandText = "select * from siscom_mi.TAB_GEST_REST_CREDITO where id_tipo_gest in (" & idTipoGest & ")"
            Dim lettoreBP3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
            If Not lettoreBP3.HasRows Then
                par.cmd.CommandText = "select * from siscom_mi.TAB_GEST_REST_CREDITO where id_tipo_gest is null"
                Dim lettoreBP2 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If lettoreBP2.Read Then
                    HFidFornitore = par.IfNull(lettoreBP2("id_fornitore"), -1)
                    HFidStruttura = par.IfNull(lettoreBP2("id_struttura"), -1)
                    HFdocRestCred = par.IfNull(lettoreBP2("id_doc_rest_credito"), -1)
                End If
                lettoreBP2.Close()
            Else
                HFidFornitore = par.IfNull(lettoreBP3("id_fornitore"), "-1")
                HFidStruttura = par.IfNull(lettoreBP3("id_struttura"), "-1")
                HFdocRestCred = par.IfNull(lettoreBP3("id_doc_rest_credito"), "-1")
            End If
            lettoreBP3.Close()

            par.cmd.Dispose()
            par.OracleConn.Close()
            Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

        End Sub
        Function RicavaPianoUltimoApprovato() As Long
            Dim par As New CM.Global

            Try

                RicavaPianoUltimoApprovato = 0
                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select * from SISCOM_MI.PF_MAIN where ID_STATO=5 order by ID desc"

                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderW.Read Then
                    RicavaPianoUltimoApprovato = par.IfNull(myReaderW("ID"), 0)
                End If
                myReaderW.Close()

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()

            End Try
        End Function

        Public Function AnnoBPPag(ByVal idPagamento As Integer, Optional ByVal rit_legge As Boolean = False) As String
            AnnoBPPag = ""
            Dim connOpenNow As Boolean = False
            Dim par As New CM.Global

            If par.OracleConn.State = Data.ConnectionState.Closed Then
                par.OracleConn.Open()
                par.SettaCommand(par)
                connOpenNow = True
            End If

            If rit_legge Then
                par.cmd.CommandText = "SELECT DISTINCT RTRIM (LTRIM (SUBSTR (inizio, 1, 4))) AS annoBp " _
                                & "  FROM siscom_mi.T_ESERCIZIO_FINANZIARIO " _
                                & " WHERE id IN (select id_esercizio_finanziario from siscom_mi.pf_main where id in " _
                                & "  (SELECT DISTINCT id_piano_finanziario " _
                                & "          FROM siscom_mi.pf_voci " _
                                & " WHERE id IN (SELECT id_voce_pf " _
                                & " FROM siscom_mi.prenotazioni " _
                                & " WHERE id_pagamento_rit_legge = " & idPagamento & "))) "
            Else
                par.cmd.CommandText = "SELECT DISTINCT RTRIM (LTRIM (SUBSTR (inizio, 1, 4))) AS annoBp " _
                                & "  FROM siscom_mi.T_ESERCIZIO_FINANZIARIO " _
                                & " WHERE id IN (select id_esercizio_finanziario from siscom_mi.pf_main where id in " _
                                & "  (SELECT DISTINCT id_piano_finanziario " _
                                & "          FROM siscom_mi.pf_voci " _
                                & " WHERE id IN (SELECT id_voce_pf " _
                                & " FROM siscom_mi.prenotazioni " _
                                & " WHERE id_pagamento = " & idPagamento & "))) "
            End If


            Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(par.cmd)
            Dim dt As New Data.DataTable
            da.Fill(dt)
            For Each r As Data.DataRow In dt.Rows
                If String.IsNullOrEmpty(AnnoBPPag) Then
                    AnnoBPPag &= r.Item("annoBP").ToString
                Else
                    AnnoBPPag &= " - " & r.Item("annoBP").ToString
                End If
            Next
            If connOpenNow = True Then
                par.OracleConn.Close()
            End If
            Return AnnoBPPag
        End Function
        Public Sub VerificaImportoMinimo(ByVal numRate As Integer, ByVal importoRata As Decimal, ByVal qCapitale As Decimal, ByVal dataEmissione As String, ByVal tasso As Decimal, ByVal giorniscad As Integer, ByRef msg As String)


            Dim dtVerifica As New Data.DataTable
            If numRate = 0 Then
                dtVerifica = AmmortamentoPerRata(qCapitale, importoRata, tasso, 12, dataEmissione, giorniscad)
            Else
                dtVerifica = Ammortamento(qCapitale, numRate, tasso, 12, dataEmissione, giorniscad)

            End If

            Dim rMin As Decimal = 0
            Dim qCapitali As Decimal = 0

            rMin = 20 + dtVerifica.Select("NUMRATA = 1")(0).Item("QUOTAINTERESSI")
            qCapitali = dtVerifica.Select("NUMRATA = 1")(0).Item("QUOTACAPITALI")
            If numRate <> 0 Then
                importoRata = qCapitali + dtVerifica.Select("NUMRATA = 1")(0).Item("QUOTAINTERESSI")
            End If

            If importoRata < rMin Then
                msg = "Importo rata inferiore al minimo di €." & rMin
            End If
            If String.IsNullOrEmpty(msg) Then
                If qCapitali < 0 Then
                    msg = "Importo quota capitali inferiore a zero"
                End If

            End If

        End Sub


        Public Function Ammortamento(ByVal ImportoDaFinanziare As Decimal, ByVal NumeroRate As Integer, ByVal TassoInteresse As Decimal, ByVal FrequenzaInMesi As Integer, ByVal DataEmissione As String, ByVal giorni As Integer) As Data.DataTable
            '*************funzione modificata e corretta 22/08/2011 per eliminare il più possibile gli errori dovuti agli arrotondamenti (siamo nell'ordine di 1 centesimo!)
            Dim DT As New Data.DataTable
            Dim ImportoRata As Decimal = 0
            Dim DurataAnni As Decimal = NumeroRate / 12
            Dim i As Integer = 0
            Dim ImportoResiduo As Decimal = 0
            Dim InteresseRata As Decimal = ((1 + (TassoInteresse / 100)) ^ (1 / FrequenzaInMesi) - 1) * 100
            Dim quotaInteressi As Decimal = 0
            Dim quotaCapitale As Decimal = 0
            ImportoRata = (ImportoDaFinanziare * ((1 + (TassoInteresse / 100)) ^ (1 / FrequenzaInMesi) - 1)) / (1 - ((((1 + (TassoInteresse / 100)) ^ (1 / FrequenzaInMesi) - 1) + 1) ^ (NumeroRate * -1)))
            DT.Columns.Add("NUMRATA")
            DT.Columns.Add("EMISSIONE")
            DT.Columns.Add("SCADENZA")
            DT.Columns.Add("IMPORTORATA")
            DT.Columns.Add("QUOTACAPITALI")
            DT.Columns.Add("QUOTAINTERESSI")
            DT.Columns.Add("IMPORTORESIDUO")
            Dim RIGA As System.Data.DataRow
            ImportoResiduo = ImportoDaFinanziare

            Dim dataScad As String
            Dim giornoScad As Integer = giorni
            Dim d1 As Date

            '************

            For i = 0 To NumeroRate - 1

                dataScad = AggiustaData(giorni & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4))
                d1 = New Date(Mid(dataScad, 1, 4), Mid(dataScad, 5, 2), Mid(dataScad, 7, 2))
                If d1.DayOfWeek = DayOfWeek.Saturday Then
                    giornoScad = 19
                ElseIf d1.DayOfWeek = DayOfWeek.Sunday Then
                    giornoScad = 18
                Else
                    giornoScad = 20
                End If


                RIGA = DT.NewRow()
                RIGA.Item("NUMRATA") = i + 1
                RIGA.Item("EMISSIONE") = (DataEmissione)
                RIGA.Item("SCADENZA") = giornoScad & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4)
                RIGA.Item("IMPORTORATA") = Format(ImportoRata, "0.00")
                quotaInteressi = Math.Round((InteresseRata * ImportoResiduo) / 100, 4)
                quotaCapitale = ImportoRata - quotaInteressi

                '*serve ad eliminare l'errore degli arrotondamenti. Viene adeguata la quota capitale per correggere gli importi!
                If ImportoRata <> (quotaCapitale + quotaInteressi) Then
                    quotaCapitale = quotaCapitale + (ImportoRata - (quotaCapitale + quotaInteressi))
                End If

                ImportoResiduo = ImportoResiduo - quotaCapitale


                If ImportoResiduo < 0 Then
                    ImportoResiduo = 0
                End If

                RIGA.Item("QUOTACAPITALI") = Format(quotaCapitale, "0.00")
                RIGA.Item("QUOTAINTERESSI") = Format(quotaInteressi, "0.00")
                RIGA.Item("IMPORTORESIDUO") = Format(ImportoResiduo, "0.00")
                DT.Rows.Add(RIGA)
                DataEmissione = Date.Parse(DataEmissione).AddMonths(1).ToString("dd/MM/yyyy")
            Next
            Ammortamento = DT

        End Function

        Public Function AmmortamentoPerRata(ByVal ImportoDaFinanziare As Double, ByVal ImportoRata As Double, ByVal TassoInteresse As Double, ByVal FrequenzaInMesi As Integer, ByVal DataEmissione As String, ByVal giorni As Integer, Optional ByVal NumeroRate As Integer = 0) As Data.DataTable

            Dim DT As New Data.DataTable
            Dim QuotaRimanente As Double = 0

            Dim i As Integer = 0
            Dim ImportoResiduo As Double = 0
            Dim InteresseRata As Double = ((1 + (TassoInteresse / 100)) ^ (1 / FrequenzaInMesi) - 1) * 100 'ATTENZIONE
            Dim quotaInteressi As Double = 0
            Dim quotaCapitale As Double = 0

            Dim dataScad As String
            Dim giornoScad As Integer = giorni
            Dim d1 As Date


            DT.Columns.Add("NUMRATA")
            DT.Columns.Add("EMISSIONE")
            DT.Columns.Add("SCADENZA")
            DT.Columns.Add("IMPORTORATA")
            DT.Columns.Add("QUOTACAPITALI")
            DT.Columns.Add("QUOTAINTERESSI")
            DT.Columns.Add("IMPORTORESIDUO")
            Dim RIGA As System.Data.DataRow
            ImportoResiduo = ImportoDaFinanziare
            QuotaRimanente = ImportoDaFinanziare

            If NumeroRate = 0 Then
                NumeroRate = 72
            End If

            For i = 0 To NumeroRate - 1
                dataScad = AggiustaData(giorni & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4))
                d1 = New Date(Mid(dataScad, 1, 4), Mid(dataScad, 5, 2), Mid(dataScad, 7, 2))
                If d1.DayOfWeek = DayOfWeek.Saturday Then
                    giornoScad = 19
                ElseIf d1.DayOfWeek = DayOfWeek.Sunday Then
                    giornoScad = 18
                Else
                    giornoScad = 20
                End If

                If ImportoResiduo >= ImportoRata Then
                    RIGA = DT.NewRow()
                    RIGA.Item("NUMRATA") = i + 1
                    RIGA.Item("EMISSIONE") = (DataEmissione)
                    RIGA.Item("SCADENZA") = giornoScad & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4)
                    RIGA.Item("IMPORTORATA") = Format(ImportoRata, "0.00")
                    quotaInteressi = (InteresseRata * ImportoResiduo) / 100
                    RIGA.Item("QUOTAINTERESSI") = Format(quotaInteressi, "0.00")
                    quotaCapitale = ImportoRata - quotaInteressi
                    RIGA.Item("QUOTACAPITALI") = Format(quotaCapitale, "0.00")
                    ImportoResiduo = ImportoResiduo - quotaCapitale
                    RIGA.Item("IMPORTORESIDUO") = Format(ImportoResiduo, "0.00")
                    DT.Rows.Add(RIGA)
                    QuotaRimanente = QuotaRimanente - ImportoRata
                Else
                    RIGA = DT.NewRow()
                    RIGA.Item("NUMRATA") = i + 1
                    RIGA.Item("EMISSIONE") = (DataEmissione)
                    RIGA.Item("SCADENZA") = giornoScad & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4)

                    quotaCapitale = ImportoResiduo
                    quotaInteressi = (InteresseRata * ImportoResiduo) / 100
                    RIGA.Item("IMPORTORATA") = Format(quotaCapitale + quotaInteressi, "0.00")
                    RIGA.Item("QUOTAINTERESSI") = Format(quotaInteressi, "0.00")
                    RIGA.Item("QUOTACAPITALI") = Format(quotaCapitale, "0.00")
                    ImportoResiduo = ImportoResiduo - quotaCapitale
                    RIGA.Item("IMPORTORESIDUO") = Format(ImportoResiduo, "0.00")
                    DT.Rows.Add(RIGA)
                    Exit For
                End If
                DataEmissione = Date.Parse(DataEmissione).AddMonths(1).ToString("dd/MM/yyyy")
            Next
            If ImportoResiduo > 0 Then
                dataScad = AggiustaData(giorni & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4))
                d1 = New Date(Mid(dataScad, 1, 4), Mid(dataScad, 5, 2), Mid(dataScad, 7, 2))
                If d1.DayOfWeek = DayOfWeek.Saturday Then
                    giornoScad = 19
                ElseIf d1.DayOfWeek = DayOfWeek.Sunday Then
                    giornoScad = 18
                Else
                    giornoScad = 20
                End If
                'DataEmissione = Date.Parse(DataEmissione).AddMonths(1).ToString("dd/MM/yyyy")
                RIGA = DT.NewRow()
                RIGA.Item("NUMRATA") = NumeroRate + 1
                RIGA.Item("EMISSIONE") = (DataEmissione)
                RIGA.Item("SCADENZA") = giornoScad & "/" & DataEmissione.Substring(3, 2) & "/" & DataEmissione.Substring(6, 4)
                ImportoRata = ImportoResiduo
                RIGA.Item("IMPORTORATA") = Format(ImportoRata, "0.00")
                'quotaInteressi = (InteresseRata * ImportoResiduo) / 100
                quotaInteressi = 0
                RIGA.Item("QUOTAINTERESSI") = Format(quotaInteressi, "0.00")
                quotaCapitale = ImportoRata - quotaInteressi
                RIGA.Item("QUOTACAPITALI") = Format(quotaCapitale, "0.00")
                ImportoResiduo = ImportoRata - (quotaCapitale + quotaInteressi)
                RIGA.Item("IMPORTORESIDUO") = Format(ImportoResiduo, "0.00")

                DT.Rows.Add(RIGA)
            End If
            AmmortamentoPerRata = DT
        End Function



        Public Function ControllaCAP(ByVal CodiceComune As String, ByVal CAP As String, ByRef Elenco As String) As Boolean
            Dim par As New CM.Global

            Try

                par.OracleConn.Open()
                par.SettaCommand(par)

                ControllaCAP = False
                par.cmd.CommandText = "select * from siscom_mi.tab_cap2 where cod_com='" & CodiceComune & "'"
                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                Do While myReaderW.Read
                    If myReaderW("CAP") = CAP Then
                        ControllaCAP = True
                        Elenco = ""
                        Exit Do
                    Else
                        Elenco = Elenco & myReaderW("CAP") & " - "
                    End If
                Loop
                myReaderW.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                ControllaCAP = False
                Elenco = ex.Message
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try


        End Function

        Public Function CalcolaCodiceFiscale(ByVal cognome As String, ByVal nome As String, ByVal data As String, ByVal codcomune As String, ByVal sesso As String) As String
            CalcolaCodiceFiscale = ""
            Dim Consonanti As String = ""
            Dim Vocali As String = ""
            Dim i As Int64 = 0
            Dim cTemp As String = ""
            Dim CFcalcolato As String = ""
            For i = 1 To Len(cognome)
                cTemp = UCase(Mid(cognome, i, 1))
                If InStr("AEIOU", cTemp) Then
                    If Len(Vocali) < 3 Then
                        Vocali = Vocali & cTemp
                    End If
                Else
                    If Asc(cTemp) > 64 And Asc(cTemp) < 91 And Len(Consonanti) < 3 Then
                        Consonanti = Consonanti & cTemp
                    End If
                End If
            Next
            CFcalcolato = Mid(Consonanti & Vocali & "X", 1, 3)
            Consonanti = ""
            Vocali = ""
            For i = 1 To Len(nome)
                cTemp = UCase(Mid(nome, i, 1))
                If InStr("AEIOU", cTemp) Then
                    If Len(Vocali) < 3 Then
                        Vocali = Vocali & cTemp
                    End If
                Else
                    If Asc(cTemp) > 64 And Asc(cTemp) < 91 And Len(Consonanti) < 4 Then
                        Consonanti = Consonanti & cTemp
                    End If
                End If
                If Len(Consonanti) > 3 Then
                    Consonanti = Mid(Consonanti, 1, 1) & Mid(Consonanti, 3, 2)
                    i = Len(nome)
                End If
            Next
            CFcalcolato = CFcalcolato & Mid(Consonanti & Vocali & "X", 1, 3)
            CFcalcolato = CFcalcolato & Mid(Year(data), 3, 2)
            CFcalcolato = CFcalcolato & Mid("ABCDEHLMPRST", Month(data), 1)
            If sesso = "M" Then
                CFcalcolato = CFcalcolato & Mid(Format(100 + Day(data)), 2, 2)
            Else
                Dim numero As Int64 = Mid(Format(100 + Day(data)), 2, 2)
                numero = numero + 40
                CFcalcolato = CFcalcolato & numero.ToString
            End If
            Dim ConOpenNow As Boolean = False
            If OracleConn.State = System.Data.ConnectionState.Closed Then
                ConOpenNow = True
                OracleConn.Open()
                cmd = OracleConn.CreateCommand()
            End If
            Dim Letto As Boolean = False
            cmd.CommandText = "SELECT COD FROM COMUNI_NAZIONI WHERE COD = '" & PulisciStrSql(codcomune.ToUpper) & "'"
            Dim lettore As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader
            If lettore.Read Then
                CFcalcolato = CFcalcolato & lettore("COD")
                Letto = True
            End If
            lettore.Close()
            If Letto = False Then
                cmd.CommandText = "SELECT COD FROM COMUNI_NAZIONI WHERE ID = " & PulisciStrSql(codcomune.ToUpper)
                lettore = cmd.ExecuteReader
                If lettore.Read Then
                    CFcalcolato = CFcalcolato & lettore("COD")
                    Letto = True
                End If
                lettore.Close()
            End If
            If ConOpenNow = True Then
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End If
            Dim dispari As Boolean = True
            Dim somma As Long = 0
            For indice As Int64 = 0 To 14
                If dispari = True Then
                    Select Case CFcalcolato.Substring(indice, 1).ToUpper
                        Case "0", "A"
                            somma = somma + 1
                        Case "1", "B"
                            somma = somma + 0
                        Case "2", "C"
                            somma = somma + 5
                        Case "3", "D"
                            somma = somma + 7
                        Case "4", "E"
                            somma = somma + 9
                        Case "5", "F"
                            somma = somma + 13
                        Case "6", "G"
                            somma = somma + 15
                        Case "7", "H"
                            somma = somma + 17
                        Case "8", "I"
                            somma = somma + 19
                        Case "9", "J"
                            somma = somma + 21
                        Case "K"
                            somma = somma + 2
                        Case "L"
                            somma = somma + 4
                        Case "M"
                            somma = somma + 18
                        Case "N"
                            somma = somma + 20
                        Case "O"
                            somma = somma + 11
                        Case "P"
                            somma = somma + 3
                        Case "Q"
                            somma = somma + 6
                        Case "R"
                            somma = somma + 8
                        Case "S"
                            somma = somma + 12
                        Case "T"
                            somma = somma + 14
                        Case "U"
                            somma = somma + 16
                        Case "V"
                            somma = somma + 10
                        Case "W"
                            somma = somma + 22
                        Case "X"
                            somma = somma + 25
                        Case "Y"
                            somma = somma + 24
                        Case "Z"
                            somma = somma + 23
                    End Select
                    dispari = False
                Else
                    Select Case CFcalcolato.Substring(indice, 1)
                        Case "0", "A"
                            somma = somma + 0
                        Case "1", "B"
                            somma = somma + 1
                        Case "2", "C"
                            somma = somma + 2
                        Case "3", "D"
                            somma = somma + 3
                        Case "4", "E"
                            somma = somma + 4
                        Case "5", "F"
                            somma = somma + 5
                        Case "6", "G"
                            somma = somma + 6
                        Case "7", "H"
                            somma = somma + 7
                        Case "8", "I"
                            somma = somma + 8
                        Case "9", "J"
                            somma = somma + 9
                        Case "K"
                            somma = somma + 10
                        Case "L"
                            somma = somma + 11
                        Case "M"
                            somma = somma + 12
                        Case "N"
                            somma = somma + 13
                        Case "O"
                            somma = somma + 14
                        Case "P"
                            somma = somma + 15
                        Case "Q"
                            somma = somma + 16
                        Case "R"
                            somma = somma + 17
                        Case "S"
                            somma = somma + 18
                        Case "T"
                            somma = somma + 19
                        Case "U"
                            somma = somma + 20
                        Case "V"
                            somma = somma + 21
                        Case "W"
                            somma = somma + 22
                        Case "X"
                            somma = somma + 23
                        Case "Y"
                            somma = somma + 24
                        Case "Z"
                            somma = somma + 25
                    End Select
                    dispari = True
                End If
            Next
            Select Case somma Mod 26
                Case 0
                    CFcalcolato = CFcalcolato & "A"
                Case 1
                    CFcalcolato = CFcalcolato & "B"
                Case 2
                    CFcalcolato = CFcalcolato & "C"
                Case 3
                    CFcalcolato = CFcalcolato & "D"
                Case 4
                    CFcalcolato = CFcalcolato & "E"
                Case 5
                    CFcalcolato = CFcalcolato & "F"
                Case 6
                    CFcalcolato = CFcalcolato & "G"
                Case 7
                    CFcalcolato = CFcalcolato & "H"
                Case 8
                    CFcalcolato = CFcalcolato & "I"
                Case 9
                    CFcalcolato = CFcalcolato & "J"
                Case 10
                    CFcalcolato = CFcalcolato & "K"
                Case 11
                    CFcalcolato = CFcalcolato & "L"
                Case 12
                    CFcalcolato = CFcalcolato & "M"
                Case 13
                    CFcalcolato = CFcalcolato & "N"
                Case 14
                    CFcalcolato = CFcalcolato & "O"
                Case 15
                    CFcalcolato = CFcalcolato & "P"
                Case 16
                    CFcalcolato = CFcalcolato & "Q"
                Case 17
                    CFcalcolato = CFcalcolato & "R"
                Case 18
                    CFcalcolato = CFcalcolato & "S"
                Case 19
                    CFcalcolato = CFcalcolato & "T"
                Case 20
                    CFcalcolato = CFcalcolato & "U"
                Case 21
                    CFcalcolato = CFcalcolato & "V"
                Case 22
                    CFcalcolato = CFcalcolato & "W"
                Case 23
                    CFcalcolato = CFcalcolato & "X"
                Case 24
                    CFcalcolato = CFcalcolato & "Y"
                Case 25
                    CFcalcolato = CFcalcolato & "Z"
            End Select
            CalcolaCodiceFiscale = CFcalcolato
        End Function

        Function VerificaPI(ByVal pi As String) As Boolean
            VerificaPI = False

            If Len(pi) <> 11 Then
                VerificaPI = False
                Exit Function
            End If

            If IsNumeric(pi) = False Then
                VerificaPI = False
                Exit Function
            End If
            Dim s As Integer = 0
            Dim i As Integer = 0

            For i = 1 To 9
                If Val(Mid(pi, i, 1)) Mod 2 <> 0 Then
                    s = s + Val(Mid(pi, i, 1))
                End If
            Next

            If Val(Mid(pi, 2, 1)) * 2 <= 9 Then
                s = s + Val(Mid(pi, 2, 1)) * 2
            Else
                s = s + ((Val(Mid(pi, 2, 1)) * 2) - 9)
            End If

            If Val(Mid(pi, 4, 1)) * 2 <= 9 Then
                s = s + Val(Mid(pi, 4, 1)) * 2
            Else
                s = s + ((Val(Mid(pi, 4, 1)) * 2) - 9)
            End If

            If Val(Mid(pi, 6, 1)) * 2 <= 9 Then
                s = s + Val(Mid(pi, 6, 1)) * 2
            Else
                s = s + ((Val(Mid(pi, 6, 1)) * 2) - 9)
            End If

            If Val(Mid(pi, 8, 1)) * 2 <= 9 Then
                s = s + Val(Mid(pi, 8, 1)) * 2
            Else
                s = s + ((Val(Mid(pi, 8, 1)) * 2) - 9)
            End If

            If Val(Mid(pi, 10, 1)) * 2 <= 9 Then
                s = s + Val(Mid(pi, 10, 1)) * 2
            Else
                s = s + ((Val(Mid(pi, 10, 1)) * 2) - 9)
            End If

            Dim r As Double = s Mod 10
            Dim c As Integer = 0

            If r = 0 Then
                c = 0
            Else
                c = 10 - r
            End If

            If c = Val(Mid(pi, 11, 1)) Then
                VerificaPI = True
            Else
                VerificaPI = False
            End If


        End Function


        Function IfEmpty(ByVal v As Object, ByVal S As Object) As Object
            If Trim(v) = "" Then
                IfEmpty = S
            Else
                IfEmpty = v
            End If
        End Function

        Function ConvertiMese(ByVal MESE As Integer) As String
            Select Case MESE
                Case 1
                    ConvertiMese = "Gennaio"
                Case 2
                    ConvertiMese = "Febbraio"
                Case 3
                    ConvertiMese = "Marzo"
                Case 4
                    ConvertiMese = "Aprile"
                Case 5
                    ConvertiMese = "Maggio"
                Case 6
                    ConvertiMese = "Giugno"
                Case 7
                    ConvertiMese = "Luglio"
                Case 8
                    ConvertiMese = "Agosto"
                Case 9
                    ConvertiMese = "Settembre"
                Case 10
                    ConvertiMese = "Ottobre"
                Case 11
                    ConvertiMese = "Novembre"
                Case 12
                    ConvertiMese = "Dicembre"
            End Select
        End Function

        Public Function SetCmbIva(ByVal cmb As DropDownList, ByVal valore As String) As String
            SetCmbIva = valore
            If IsNothing(cmb.Items.FindByValue(valore)) = True Then
                cmb.Items.Add(New ListItem(valore, valore))
            End If
            Return SetCmbIva
        End Function


        Sub Application_Error(ByVal sender As Object, ByVal e As EventArgs)
            Dim ErrorDescription As String = Server.GetLastError.ToString

            'Dim EventLogName As String = "SepaWeb"
            'If (Not EventLog.SourceExists(EventLogName)) Then
            '    EventLog.CreateEventSource(EventLogName, EventLogName)
            'End If

            '' Inserting into event log

            'Dim Log As New EventLog()
            'Log.Source = EventLogName
            'Log.WriteEntry(ErrorDescription, EventLogEntryType.Error)

            Try
                Session.Add("ErroreGenerico", ErrorDescription)
            Catch ex As Exception

            End Try
            Server.ClearError()
        End Sub

        Sub Session_End(ByVal sender As Object, ByVal e As EventArgs)
            ' Generato alla fine della sessione


            OracleConn.Close()
            Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            Session.Item("LAVORAZIONE") = "0"


        End Sub

        Sub Application_PreRequestHadlerExecute(ByVal o As Object, ByVal e As EventArgs)

        End Sub

        Sub Application_End(ByVal sender As Object, ByVal e As EventArgs)
            ' Generato alla chiusura dell'applicazione
            'OracleConn.Close()
            'OracleConn.Dispose()
            'OracleConn = Nothing
            'Session.Item("LAVORAZIONE") = "0"
            'Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            'cmd.Dispose()
            'Beep()
        End Sub



        Private Sub Global_Error(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Error
            'Response.Redirect("Pagina_home.aspx")

        End Sub

        Private Sub Global_PreRequestHandlerExecute(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.PreRequestHandlerExecute
            'If Session.Item("INIZIO") = "" Then
            '    Response.Write("<script>top.location.href='ErrorPage.aspx'</script>")
            'End If
        End Sub

        Public Sub SetFocusControl(ByVal PAGE As Object, ByVal ControlName As String)
            ' character 34 = "

            Dim script As String =
              "<script language=" + Chr(34) + "javascript" + Chr(34) _
                                  + ">" +
              "  var control = document.getElementById(" + Chr(34) +
              ControlName + Chr(34) + ");" +
              "  if( control != null ){control.focus();}" +
              "</script>"

            PAGE.RegisterStartupScript("Focus", script)

        End Sub

        Public Function ChiudiDB()
            OracleConn.Close()
            OracleConn.Dispose()
            OracleConn = Nothing
            Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
        End Function


        Public Function VirgoleInPunti(ByVal N As Object) As String
            Dim S As String
            Dim pos As Integer
            Dim i As Integer
            Dim S1 As String

            If IsDBNull(N) Then
                VirgoleInPunti = "NULL"
            Else
                If Len(N) > 22 Then
                    VirgoleInPunti = "0.0"
                    Exit Function
                End If
                S = N
                pos = InStr(1, S, ",")

                If pos >= 1 Then
                    Mid(S, pos, 1) = "."
                End If

                S1 = S
                pos = InStr(1, S, ".")
                If pos > 0 Then
                    S1 = Mid(S, 1, pos)
                    For i = pos + 1 To Len(S)
                        If Mid(S, i, 1) = "." Or Mid(S, i, 1) = "," Then

                        Else
                            S1 = S1 & Mid(S, i, 1)
                        End If
                    Next i
                    S = S1
                End If
                VirgoleInPunti = S

            End If
        End Function

        Public Function PuntiInVirgole(ByVal N As Object) As String
            Dim S As String
            Dim pos As Integer
            If IsDBNull(N) Then
                PuntiInVirgole = "NULL"
            Else
                S = N
                pos = InStr(1, S, ".")
                If pos > 1 Then
                    Mid(S, pos, 1) = ","
                End If
                PuntiInVirgole = S
            End If
        End Function

        Public Function RicavaSesso(ByVal CF As String) As String
            If CF = "" Then
                RicavaSesso = ""
                Exit Function
            End If
            If Val(Mid(CF, 10, 2)) > 31 Then
                RicavaSesso = "F"
            Else
                RicavaSesso = "M"
            End If
        End Function

        Public Function Tronca(ByVal N As Double) As String
            Dim numero As Double
            Dim NUMERO1 As String


            numero = Fix((N * 1000)) / 1000
            NUMERO1 = Format(numero, "##,##0.000")
            Tronca = Converti3(NUMERO1)
        End Function



        Public Function SegnalaErrore(ByVal errore As String)
            'Response.Write("<script>document.location.href='ErrorPage.aspx?ERR=" & errore & "'</script>")
            'Response.Redirect("ErrorPage.aspx?ERR=" & errore)

        End Function

        Public Function ConvertiJolly(ByRef sStr As String)
            Dim npos

            npos = InStr(sStr, "*")
            While npos > 0
                Mid(sStr, npos, 1) = "%"
                npos = InStr(sStr, "*")
            End While
        End Function

        'PER IMPORTARE IL TESTO DELLA DOMANDA DAL FILE

        '    Private Sub Command1_Click()
        '        Dim testo As String

        'Open "C:\Condivisa\domanda.txt" For Input As #1
        '        Do While Not EOF(1)   ' Ripete fino alla fine del file.
        '   Input #1, testo   ' Legge i dati nelle variabili.
        '            r1.Text = r1.Text & vbCrLf & "Response.write(""" & testo & """)"
        '        Loop
        'Close #1
        '    End Sub

        Function IfNull(ByVal v As Object, ByVal S As Object) As Object
            If IsDBNull(v) Then
                IfNull = S
            Else
                IfNull = v
            End If
        End Function


        Public Function PulisciStrSql(ByVal sStr As String) As String
            Dim iCont As Integer
            Dim iPos As Integer
            Dim iLen As Integer
            Dim sTmp As String
            Dim sStringa As String

            sTmp = ""
            iCont = InStr(1, sStr, "'")
            If iCont > 0 Then
                iLen = Len(sStr)
                For iPos = 1 To iLen
                    sStringa = Mid(sStr, iPos, 1)
                    If sStringa = "'" Then
                        sStringa = "'" & sStringa
                    End If
                    sTmp = sTmp & sStringa
                Next
            Else
                sTmp = sStr
            End If

            PulisciStrSql = sTmp

        End Function

        Public Function VaroleDaPassare(ByVal sStr As String) As String
            Dim iCont As Integer
            Dim iPos As Integer
            Dim iLen As Integer
            Dim sTmp As String
            Dim sStringa As String

            sTmp = ""
            iCont = InStr(1, sStr, "'")
            If iCont > 0 Then
                iLen = Len(sStr)
                For iPos = 1 To iLen
                    sStringa = Mid(sStr, iPos, 1)
                    If sStringa = "'" Then
                        sStringa = "%27" '& sStringa
                    End If
                    sTmp = sTmp & sStringa
                Next
            Else
                sTmp = sStr
            End If

            VaroleDaPassare = sTmp

        End Function

        Function ControllaCFNomeCognome(ByVal CF As String, ByVal COGNOME As String, ByVal NOME As String) As Boolean

            Dim Vocali As String
            Dim Consonanti As String
            Dim i As Integer

            Dim TxtCodFis As String

            ControllaCFNomeCognome = True

            TxtCodFis = ""

            '
            ' RICAVO IL COGNOME (123)
            '
            COGNOME = UCase(COGNOME)
            Vocali = ""
            Consonanti = ""
            For i = 1 To Len(COGNOME)
                If InStr("AEIOU", Mid(COGNOME, i, 1)) Then
                    Vocali = Vocali + Mid(COGNOME, i, 1)
                ElseIf InStr("BCDFGHJKLMNPQRSTVWXYZ", Mid(COGNOME, i, 1)) Then
                    Consonanti = Consonanti + Mid(COGNOME, i, 1)
                Else
                    ' E' uno spazio, un apostrfo o altro che non va considerato
                End If
                If Len(Consonanti) = 3 Then Exit For
            Next
            If Len(Consonanti) < 3 Then Consonanti = Consonanti + Left(Vocali, 3 - Len(Consonanti))
            If Len(Consonanti) = 0 Then Consonanti = Consonanti + "XXX"
            If Len(Consonanti) = 1 Then Consonanti = Consonanti + "XX"
            If Len(Consonanti) = 2 Then Consonanti = Consonanti + "X"

            TxtCodFis = Consonanti

            '
            ' RICAVO IL NOME (456)
            '
            NOME = UCase(NOME)
            Vocali = ""
            Consonanti = ""
            For i = 1 To Len(NOME)
                If InStr("AEIOU", Mid(NOME, i, 1)) Then
                    Vocali = Vocali + Mid(NOME, i, 1)
                ElseIf InStr("BCDFGHJKLMNPQRSTVWXYZ", Mid(NOME, i, 1)) Then
                    Consonanti = Consonanti + Mid(NOME, i, 1)
                Else
                    ' E' uno spazio, un apostrfo o altro che non va considerato
                End If
            Next i

            If Len(Consonanti) >= 4 Then
                ' isolo la prima, terza e quarta consonante
                Consonanti = Left$(Consonanti, 1) & Mid$(Consonanti, 3, 2)
            ElseIf Len(Consonanti) = 3 Then
                ' Va bene cosi'
            Else
                ' Aggiungo le vocali
                Consonanti = Left$(Consonanti & Vocali, 3)
                ' se non basta, aggiungo le X
                If Len(Consonanti) < 3 Then Consonanti = Left$(Consonanti & "XXX", 3)
            End If
            TxtCodFis = TxtCodFis & Consonanti

            If TxtCodFis = Mid(UCase(CF), 1, 6) Then
                ControllaCFNomeCognome = True
            Else
                ControllaCFNomeCognome = False
            End If
        End Function


        Function CheckCodiceFiscale(ByVal CodiceFiscale As String) As Boolean
            Dim result As Boolean = False
            Const caratteri As Integer = 16

            If CodiceFiscale Is Nothing Then
                Return result
            End If

            If CodiceFiscale.Length < caratteri Then
                Return result
            End If

            If Not (CodiceFiscale.Length = caratteri) Then
                Return result
            End If

            Const omocodici As String = "LMNPQRSTUV"
            Const listaControllo As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

            Dim listaPari As Integer() = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}
            Dim listaDispari As Integer() = {1, 0, 5, 7, 9, 13, 15, 17, 19, 21, 2, 4, 18, 20, 11, 3, 6, 8, 12, 14, 16, 10, 22, 25, 24, 23}

            CodiceFiscale = CodiceFiscale.ToUpper
            Dim cCodice As Char() = CodiceFiscale.ToCharArray

            Dim k As Integer = 0

            For k = 6 To 14
                If (k = 8) OrElse (k = 11) Then
                Else
                    Dim x As Integer = (omocodici.IndexOf(cCodice(k)))
                    If Not (x = -1) Then
                        cCodice(k) = x.ToString.ToCharArray()(0)
                    End If
                End If
            Next

            'Dim rgx As Regex = New Regex("^[A-Z]{6}[]{2}[A-Z][]{2}[A-Z][]{3}[A-Z]$")
            'Dim m As Match = rgx.Match(New String(cCodice))
            'result = m.Success
            result = True
            If result Then
                Dim somma As Integer = 0
                cCodice = CodiceFiscale.ToCharArray
                Dim i As Integer = 0
                For i = 0 To 14
                    Dim c As Char = cCodice(i)
                    Dim x As Integer = "0123456789".IndexOf(c)
                    If Not (x = -1) Then
                        c = listaControllo.Substring(x, 1).ToCharArray()(0)
                    End If
                    x = listaControllo.IndexOf(c)
                    If (i Mod 2) = 0 Then
                        x = listaDispari(x)
                    Else
                        x = listaPari(x)
                    End If
                    somma += x
                Next
                result = (listaControllo.Substring(somma Mod 26, 1) = CodiceFiscale.Substring(15, 1))
            End If
            Return result
        End Function


        Function ControllaCF(ByVal codice As String) As Boolean
            Dim TempNum
            Dim AppoNum
            Dim i As Integer
            Dim TxtCodFis As String


            If Len(codice) = 16 Then

                TempNum = 0
                i = 1
                Do
                    ' I DISPARI
                    AppoNum = InStr("B1A0KKPPLLC2QQD3RRE4VVOOSSF5TTG6UUH7MMI8NNJ9WWZZYYXX", Mid(Mid(codice, 1, Len(codice) - 1), i, 1))
                    TempNum = TempNum + ((AppoNum - 1) And &H7FFE) / 2
                    i = i + 1
                    If i > 15 Then Exit Do

                    ' I PARI
                    AppoNum = InStr("A0B1C2D3E4F5G6H7I8J9KKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ", Mid(Mid(codice, 1, Len(codice) - 1), i, 1))
                    TempNum = TempNum + ((AppoNum - 1) And &H7FFE) / 2
                    i = i + 1
                Loop
                TempNum = TempNum Mod 26
                'TxtCodFis = TxtCodFis & Mid$("ABCDEFGHIJKLMNOPQRSTUVWXYZ", TempNum + 1, 1)
                TxtCodFis = Mid$("ABCDEFGHIJKLMNOPQRSTUVWXYZ", TempNum + 1, 1)
                If TxtCodFis = Mid(codice, Len(codice), 1) Then
                    ControllaCF = True
                    Exit Function
                Else
                    Dim RIS As Boolean = CheckCodiceFiscale(codice)
                    If RIS = True Then
                        ControllaCF = True
                        Exit Function
                    Else
                        ControllaCF = False
                        Exit Function
                    End If
                End If
            Else
                If codice = "" Then
                    ControllaCF = True
                    Exit Function
                Else
                    ControllaCF = False
                    Exit Function
                End If
            End If
        End Function

        Public Function IndDGC(ByVal dgv As DataGrid, ByVal nameCol As String) As Integer
            IndDGC = -1
            Dim Indice As Integer = 0
            Try
                For Each c As DataGridColumn In dgv.Columns
                    If c.GetType.Name = "BoundColumn" Then
                        If String.Equals(nameCol, DirectCast(c, System.Web.UI.WebControls.BoundColumn).DataField, StringComparison.InvariantCultureIgnoreCase) Then
                            IndDGC = Indice
                            Exit For
                        End If
                    ElseIf c.GetType.Name = "TemplateColumn" Then
                        If String.Equals(nameCol, DirectCast(c, System.Web.UI.WebControls.TemplateColumn).HeaderText, StringComparison.InvariantCultureIgnoreCase) Then
                            IndDGC = Indice
                            Exit For
                        End If
                    End If
                    Indice = Indice + 1
                Next
            Catch ex As Exception
                Return IndDGC
            End Try
            Return IndDGC
        End Function

        Public Function IndRDGC(ByVal dgv As Telerik.Web.UI.RadGrid, ByVal nameCol As String) As Integer
            IndRDGC = -1
            Dim Indice As Integer = 2
            Try
                For Each c As Object In dgv.Columns
                    If c.GetType.Name = "GridBoundColumn" Then
                        If String.Equals(nameCol, DirectCast(c, Telerik.Web.UI.GridBoundColumn).DataField, StringComparison.InvariantCultureIgnoreCase) Then
                            IndRDGC = Indice
                            Exit For
                        End If
                    ElseIf c.GetType.Name = "GridTemplateColumn" Then
                        If String.Equals(nameCol, DirectCast(c, Telerik.Web.UI.GridTemplateColumn).HeaderText, StringComparison.InvariantCultureIgnoreCase) Then
                            IndRDGC = Indice
                            Exit For
                        End If
                    End If
                    Indice = Indice + 1
                Next
            Catch ex As Exception
                Return IndRDGC
            End Try
            Return IndRDGC
        End Function


        Function RicavaEta(ByVal sDataNascita As String) As Integer
            Dim nEta As Integer
            If sDataNascita <> "" Then
                nEta = DateDiff("yyyy", DateSerial(Left(sDataNascita, 4), Mid(sDataNascita, 5, 2), Right(sDataNascita, 2)), Now)
                If DateDiff("d", DateSerial(Year(Now), Mid(sDataNascita, 5, 2), Right(sDataNascita, 2)), Now) < 0 And nEta > 0 Then
                    nEta = nEta - 1
                End If
                If nEta > 999 Or nEta < 0 Then
                    nEta = 999
                End If
                RicavaEta = nEta
            End If
        End Function

        Function RicavaEtaChiusura(ByVal sDataNascita As String, ByVal Chiusura As String) As Integer
            Dim nEta As Integer
            If sDataNascita <> "" Then
                If Len(sDataNascita) = 10 Then
                    sDataNascita = AggiustaData(sDataNascita)
                End If
                If Len(Chiusura) = 10 Then
                    Chiusura = AggiustaData(Chiusura)
                End If
                nEta = DateDiff("yyyy", DateSerial(Left(sDataNascita, 4), Mid(sDataNascita, 5, 2), Right(sDataNascita, 2)), DateSerial(Left(Chiusura, 4), Mid(Chiusura, 5, 2), Right(Chiusura, 2)))
                If DateDiff("d", DateSerial(Mid(Chiusura, 1, 4), Mid(sDataNascita, 5, 2), Right(sDataNascita, 2)), DateSerial(Left(Chiusura, 4), Mid(Chiusura, 5, 2), Right(Chiusura, 2))) < 0 And nEta > 0 Then
                    nEta = nEta - 1
                End If
                If nEta > 999 Then
                    nEta = 999
                End If
                If nEta < 0 Then
                    nEta = 0
                End If

                RicavaEtaChiusura = nEta
            End If
        End Function

        Public Function RiempiDListConVuoto(ByVal oParent As Object, ByVal OracleConn As Oracle.DataAccess.Client.OracleConnection, ByVal sNomeDlist As String, ByVal sQuery As String, ByVal sCampoTesto As String, ByVal sCampoChiave As String) As DropDownList
            Dim dlist As DropDownList
            Dim da As Oracle.DataAccess.Client.OracleDataAdapter
            Dim ds As New Data.DataSet()



            dlist = oParent.FindControl(sNomeDlist)

            da = New Oracle.DataAccess.Client.OracleDataAdapter(sQuery, OracleConn)
            da.Fill(ds)

            dlist.Items.Clear()
            dlist.DataSource = ds
            dlist.DataTextField = sCampoTesto
            dlist.DataValueField = sCampoChiave
            dlist.DataBind()

            Dim lsiFrutto As New ListItem(" ", "-1")
            dlist.Items.Add(lsiFrutto)

            dlist.SelectedIndex = -1
            dlist.Items.FindByText(" ").Selected = True
            RiempiDListConVuoto = dlist


            da.Dispose()
            da = Nothing

            dlist.DataSource = Nothing
            dlist = Nothing

            ds.Clear()
            ds.Dispose()
            ds = Nothing

        End Function

        Public Function RiempiDListConNULL(ByVal oParent As Object, ByVal OracleConn As Oracle.DataAccess.Client.OracleConnection, ByVal sNomeDlist As String, ByVal sQuery As String, ByVal sCampoTesto As String, ByVal sCampoChiave As String) As DropDownList
            Dim dlist As DropDownList
            Dim da As Oracle.DataAccess.Client.OracleDataAdapter
            Dim ds As New Data.DataSet()



            dlist = oParent.FindControl(sNomeDlist)

            da = New Oracle.DataAccess.Client.OracleDataAdapter(sQuery, OracleConn)
            da.Fill(ds)

            dlist.Items.Clear()
            dlist.DataSource = ds
            dlist.DataTextField = sCampoTesto
            dlist.DataValueField = sCampoChiave
            dlist.DataBind()

            Dim lsiFrutto As New ListItem(" ", "NULL")
            dlist.Items.Add(lsiFrutto)

            dlist.SelectedIndex = -1
            dlist.Items.FindByText(" ").Selected = True
            RiempiDListConNULL = dlist


            da.Dispose()
            da = Nothing

            dlist.DataSource = Nothing
            dlist = Nothing

            ds.Clear()
            ds.Dispose()
            ds = Nothing

        End Function

        Public Function RiempiDListC(ByVal oParent As Object, ByVal OracleConn As Oracle.DataAccess.Client.OracleConnection, ByVal sNomeDlist As String, ByVal sQuery As String, ByVal sCampoTesto As String, ByVal sCampoChiave As String) As DropDownList
            Dim dlist As DropDownList
            Dim da As Oracle.DataAccess.Client.OracleDataAdapter
            Dim ds As New Data.DataSet()



            dlist = oParent.FindControl(sNomeDlist)

            da = New Oracle.DataAccess.Client.OracleDataAdapter(sQuery, OracleConn)
            da.Fill(ds)

            dlist.Items.Clear()
            dlist.DataSource = ds
            dlist.DataTextField = sCampoTesto
            dlist.DataValueField = sCampoChiave
            dlist.DataBind()

            Dim lsiFrutto As New ListItem("Non sussiste la condizione", "-1")
            dlist.Items.Add(lsiFrutto)


            dlist.Items.FindByText("Non sussiste la condizione").Selected = True
            RiempiDListC = dlist


            da.Dispose()
            da = Nothing

            dlist.DataSource = Nothing
            dlist = Nothing

            ds.Clear()
            ds.Dispose()
            ds = Nothing

        End Function


        Public Function FormattaData(ByVal testo As String, Optional ByVal Separatore As String = "/") As String
            FormattaData = ""
            If testo = "-1" Then
                FormattaData = "NESSUNA SCADENZA"
                Exit Function
            End If
            If testo = "" Then
                FormattaData = ""
                Exit Function
            End If
            If Not IsDate(testo) Then
                FormattaData = Mid(testo, 7, 2) & Separatore & Mid(testo, 5, 2) & Separatore & Mid(testo, 1, 4)
            Else
                FormattaData = testo
            End If
        End Function



        Public Function StatoContratto(ByVal Id As Long, ByVal OracleConn1 As Oracle.DataAccess.Client.OracleConnection) As String
            Dim sNow As String
            Dim cmd1 As New Oracle.DataAccess.Client.OracleCommand()

            Try
                StatoContratto = ""
                sNow = Format(Now, "yyyyMMdd")

                cmd1 = OracleConn1.CreateCommand()
                cmd1.CommandText = "select ID " &
                            "from RAPPORTI_UTENZA " &
                            "where BOZZA<>1 AND (NUM_REGISTRAZIONE IS NOT NULL) AND " &
                            "(DATA_DISDETTA_LOCATARIO IS NULL OR DATA_DISDETTA_LOCATARIO='') AND " &
                            "DATA_DECORRENZA >= '" & sNow & "' and " &
                            "((DATA_SCADENZA >= '" & sNow & "') or " &
                            "((not DATA_SCADENZA_RINNOVO is null) and (DATA_SCADENZA_RINNOVO >= '" & sNow & "'))) and " &
                            "DATA_RICONSEGNA is null and ID = " & Id

                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd1.ExecuteReader()
                If myReader.Read Then
                    StatoContratto = "IN ATTESA"
                    myReader.Close()
                    Exit Function
                End If
                myReader.Close()

                cmd1.CommandText = "select ID " &
                        "from RAPPORTI_UTENZA " &
                        "where BOZZA<>1 AND (NUM_REGISTRAZIONE IS NOT NULL) AND " &
                        "(DATA_DISDETTA_LOCATARIO IS NULL OR DATA_DISDETTA_LOCATARIO='') AND " &
                        "DATA_DECORRENZA <= '" & sNow & "' and " &
                        "((DATA_SCADENZA >= '" & sNow & "') or " &
                        "((not DATA_SCADENZA_RINNOVO is null) and (DATA_SCADENZA_RINNOVO >= '" & sNow & "'))) and " &
                        "DATA_RICONSEGNA is null and ID = " & Id

                myReader = cmd1.ExecuteReader()
                If myReader.Read Then
                    StatoContratto = "IN CORSO"
                    myReader.Close()
                    Exit Function
                End If

                myReader.Close()

                cmd1.CommandText = "select ID " &
                        "from RAPPORTI_UTENZA " &
                        "where BOZZA<>1 AND (NUM_REGISTRAZIONE IS NOT NULL) AND DATA_DECORRENZA <= '" & sNow & "' and " &
                        "((not DATA_DISDETTA_LOCATARIO is null and DATA_DISDETTA_LOCATARIO < '" & sNow & "') or DATA_SCADENZA < '" & sNow & "' or " &
                        "((not DATA_SCADENZA_RINNOVO is null) and (DATA_SCADENZA_RINNOVO < '" & sNow & "'))) and " &
                        "DATA_RICONSEGNA is null and ID = " & Id
                myReader = cmd1.ExecuteReader()
                If myReader.Read Then
                    StatoContratto = "IN CORSO (S.T.)"
                    myReader.Close()
                    Exit Function
                End If
                myReader.Close()


                cmd1.CommandText = "select count(id) " &
                        "from RAPPORTI_UTENZA " &
                        "where BOZZA<>1 and ID = " & Id
                myReader = cmd1.ExecuteReader()
                If myReader.Read Then
                    StatoContratto = "CHIUSO"
                    myReader.Close()
                    Exit Function
                End If
                myReader.Close()

            Catch ex As Exception
                StatoContratto = "Errore " & ex.Message
            End Try


        End Function


        Public Function RicavaTasso(ByVal Anno As Integer) As Double
            Dim DaChiudere As Boolean = False
            RicavaTasso = 0
            Try
                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    DaChiudere = True
                End If
                cmd = OracleConn.CreateCommand()
                cmd.CommandText = "SELECT * FROM TAB_TASSO_RENDIMENTO WHERE ANNO=" & Anno
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader.Read Then
                    RicavaTasso = myReader("TASSO")
                End If
                myReader.Close()
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            Catch ex As Exception
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            End Try
        End Function

        Public Sub CaricaStoricoNote(ByVal IdRiferimento As String, ByRef dataGridNote As DataGrid, ByVal provenienza As String)
            Dim DaChiudere As Boolean = False
            Dim queryStoricoNote As String = ""
            Try
                If provenienza = "1" Then
                    queryStoricoNote = "SELECT to_char(to_date(data_ora,'yyyyMMdd-HH24miss'),'dd/mm/yyyy - HH24:mi') as DATAORA,to_char(to_date(data_evento,'yyyyMMdd'),'dd/mm/yyyy') as DATA_EVENTO,data_ora,NOTE,GESTIONE_STORICO_NOTE.ID,GESTIONE_STORICO_NOTE.ID_RIFERIMENTO,operatori.operatore FROM operatori,SISCOM_MI.GESTIONE_STORICO_NOTE where GESTIONE_STORICO_NOTE.id_riferimento=" & IdRiferimento & " and (id_provenienza=1 or id_provenienza=7) and GESTIONE_STORICO_NOTE.id_operatore=operatori.id (+) order by nvl(data_ora,'19000101') desc"
                Else
                    queryStoricoNote = "SELECT to_char(to_date(data_ora,'yyyyMMdd-HH24miss'),'dd/mm/yyyy - HH24:mi') as DATAORA,to_char(to_date(data_evento,'yyyyMMdd'),'dd/mm/yyyy') as DATA_EVENTO,data_ora,NOTE,GESTIONE_STORICO_NOTE.ID,GESTIONE_STORICO_NOTE.ID_RIFERIMENTO,operatori.operatore FROM operatori,SISCOM_MI.GESTIONE_STORICO_NOTE where GESTIONE_STORICO_NOTE.id_riferimento=" & IdRiferimento & " and id_provenienza=" & provenienza & " and GESTIONE_STORICO_NOTE.id_operatore=operatori.id (+) order by nvl(data_ora,'19000101') desc"
                End If


                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    DaChiudere = True
                End If

                cmd = OracleConn.CreateCommand()

                cmd.CommandText = queryStoricoNote
                Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(queryStoricoNote, OracleConn)
                Dim dt As New Data.DataTable
                da.Fill(dt)
                da.Dispose()

                If dt.Rows.Count > 0 Then
                    dataGridNote.DataSource = dt
                    dataGridNote.DataBind()
                End If

                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If

            Catch ex As Exception
                cmd.Dispose()
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            End Try

        End Sub


        Public Function AggiustaData(ByVal S As String) As String
            Dim numeri() As String
            Dim seps() As Char = {"/"}
            Dim g As String, m As String, a As String
            'Dim formato As String = Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern

            If S = "" Then
                AggiustaData = ""
                Exit Function
            End If

            numeri = S.Split(seps)


            'If formato = "dd/MM/yyyy" Then
            g = Format(Val(numeri(0)), "00")
            m = Format(Val(numeri(1)), "00")
            a = Format(Val(numeri(2)), "0000")
            AggiustaData = a & m & g
            'End If
            'If formato = "M/d/yyyy" Then
            ' g = Format(Val(numeri(1)), "00")
            'm = Format(Val(numeri(0)), "00")
            'a = Format(Val(numeri(2)), "0000")
            'AggiustaData = a & m & g
            'End If

            'If CInt(m) <= 12 Then
            '    AggiustaData = a & m & g
            'Else
            '    AggiustaData = a & g & m
            'End If

            'AggiustaData = a & m & g


            'AggiustaData = ""
            'If Len(S) = 8 Then
            '    AggiustaData = S
            'Else
            '    If Len(S) = 10 Then
            '        If Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern = "dd/MM/yyyy" Then
            '            AggiustaData = Mid(S, 7, 4) & Mid(S, 4, 2) & Mid(S, 1, 2)
            '        Else

            '            AggiustaData = Mid(S, 7, 4) & Mid(S, 1, 2) & Mid(S, 4, 2)
            '        End If
            '    End If
            'End If
        End Function
        Public Function AggiustaOra(ByVal Orario As String, Optional ByVal secondi As Boolean = False) As String
            Dim numeri() As String
            Dim seps() As Char = {":"}
            Dim h As String, m As String, s As String
            'Dim formato As String = Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortTimePattern
            If Orario = "" Then
                AggiustaOra = ""
                Exit Function
            End If
            numeri = Orario.Split(seps)
            h = Format(Val(numeri(0)), "00")
            m = Format(Val(numeri(1)), "00")
            s = Format(Val(numeri(2)), "00")
            If secondi Then
                AggiustaOra = h & m & s
            Else
                AggiustaOra = h & m
            End If
        End Function

        Public Function RiempiDList(ByVal oParent As Object, ByVal OracleConn As Oracle.DataAccess.Client.OracleConnection, ByVal sNomeDlist As String, ByVal sQuery As String, ByVal sCampoTesto As String, ByVal sCampoChiave As String) As DropDownList
            Dim dlist As DropDownList
            Dim da As Oracle.DataAccess.Client.OracleDataAdapter
            Dim ds As New Data.DataSet()



            dlist = oParent.FindControl(sNomeDlist)

            da = New Oracle.DataAccess.Client.OracleDataAdapter(sQuery, OracleConn)
            da.Fill(ds)

            dlist.Items.Clear()
            dlist.DataSource = ds
            dlist.DataTextField = sCampoTesto
            dlist.DataValueField = sCampoChiave
            dlist.DataBind()

            RiempiDList = dlist

            da.Dispose()
            da = Nothing

            dlist.DataSource = Nothing
            dlist = Nothing

            ds.Clear()
            ds.Dispose()
            ds = Nothing

        End Function

        Function ControllaData(ByVal txt As TextBox) As Boolean
            Dim s As String

            Dim i As Integer
            Dim errore As Boolean
            Dim sCar As String
            Dim giorno As String
            Dim mese As String
            Dim anno As String

            s = txt.Text

            errore = False

            If Len(s) = 8 Then
                For i = 1 To Len(s)
                    sCar = Mid(s, i, 1)
                    If sCar < "0" Or sCar > "9" Then
                        errore = True
                    End If
                Next
                giorno = Left(s, 2)
                mese = Mid(s, 3, 2)
                anno = Right(s, 4)
                If Not IsDate(anno & "/" & mese & "/" & giorno) Then
                    errore = True
                Else
                    txt.Text = giorno & "/" & mese & "/" & anno
                    s = txt.Text
                End If
            ElseIf Len(s) = 10 Then
                For i = 1 To Len(s)
                    sCar = Mid(s, i, 1)
                    If i = 3 Or i = 6 Then
                        If sCar <> "/" Then
                            errore = True
                        End If
                    ElseIf sCar < "0" Or sCar > "9" Then
                        errore = True
                    End If
                Next
            Else
                errore = True
            End If

            If Not errore Then
                giorno = Left(s, 2)
                mese = Mid(s, 4, 2)
                anno = Right(s, 4)

                If Not IsDate(anno & "/" & mese & "/" & giorno) Then
                    errore = True
                End If
            Else
                errore = True
            End If
            ControllaData = Not errore
        End Function


        Function MiaFormat(ByVal testo As String, ByVal lungh As Integer) As String
            Dim I As Integer
            Dim SS As String

            If Len(testo) >= lungh Then
                MiaFormat = Mid(testo, 1, lungh)
                If Mid(MiaFormat, lungh, 1) = " " Then
                    MiaFormat = Mid(MiaFormat, 1, lungh - 1) & Chr(160)
                End If
            Else
                SS = testo
                If IsNumeric(SS) And lungh <= 15 Then
                    For I = Len(testo) + 1 To lungh
                        SS = Chr(160) & SS
                    Next I
                    MiaFormat = SS
                Else
                    For I = Len(testo) + 1 To lungh
                        SS = SS & Chr(160)
                    Next I
                    MiaFormat = SS
                End If

            End If
        End Function

        Function Elimina160(ByVal testo As String) As String
            Dim miotesto As String
            Dim I As Integer
            Dim S As String

            miotesto = testo
            S = ""
            For I = 1 To Len(miotesto)
                'MsgBox(Asc(Mid(miotesto, I, 1)))
                If Asc(Mid(miotesto, I, 1)) <> 63 And Asc(Mid(miotesto, I, 1)) <> 160 Then
                    S = S & Mid(miotesto, I, 1)
                End If
            Next
            Elimina160 = S

        End Function

        Function RicavaTesto(ByVal testo As String, ByVal inizio As Integer, ByVal lung As Integer) As String
            Dim miotesto As String
            Dim I As Integer
            Dim S As String

            miotesto = Mid(testo, inizio, lung)
            S = ""
            'If IsNumeric(Trim(miotesto)) = False Then
            For I = 1 To Len(miotesto)
                If Mid(miotesto, I, 1) <> Chr(160) Then
                    S = S & Mid(miotesto, I, 1)
                Else
                    '        Exit For
                End If
            Next
            RicavaTesto = S
            'Else
            'For I = 1 To Len(miotesto)
            ' If Mid(miotesto, I, 1) <> Chr(160) Then
            ' S = S & Mid(miotesto, I, 1)
            'Else
            'Exit For
            'End If
            'Next
            'RicavaTesto = S
            'End If
        End Function

        Function ControllaValiditaCF(ByVal CF As String, ByVal COGNOME As String, ByVal NOME As String, ByVal DATA_NAS As String) As Boolean

            Dim Vocali As String
            Dim Consonanti As String
            Dim i As Integer

            Dim TxtCodFis As String

            ControllaValiditaCF = True

            TxtCodFis = ""

            '
            ' RICAVO IL COGNOME (123)
            '
            COGNOME = UCase(COGNOME)
            Vocali = ""
            Consonanti = ""
            For i = 1 To Len(COGNOME)
                If InStr("AEIOU", Mid(COGNOME, i, 1)) Then
                    Vocali = Vocali + Mid(COGNOME, i, 1)
                ElseIf InStr("BCDFGHJKLMNPQRSTVWXYZ", Mid(COGNOME, i, 1)) Then
                    Consonanti = Consonanti + Mid(COGNOME, i, 1)
                Else
                    ' E' uno spazio, un apostrfo o altro che non va considerato
                End If
                If Len(Consonanti) = 3 Then Exit For
            Next
            If Len(Consonanti) < 3 Then Consonanti = Consonanti + Left(Vocali, 3 - Len(Consonanti))
            If Len(Consonanti) = 0 Then Consonanti = Consonanti + "XXX"
            If Len(Consonanti) = 1 Then Consonanti = Consonanti + "XX"
            If Len(Consonanti) = 2 Then Consonanti = Consonanti + "X"

            TxtCodFis = Consonanti

            '
            ' RICAVO IL NOME (456)
            '
            NOME = UCase(NOME)
            Vocali = ""
            Consonanti = ""
            For i = 1 To Len(NOME)
                If InStr("AEIOU", Mid(NOME, i, 1)) Then
                    Vocali = Vocali + Mid(NOME, i, 1)
                ElseIf InStr("BCDFGHJKLMNPQRSTVWXYZ", Mid(NOME, i, 1)) Then
                    Consonanti = Consonanti + Mid(NOME, i, 1)
                Else
                    ' E' uno spazio, un apostrfo o altro che non va considerato
                End If
            Next i

            If Len(Consonanti) >= 4 Then
                ' isolo la prima, terza e quarta consonante
                Consonanti = Left$(Consonanti, 1) & Mid$(Consonanti, 3, 2)
            ElseIf Len(Consonanti) = 3 Then
                ' Va bene cosi'
            Else
                ' Aggiungo le vocali
                Consonanti = Left$(Consonanti & Vocali, 3)
                ' se non basta, aggiungo le X
                If Len(Consonanti) < 3 Then Consonanti = Left$(Consonanti & "XXX", 3)
            End If
            TxtCodFis = TxtCodFis & Consonanti

            If TxtCodFis = Mid(UCase(CF), 1, 6) Then
                ControllaValiditaCF = True
            Else
                ControllaValiditaCF = False
                Exit Function
            End If

            If Mid(UCase(CF), 7, 2) <> Mid(DATA_NAS, 9, 2) Then
                ControllaValiditaCF = False
                Exit Function
            End If

            If Mid(UCase(CF), 10, 2) <> Mid(DATA_NAS, 1, 2) Then
                If Not IsNumeric(Mid(UCase(CF), 10, 2)) Then
                    ControllaValiditaCF = False
                    Exit Function
                End If
                If CInt(Mid(UCase(CF), 10, 2)) > 40 Then
                    If CInt(Mid(UCase(CF), 10, 2)) - 40 <> CInt(Mid(DATA_NAS, 1, 2)) Then
                        ControllaValiditaCF = False
                        Exit Function
                    End If
                Else
                    ControllaValiditaCF = False
                    Exit Function
                End If
            End If

            Dim mese As String
            mese = ""

            Select Case UCase(Mid(UCase(CF), 9, 1))
                Case "A"
                    mese = "01"
                Case "B"
                    mese = "02"
                Case "C"
                    mese = "03"
                Case "D"
                    mese = "04"
                Case "E"
                    mese = "05"
                Case "H"
                    mese = "06"
                Case "L"
                    mese = "07"
                Case "M"
                    mese = "08"
                Case "P"
                    mese = "09"
                Case "R"
                    mese = "10"
                Case "S"
                    mese = "11"
                Case "T"
                    mese = "12"
            End Select

            If mese <> Mid(DATA_NAS, 4, 2) Then
                ControllaValiditaCF = False
                Exit Function
            End If
        End Function

        Function Converti1(ByVal Numero As String) As String
            Dim Sep As String
            Dim iCont As Integer
            Dim iPos As Integer
            Dim iLen As Integer
            Dim sTmp As String
            Dim sStringa As String


            Sep = Mid(Format(1000, "#,#"), 2, 1)

            If Sep = "." Then
                Converti1 = Numero
            Else
                iCont = InStr(1, Numero, ",")
                If iCont > 0 Then
                    iLen = Len(Numero) - 3
                    sTmp = ""
                    For iPos = 1 To iLen
                        sStringa = Mid(Numero, iPos, 1)
                        If sStringa = "," Then
                            sStringa = "."
                        End If
                        sTmp = sTmp & sStringa
                    Next
                Else
                    sTmp = Numero
                End If
                Converti1 = sTmp
            End If
        End Function

        Function Converti3(ByVal Numero As String) As String
            Dim Sep As String
            Dim iCont As Integer
            Dim iPos As Integer
            Dim iLen As Integer
            Dim sTmp As String
            Dim sStringa As String

            If Numero = "" Or Numero Is Nothing Then
                Converti3 = ""
                Exit Function
            End If

            Sep = Mid(Format(1000, "#,#"), 2, 1)

            If Sep = "." Then
                Converti3 = Numero
            Else
                iCont = InStr(1, Numero, ".")
                If iCont > 0 Then
                    iLen = Len(Numero) - 4
                    sTmp = ""
                    For iPos = 1 To iLen
                        sStringa = Mid(Numero, iPos, 1)
                        If sStringa = "," Then
                            sStringa = "."
                        End If
                        sTmp = sTmp & sStringa
                    Next
                    Converti3 = sTmp & "," & Mid(Numero, Len(Numero) - 2, 3)
                Else
                    'If iCont = InStr(1, Numero, ".") Then
                    'Converti = Mid(Numero, 1, iCont - 1) & "," & Mid(Numero, Len(Numero) - 1, 2)
                    'Else
                    sTmp = Numero
                    Converti3 = sTmp
                    'End If
                End If
            End If
        End Function

        Function Cripta(ByVal testo As String) As String
            Dim EncStr As String
            Dim EncKey As String
            Dim TempEncKey As String
            Dim EncLen As Integer
            Dim EncPos As Integer
            Dim EncKeyPos As Integer
            Dim tempChar As String
            Dim TA As Integer, TB As Integer, TC As Integer
            Dim x As Integer
            Dim JustChanged As Boolean

            JustChanged = True
            Cripta = testo
            TempEncKey = "SX"

            EncKey = ""
            EncStr = ""
            EncPos = 1
            EncKeyPos = 1

            For x = 1 To Len(TempEncKey)
                EncKey = EncKey & Asc(Mid$(TempEncKey, x, 1))
            Next

            EncLen = Len(EncKey)

            For x = 1 To Len(testo)
                TB = Asc(Mid$(EncKey, EncKeyPos, 1))
                EncKeyPos = EncKeyPos + 1
                If EncKeyPos > EncLen Then EncKeyPos = 1
                TA = Asc(Mid$(testo, x, 1))
                TC = TB Xor TA
                tempChar = Hex$(TC)
                If Len(tempChar) < 2 Then tempChar = "0" & tempChar
                EncStr = EncStr & tempChar
            Next
            Cripta = EncStr
        End Function


        Function DeCripta(ByVal testo As String) As String
            Dim EncStr As String
            Dim EncKey As String, TempEncKey As String
            Dim EncLen As Integer
            Dim EncPos As Integer
            Dim EncKeyPos As Integer
            Dim tempChar As String
            Dim TA As Integer, TB As Integer, TC As Integer
            Dim x, JustChanged

            JustChanged = True
            DeCripta = testo
            TempEncKey = "SX"
            EncKey = ""
            EncStr = ""
            EncPos = 1
            EncKeyPos = 1
            For x = 1 To Len(TempEncKey)
                EncKey = EncKey & Asc(Mid$(TempEncKey, x, 1))
            Next
            EncLen = Len(EncKey)

            For x = 1 To Len(testo) Step 2
                TB = Asc(Mid$(EncKey, EncKeyPos, 1))
                EncKeyPos = EncKeyPos + 1
                If EncKeyPos > EncLen Then EncKeyPos = 1
                tempChar = Mid$(testo, x, 2)
                TA = Val("&H" + tempChar)
                TC = TB Xor TA
                EncStr = EncStr & Chr(TC)
            Next
            DeCripta = EncStr

        End Function


        Function CriptaMolto(ByVal testo As String) As String
            Dim EncStr As String
            Dim EncKey As String
            Dim TempEncKey As String
            Dim EncLen As Integer
            Dim EncPos As Integer
            Dim EncKeyPos As Integer
            Dim tempChar As String
            Dim TA As Integer, TB As Integer, TC As Integer
            Dim x As Integer
            Dim JustChanged As Boolean

            JustChanged = True
            CriptaMolto = testo
            TempEncKey = "SistemieSoluzionisrl"

            EncKey = ""
            EncStr = ""
            EncPos = 1
            EncKeyPos = 1

            For x = 1 To Len(TempEncKey)
                EncKey = EncKey & Asc(Mid$(TempEncKey, x, 1))
            Next

            EncLen = Len(EncKey)

            For x = 1 To Len(testo)
                TB = Asc(Mid$(EncKey, EncKeyPos, 1))
                EncKeyPos = EncKeyPos + 1
                If EncKeyPos > EncLen Then EncKeyPos = 1
                TA = Asc(Mid$(testo, x, 1))
                TC = TB Xor TA
                tempChar = Hex$(TC)
                If Len(tempChar) < 2 Then tempChar = "0" & tempChar
                EncStr = EncStr & tempChar
            Next
            CriptaMolto = EncStr
        End Function


        Function DeCriptaMolto(ByVal testo As String) As String
            Dim EncStr As String
            Dim EncKey As String, TempEncKey As String
            Dim EncLen As Integer
            Dim EncPos As Integer
            Dim EncKeyPos As Integer
            Dim tempChar As String
            Dim TA As Integer, TB As Integer, TC As Integer
            Dim x, JustChanged

            JustChanged = True
            DeCriptaMolto = testo
            TempEncKey = "SistemieSoluzionisrl"
            EncKey = ""
            EncStr = ""
            EncPos = 1
            EncKeyPos = 1
            For x = 1 To Len(TempEncKey)
                EncKey = EncKey & Asc(Mid$(TempEncKey, x, 1))
            Next
            EncLen = Len(EncKey)

            For x = 1 To Len(testo) Step 2
                TB = Asc(Mid$(EncKey, EncKeyPos, 1))
                EncKeyPos = EncKeyPos + 1
                If EncKeyPos > EncLen Then EncKeyPos = 1
                tempChar = Mid$(testo, x, 2)
                TA = Val("&H" + tempChar)
                TC = TB Xor TA
                EncStr = EncStr & Chr(TC)
            Next
            DeCriptaMolto = EncStr

        End Function

        Function Converti(ByVal Numero As String) As String
            Dim Sep As String
            Dim iCont As Integer
            Dim iPos As Integer
            Dim iLen As Integer
            Dim sTmp As String
            Dim sStringa As String

            If Numero = "" Or Numero Is Nothing Then
                Converti = ""
                Exit Function
            End If

            Sep = Mid(Format(1000, "#,#"), 2, 1)

            If Sep = "." Then
                Converti = Numero
            Else
                iCont = InStr(1, Numero, ".")
                If iCont > 0 Then
                    iLen = Len(Numero) - 3
                    sTmp = ""
                    For iPos = 1 To iLen
                        sStringa = Mid(Numero, iPos, 1)
                        If sStringa = "," Then
                            sStringa = "."
                        End If
                        sTmp = sTmp & sStringa
                    Next
                    Converti = sTmp & "," & Mid(Numero, Len(Numero) - 1, 2)
                Else
                    'If iCont = InStr(1, Numero, ".") Then
                    'Converti = Mid(Numero, 1, iCont - 1) & "," & Mid(Numero, Len(Numero) - 1, 2)
                    'Else
                    sTmp = Numero
                    Converti = sTmp
                    'End If
                End If
            End If
        End Function


        Function SValoreLocativo(ByVal id_unita As Long) As String
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double
            Dim sASCENSORE As String = ""
            Try


                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = "CALCOLO VALORE LOCATIVO - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf


                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf
                    'If par.IfNull(myReader("COD_COMUNE"), "") = "F205" Then
                    '    DEM = 1.2 'BISOGNA VEDERE SE SI TROVA IN ALTRO COMUNE QUANTO VALE!! MANCA NEL PED
                    'End If
                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    StringaFile = StringaFile & vbTab & "Indice Ubicazione:..................." & ZONA & vbCrLf


                    'LIVELLO PIANO
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                        End If

                    End If
                    myReaderA.Close()


                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    SValoreLocativo = StringaFile
                Else
                    SValoreLocativo = "Valore non calcolato, verificare che sia specificata la sup. convenzionale e gli altri parametri necessari alla determinazione del valore locativo!"
                End If

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            Catch ex As Exception
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function


        Function CalcolaValoreLocativo(ByVal id_unita As Long) As String
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double

            Try


                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    'StringaFile = "CALCOLO VALORE LOCATIVO - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    'StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    'StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf


                    'StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf
                    'If par.IfNull(myReader("COD_COMUNE"), "") = "F205" Then
                    '    DEM = 1.2 'BISOGNA VEDERE SE SI TROVA IN ALTRO COMUNE QUANTO VALE!! MANCA NEL PED
                    'End If
                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    'StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    'StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        'StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        'StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    'StringaFile = StringaFile & vbTab & "Indice Ubicazione:..................." & ZONA & vbCrLf


                    'LIVELLO PIANO
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO,SISCOM_MI.PIANI where PIANI.COD_TIPO_LIVELLO_PIANO=" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & " AND TIPO_LIVELLO_PIANO.COD=PIANI.COD_TIPO_LIVELLO_PIANO"
                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        If par.IfNull(myReader("NUM_ASCENSORI"), 0) <= 0 Then
                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                        End If
                        'StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf

                    End If
                    myReaderA.Close()


                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        'StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            'StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                'StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    'StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            'StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                'StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    'StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    'StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    'StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    CalcolaValoreLocativo = VALORELOCATIVO
                Else
                    CalcolaValoreLocativo = "--"
                End If
                myReader.Close()

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            Catch ex As Exception
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function


        Function CalcolaCanone27_AU_2009(ByVal Id As Long, ByVal id_unita As Long, ByVal Cod_Contratto As String, ByRef IMPORTO As Double, ByRef VAL_LOCATIVO_UNITA As String, ByRef Comunicazioni As String, ByRef AreaEconomica As Integer, ByRef sISEE As String, ByRef sISE As String, ByRef sISR As String, ByRef sISP As String, ByRef sVSE As String, ByRef sREDD_DIP As String, ByRef sREDD_ALT As String, ByRef sLimitePensione As String, ByRef sPER_VAL_LOC As String, ByRef sPERC_INC_MAX_ISE_ERP As String, ByRef sCANONE_MIN As String, ByRef sISE_MIN As String, ByRef sCANONE As String, ByRef sNOTE As String, ByRef sDEM As String, ByRef sSUPCONVENZIONALE As String, ByRef sCOSTOBASE As String, ByRef sZONA As String, ByRef sPIANO As String, ByRef sCONSERVAZIONE As String, ByRef sVETUSTA As String, ByRef sPSE As String, ByRef sINCIDENZAISE As String, ByRef sCOEFFFAM As String, ByRef sSOTTOAREA As String, ByRef sMOTIVODECADENZA As String, ByRef sNUMCOMP As String, ByRef sNUMCOMP66 As String, ByRef sNUMCOMP100 As String, ByRef sNUMCOMP100C As String, ByRef sPREVDIP As String, ByRef sDETRAZIONI As String, ByRef sMOBILIARI As String, ByRef sIMMOBILIARI As String, ByRef sCOMPLESSIVO As String, ByRef sDETRAZIONIF As String, ByRef sANNOCOSTRUZIONE As String, ByRef sLOCALITA As String, ByRef sASCENSORE As String, ByRef sDESCRIZIONEPIANO As String, ByRef sSUPNETTA As String, ByRef sALTRESUP As String, ByRef sMINORI15 As String, ByRef sMAGGIORI65 As String, ByRef sSUPACCESSORI As String, ByRef sVALORELOCATIVO As String, ByRef sCANONECLASSE As String, ByRef sCANONESOPP As String, ByRef sVALOCIICI As String, ByRef sALLOGGIOIDONEO As String, ByRef sISTAT As String, ByRef sCANONECLASSEISTAT As String, ByRef sANNOINIZIOVAL As String, ByRef sANNOFINEVAL As String) As String

            Comunicazioni = ""
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double

            Dim ISEE As Double = 0
            Dim PSE As Double = 0
            Dim VSE As Double = 0
            Dim ISE As Double = 0
            Dim ISR As Double = 0
            Dim ISP As Double = 0
            Dim REDD_DIP As Double = 0
            Dim REDD_ALT As Double = 0
            Dim totS As Double = 0

            Dim TotDetrazioni As Double = 0
            Dim TotMobiliari As Double = 0
            Dim TotImmobiliari As Double = 0
            Dim REDDITO_COMPLESSIVO As Double = 0
            Dim DETRAZIONI_F As Double = 0

            Dim NumComponenti As Integer = 0
            Dim IdDichiarazione As Long
            Dim Minori65 As Boolean = False
            Dim IdDomanda As Long = 0
            Dim Note As String = ""
            Dim BUONO As Boolean = True

            Dim AREA As Integer
            Dim PER_VAL_LOC As Integer
            Dim PERC_INC_MAX_ISE_ERP As Integer
            Dim CANONE_MIN As Double
            Dim ISE_MIN As Double
            Dim LimitePensioni As Double = 0

            Dim AREAMIA As Integer
            Dim CanoneDaPagare As Double

            Dim COEF_NUCLEO_FAM As Double = 0
            Dim Decadenza As String = "0"
            Dim Ise_erp_new As Double = 0
            Dim Disabilita66 As Boolean = False
            Dim DataDecorrenzaContratto As String = ""
            Dim StatoDichiarazione As Integer = 1

            Dim NUM66 As Integer = 0
            Dim NUM99 As Integer = 0
            Dim NUM100 As Integer = 0
            Dim NUM100C As Integer = 0

            sPREVDIP = "0"

            sDETRAZIONI = "0"
            sMOBILIARI = "0"
            sIMMOBILIARI = "0"
            sCOMPLESSIVO = "0"
            sDETRAZIONIF = "0"
            sANNOCOSTRUZIONE = ""
            sLOCALITA = ""
            sASCENSORE = "0"
            sDESCRIZIONEPIANO = ""
            sSUPNETTA = ""
            sALTRESUP = ""


            sMINORI15 = "0"
            sMAGGIORI65 = "0"
            sSUPACCESSORI = ""
            sVALORELOCATIVO = ""

            sCANONECLASSE = ""
            sCANONESOPP = ""
            sCANONECLASSEISTAT = ""
            sISTAT = ""

            sANNOFINEVAL = ""
            sANNOINIZIOVAL = ""

            Dim MINORI15 As Integer = 0
            Dim MAGGIORI65 As Integer = 0
            Dim ANNO_SIT_ECONOMICA As String = ""

            Try
                CalcolaCanone27_AU_2009 = 0
                sMOTIVODECADENZA = ""

                par.OracleConn.Open()
                par.SettaCommand(par)

                sNUMCOMP = 0
                sDETRAZIONI = "0"

                sALLOGGIOIDONEO = "0"
                sVALOCIICI = "0"
                sSOTTOAREA = ""

                'prendo i dati dalla dichiarazione au



                If Id <> -1 Then
                    par.cmd.CommandText = "SELECT * FROM UTENZA_DICHIARAZIONI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")

                        sANNOINIZIOVAL = ANNO_SIT_ECONOMICA + 2 & "0101"
                        sANNOFINEVAL = ANNO_SIT_ECONOMICA + 3 & "1231"
                    End If
                    myReaderX.Close()
                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.UTENZA_redditi where id_utenza=" & Id
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.utenza_redditi where id_utenza=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.utenza_COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.utenza_comp_patr_immob where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.UTENZA_COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()


                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While

                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If

                        End If
                        myReaderQ.Close()

                        If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                            DETRAZIONI_F = 10000
                        End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT
                Else
                    IdDichiarazione = -1
                    ISEE = 0
                    ISE = 0
                    ISR = 0
                    ISP = 0
                    PSE = 0
                    VSE = 0
                    StatoDichiarazione = -1
                    sREDD_DIP = 0
                    sREDD_ALT = 0
                    NumComponenti = 0
                End If
                sMINORI15 = MINORI15
                sMAGGIORI65 = MAGGIORI65

                sNUMCOMP = NumComponenti
                sNUMCOMP66 = NUM66
                sNUMCOMP100 = NUM100
                sNUMCOMP100C = NUM100C

                sDETRAZIONI = TotDetrazioni
                sMOBILIARI = TotMobiliari
                sIMMOBILIARI = TotImmobiliari
                sCOMPLESSIVO = REDDITO_COMPLESSIVO
                sDETRAZIONIF = DETRAZIONI_F

                sISEE = ISEE
                sISE = ISE
                sISR = ISR
                sISP = ISP
                sVSE = VSE
                sPSE = PSE



                StringaFile = "COMUNE DI MILANO - PROSPETTO CANONE AU 2009 (redditi 2008)" & vbCrLf & vbCrLf


                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = StringaFile & "CALCOLO CANONE L.R. 27/07   - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf
                    sLOCALITA = par.IfNull(myReader("COMUNE_DI"), "")

                    If Cod_Contratto <> "" Then
                        StringaFile = StringaFile & "CONTRATTO COD: " & Cod_Contratto & vbCrLf & vbCrLf
                    End If
                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf
                    If SUP_CONVENZIONALE = 0 Then
                        Note = Note & "SUP.CONVENZIONALE UGUALE A 0 O ASSENTE/"
                        BUONO = False
                    End If

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111) = 1111 And par.IfNull(myReader("DATA_COSTRUZIONE"), 1111) = 1111 Then
                        Note = Note & "DATA RISTRUTTURAZIONE E COSTRUZIONE ASSENTI/"
                        BUONO = False
                    End If


                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000

                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4)
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4)
                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    StringaFile = StringaFile & vbTab & "Indice Ubicazione:..............." & ZONA & vbCrLf

                    If ZONA = 0 Then
                        Note = Note & "INDICE ZONA UGUALE A 0/"
                        BUONO = False
                    End If


                    'LIVELLO PIANO
                    'par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO,SISCOM_MI.PIANI where PIANI.COD_TIPO_LIVELLO_PIANO=" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & " AND TIPO_LIVELLO_PIANO.COD=PIANI.COD_TIPO_LIVELLO_PIANO"
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                        End If
                        sDESCRIZIONEPIANO = par.IfNull(myReaderA("DESCRIZIONE"), "")
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPNETTA = par.IfNull(myReaderA("VALORE"), 0)
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI WHERE COD_TIPOLOGIA<>'SUP_NETTA' AND COD_TIPOLOGIA<>'SUP_CONV' AND TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sALTRESUP = sALTRESUP & par.IfNull(myReaderA("DESCRIZIONE"), 0) & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI,SISCOM_MI.UNITA_IMMOBILIARI WHERE TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND DIMENSIONI.ID_UNITA_IMMOBILIARE=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPACCESSORI = sSUPACCESSORI & par.IfNull(myReaderA("DESCRIZIONE"), 0) & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    If CONSERVAZIONE = 0 Then
                        Note = Note & "INDICE CONSERVAZIONE UGUALE A 0/"
                        BUONO = False
                    End If

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    If VETUSTA = 0 Then
                        Note = Note & "INDICE VETUSTA UGUALE A 0/"
                        BUONO = False
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    VAL_LOCATIVO_UNITA = Format(VALORELOCATIVO, "##,##0.00")
                    sVALORELOCATIVO = VALORELOCATIVO

                    sDEM = DEM
                    sSUPCONVENZIONALE = SUP_CONVENZIONALE
                    sCOSTOBASE = COSTO_BASE_MC
                    sZONA = ZONA
                    sPIANO = PIANO
                    sCONSERVAZIONE = CONSERVAZIONE
                    sVETUSTA = VETUSTA


                    'Decadenza = "1"

                    'If Decadenza = "0" Then
                    If Id <> -1 Then
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "DATI REDDITUALI - CALCOLO ISE-ERP ED ISEE-ERP" & vbCrLf


                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. ................................................." & sNUMCOMP
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MINORI 15 ANNI..................................." & sMINORI15
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MAGGIORI 65 ANNI................................." & sMAGGIORI65
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 66%-99%................................." & sNUMCOMP66
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100%...................................." & sNUMCOMP100
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100% CON IND. ACC......................." & sNUMCOMP100C
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI................................................" & Format(CDbl(sDETRAZIONI), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI PER FRAGILITA'................................." & Format(CDbl(sDETRAZIONIF), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI MOBILIARI.........................................." & Format(CDbl(sMOBILIARI), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI IMMOBILIARI........................................" & Format(CDbl(sIMMOBILIARI), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "REDDITO COMPLESSIVO......................................." & Format(CDbl(sCOMPLESSIVO), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISEE ERP EFF.............................................." & Format(ISEE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISE ERP EFF..............................................." & Format(ISE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISR:......................................................" & Format(ISR, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISP:......................................................" & Format(ISP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VSE:......................................................" & Format(VSE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Redditi Dipendenti o Assimilati:.........................." & Format(REDD_DIP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Altri tipi di reddito Imponibili:........................." & Format(REDD_ALT, "##,##0.00")
                    Else
                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE AU 2009 NON PRESENTATA/"
                    End If

                    If ISEE > 35000 Or StatoDichiarazione = 0 Or StatoDichiarazione = 2 Then
                        Decadenza = "1"

                    End If



                    Dim CatCatastale As String = ""

                    If Id <> -1 Then
                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then


                            Do While myReaderA.Read
                                If Mid(par.IfNull(myReaderA("cat_catastale"), "X"), 1, 1) = "A" Then
                                    Select Case NumComponenti
                                        Case 1, 2
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 54 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 1-2 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 3, 4
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 74 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 3-4 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 5, 6
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 90 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 5-6 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case Is > 7
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 114 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 7 O + COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                    End Select
                                End If
                            Loop
                        End If
                        myReaderA.Close()

                        par.cmd.CommandText = "SELECT SUM(VALORE) FROM UTENZA_COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then
                            Do While myReaderA.Read

                                Select Case NumComponenti
                                    Case 1, 2
                                        If par.IfNull(myReaderA(0), 0) >= 42026.25 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 1-2 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 3, 4
                                        If par.IfNull(myReaderA(0), 0) >= 54634.13 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE  PER 3-4 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 5, 6
                                        If par.IfNull(myReaderA(0), 0) >= 58836.75 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 5-6 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case Is > 7
                                        If par.IfNull(myReaderA(0), 0) >= 75647.25 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 7 O + COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                End Select
                            Loop
                        End If
                        myReaderA.Close()


                        par.cmd.CommandText = "select COD_TIPOLOGIA_CONTR_LOC from siscom_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "'"
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.Read Then
                            If par.IfNull(myReaderA("COD_TIPOLOGIA_CONTR_LOC"), "") = "NONE" Then
                                Decadenza = "1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "TIPOLOGIA RAPPORTO ABUSIVO/"
                                ISEE = 48001
                                sSOTTOAREA = "D7"
                            End If
                        End If
                        myReaderA.Close()
                    End If


                    If Decadenza = "0" Then
                        'PENSIONE INPS

                        par.cmd.CommandText = "select valore from siscom_MI.parametri where parametro= 'LIMITE 2 PENSIONI'"
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.Read Then
                            LimitePensioni = 10903 'par.IfNull(myReaderA("VALORE"), 0)
                        End If
                        myReaderA.Close()

                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Limite 2 pensioni INPS, minima + sociale:................." & Format(LimitePensioni, "##,##0.00")
                        'End If
                        '
                        'VERIFICA SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE O NO
                        Dim prev_dip As Boolean
                        prev_dip = False

                        If ISEE = 0 Then
                            Beep()
                            'prev_dip = True
                        End If

                        If REDD_DIP > ((REDD_ALT + REDD_DIP) * 80) / 100 Then
                            prev_dip = True
                            'If ISEE <> 0 Then
                            StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................SI"
                            'End If
                        Else
                            'If ISEE <> 0 Then
                            StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................NO"
                            'End If
                        End If

                        If prev_dip = True Then
                            sPREVDIP = "1"
                        Else
                            sPREVDIP = "0"
                        End If

                        'DEFINIZIONE PARAMETRI L.R27 TENENDO CONTO ANCHE SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE E ISEE-ERP<9000

                        ISEE = Math.Truncate(ISEE)
                        ISE = Math.Truncate(ISE)

                        par.cmd.CommandText = "SELECT * FROM SISCOM_MI.CANONE_SOPPORTABILE_AU_2009 ORDER BY ISEE_ERP ASC"
                        myReaderA = par.cmd.ExecuteReader()
                        If prev_dip = True Then
                            If ISEE <= 8162 Then
                                If REDD_DIP + REDD_ALT < LimitePensioni Then
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    AREA = 1
                                    PER_VAL_LOC = 36
                                    PERC_INC_MAX_ISE_ERP = 16
                                    CANONE_MIN = 20
                                    sSOTTOAREA = "A5"
                                    ISE_MIN = ISEE
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                End If
                            Else
                                If ISEE <= 9182 Then
                                    If REDD_DIP + REDD_ALT > LimitePensioni Then
                                        AREA = 1
                                        PER_VAL_LOC = 36
                                        PERC_INC_MAX_ISE_ERP = 16
                                        CANONE_MIN = 20
                                        'ISE_MIN = 8163
                                        sSOTTOAREA = "A5"
                                        'If ISEE < 8163 Then
                                        '    ISE_MIN = 8163
                                        'Else
                                        ISE_MIN = ISEE
                                        'End If
                                        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                    Else
                                        Do While myReaderA.Read
                                            If ISEE <= myReaderA("ISEE_ERP") Then
                                                AREA = myReaderA("AREE")
                                                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                                CANONE_MIN = myReaderA("CANONE_MINIMO")
                                                sSOTTOAREA = myReaderA("SOTTO_AREA")
                                                ISE_MIN = ISEE
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = IfNull(myReaderA("INC_MAX_ISEE_ERP"), 0)
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            ISE_MIN = ISEE
                                            Exit Do
                                        End If
                                    Loop
                                End If

                            End If
                        Else
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE <> 0 Then
                                Comunicazioni = "Probabile Errore...non sono stati inseriti i redditi convenzionali!"
                            End If

                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 Then
                                AREA = 2
                                PER_VAL_LOC = 43
                                PERC_INC_MAX_ISE_ERP = 20
                                CANONE_MIN = 70
                                ISE_MIN = 9183
                                sSOTTOAREA = "B1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            Else

                                'If ISEE = 0 Then
                                '    Do While myReaderA.Read
                                '        If ISEE <= myReaderA("ISEE_ERP") Then
                                '            AREA = myReaderA("AREE")
                                '            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                '            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                '            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                '            ISE_MIN = ISEE
                                '            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                '            Exit Do
                                '        End If
                                '    Loop
                                'Else
                                If ISEE <= 9182 Then
                                    AREA = 2
                                    PER_VAL_LOC = 43
                                    PERC_INC_MAX_ISE_ERP = 20
                                    CANONE_MIN = 70
                                    sSOTTOAREA = "B1"
                                    ISE_MIN = 9183
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                'End If
                            End If
                        End If



                        'If ISEE > 35000 Then
                        '    If Minori65 = True Then Decadenza = "1"
                        '    If Disabilita66 = False Then Decadenza = "1"

                        '    If Decadenza = "1" Then
                        '        par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                        '        myReaderW = par.cmd.ExecuteReader()
                        '        If myReaderW.Read Then
                        '            DataDecorrenzaContratto = par.IfNull(myReaderW(0), 0)
                        '        End If
                        '        myReaderW.Close()
                        '    End If

                        '    If Decadenza = "0" Then
                        '        AREA = 3
                        '        PER_VAL_LOC = 120
                        '        PERC_INC_MAX_ISE_ERP = 24
                        '        CANONE_MIN = 120
                        '        ISE_MIN = 33669
                        '        sSOTTOAREA = "C13"
                        '    End If

                        'End If
                    Else
                        If ISEE > 35000 And ISEE <> 48001 And Id <> -1 Then
                            If Disabilita66 = True Then
                                Decadenza = "0"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma invalidi > 66% nel nucleo/"
                                sSOTTOAREA = ""
                            Else
                                par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                                Dim myReaderY As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderY.Read Then
                                    DataDecorrenzaContratto = par.IfNull(myReaderY(0), 0)
                                End If
                                myReaderY.Close()

                                If Minori65 = False And par.RicavaEtaChiusura(par.FormattaData(DataDecorrenzaContratto), "20091231") >= 30 Then
                                    Decadenza = "0"
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma data stipula>=30 e tutti i comp.>65 anni/"
                                    sSOTTOAREA = ""
                                Else

                                    'If par.RicavaEtaChiusura(par.FormattaData(DataDecorrenzaContratto), "20091231") >= 30 Then
                                    '    Decadenza = "0"
                                    '    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma data stipula>=30 ANNI rispetto a data applicazione AU/"
                                    'End If
                                End If
                            End If

                            If Decadenza = "1" Then
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000/"
                                'sSOTTOAREA = "D4"
                            End If
                        End If

                        If StatoDichiarazione = 0 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE INCOMPLETA/"
                            ISEE = 48001
                            sSOTTOAREA = "D5"
                        End If

                        If StatoDichiarazione = 2 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE DA CANCELLARE/"
                            ISEE = 48001
                            sSOTTOAREA = "D5"
                        End If

                        If Decadenza = "1" And Id <> -1 Then
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI.CANONE_SOPPORTABILE_AU_2009 where aree=4 ORDER BY ISEE_ERP ASC"
                            myReaderA = par.cmd.ExecuteReader()
                            Do While myReaderA.Read
                                If ISEE <= myReaderA("ISEE_ERP") Then
                                    AREA = myReaderA("AREE")
                                    PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                    PERC_INC_MAX_ISE_ERP = 0
                                    CANONE_MIN = myReaderA("CANONE_MINIMO")
                                    ISE_MIN = ISEE
                                    If sSOTTOAREA = "" Then
                                        sSOTTOAREA = myReaderA("SOTTO_AREA")
                                    End If
                                    Exit Do
                                End If
                            Loop
                        Else
                            If Id <> -1 Then
                                AREA = 3
                                PER_VAL_LOC = 120
                                PERC_INC_MAX_ISE_ERP = 24
                                CANONE_MIN = 200
                                ISE_MIN = 33669
                                sSOTTOAREA = "C13"
                                'If Disabilita66 = True Then
                                '    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma presenti invalidi>66% nel nucleo/"
                                'End If
                                'If Minori65 = False Then
                                '    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma tutti i componenti>65 anni/"
                                'End If
                            Else
                                AREA = 4
                                PER_VAL_LOC = 200
                                PERC_INC_MAX_ISE_ERP = 0
                                CANONE_MIN = 250
                                ISE_MIN = 48001
                                sSOTTOAREA = "D6"
                            End If
                        End If


                    End If

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "DETERMINAZIONE DEL CANONE" & vbCrLf

                    AREAMIA = AREA

                    If Decadenza = "0" Then
                        Select Case AREA
                            Case 1
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PROTEZIONE"
                                sISTAT = "1,275"
                            Case 2
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................ACCESSO"
                                sISTAT = "1,806"
                            Case 3
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PERMANENZA"
                                sISTAT = "3,868"
                        End Select
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................DECADENZA"
                        sISTAT = "3,868"
                    End If

                    StringaFile = StringaFile & vbCrLf & vbTab & "Fascia:..................................................." & sSOTTOAREA


                    'DATI FINALI PER LA STRINGA STAMPA

                    'If ISEE <> 0 Then
                    StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(ISE_MIN, "##,##0.00")
                    'Else
                    'If Decadenza = "0" Then
                    'StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(0, "##,##0.00")
                    'End If
                    'End If



                    If Decadenza = "0" Then
                        'SE L 'ISE ERP E' MAGGIORE DELL'ISEE SI PRENDE QUELLO ALTRIMENTI L'ISEE PER LA LEGGE 27 DIVENTA ISE!SEMPRE IL MAGGIORE VA PRESO!

                        If ISE > (ISE_MIN * VSE) Then
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'End If

                            Ise_erp_new = ISE
                        Else
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'End If

                            Ise_erp_new = (ISE_MIN * VSE)
                        End If
                    End If

                    If Decadenza = "0" Then

                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "INCIDENZA PERCENTUALE MASSIMA SU ISE-ERP:................." & PERC_INC_MAX_ISE_ERP & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORE INCIDENZA SU ISE-ERP:.............................." & Format((PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100, "##,##0.00")
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"

                    End If
                    'DEFINIZIONE COEFFICIENTE NUCLEI FAMILIARI CON UN SOLO COMPONENTE

                    Dim TOT_COMPONENTI As Integer = 1

                    If Decadenza = "0" Then
                        COEF_NUCLEO_FAM = 1
                        If NumComponenti = 1 Then
                            If AREA = 1 Then
                                COEF_NUCLEO_FAM = 0.7
                            ElseIf AREA = 2 Then
                                COEF_NUCLEO_FAM = 0.8
                            ElseIf AREA = 3 Then
                                COEF_NUCLEO_FAM = 0.85
                            End If
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI CON UN SOLO COMPONENTE: " & COEF_NUCLEO_FAM
                        Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI:........................" & COEF_NUCLEO_FAM

                        End If
                    End If
                    '  CANONE MINIMO
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE MINIMO MENSILE.................................. : " & Format(CANONE_MIN, "0.00")
                    'End If



                    'CALCOLO CANONE ERP A REGIME ANNUALE
                    Dim CanoneMIN As Double = 0
                    Dim canoneA As Double = 0
                    Dim canoneB As Double = 0
                    Dim canoneB1 As Double = 0
                    Dim CanoneErpRegime As Double = 0
                    Dim CANONEERPMIO As Double = 0
                    Dim CANONEAPP As Double = 0


                    If Decadenza = "0" Then

                        CanoneMIN = CANONE_MIN * 12
                        canoneA = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100

                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = (CANONEAPP + ((CANONEAPP * CDbl(sISTAT)) / 100)) * COEF_NUCLEO_FAM
                        canoneB1 = CANONEAPP * COEF_NUCLEO_FAM

                        If canoneA < canoneB Then
                            If canoneA > CanoneMIN Then
                                CanoneErpRegime = canoneA
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                        Else
                            If canoneB > CanoneMIN Then
                                CanoneErpRegime = canoneB
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                            CANONEERPMIO = CanoneErpRegime

                        End If
                        If CanoneErpRegime > CanoneMIN Then
                            CanoneDaPagare = CanoneErpRegime
                        Else
                            CanoneDaPagare = CanoneMIN
                        End If
                    Else
                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = CANONEAPP + ((CANONEAPP * CDbl(sISTAT)) / 100)
                        canoneB1 = CANONEAPP

                        CanoneDaPagare = canoneB
                        If CanoneDaPagare < 3000 Then
                            CanoneDaPagare = 3000
                        End If
                    End If

                    sCANONECLASSE = Format(canoneB1, "0.00")
                    sCANONECLASSEISTAT = Format(canoneB, "0.00")

                    sCANONESOPP = Format(canoneA, "0.00")

                    IMPORTO = Format(CanoneDaPagare, "0.00")

                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(canoneB1, "##,##0.00")
                    StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & sISTAT
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(canoneB, "##,##0.00")

                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(CanoneDaPagare, "##,##0.00")
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(Round(CanoneDaPagare, 2) / 12, "##,##0.00")

                    CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace(sMOTIVODECADENZA, "/", vbCrLf)

                    CalcolaCanone27_AU_2009 = StringaFile
                Else
                    CalcolaCanone27_AU_2009 = "Canone non calcolabile per mancanza di dati!"
                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Canone non calcolabile per mancanza di dati Unità!/"

                End If

                If sMOTIVODECADENZA <> "Canone non calcolabile per mancanza di dati Unità!/" Then
                    AreaEconomica = AREAMIA
                    sLimitePensione = LimitePensioni
                    sPER_VAL_LOC = PER_VAL_LOC
                    sPERC_INC_MAX_ISE_ERP = PERC_INC_MAX_ISE_ERP
                    sCANONE_MIN = CANONE_MIN
                    sISE_MIN = ISE_MIN
                    sCANONE = CanoneDaPagare
                    sNOTE = Note
                    sCOEFFFAM = COEF_NUCLEO_FAM
                    sINCIDENZAISE = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100
                Else
                    AreaEconomica = -1
                End If

                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                IMPORTO = 0
                sNOTE = ex.Message
                CalcolaCanone27_AU_2009 = ex.Message
            End Try
        End Function
        Function settaConn(ByVal s As String)
            'Beep()
        End Function
        Public Sub CaricaAvvisiLiquidazione(ByVal IdRiferimento As String, ByRef dataGridAvvisi As DataGrid)
            Dim DaChiudere As Boolean = False
            Dim queryAvvisi As String = ""
            Try
                queryAvvisi = "SELECT " _
                            & "(CASE WHEN RICEVUTA IS NULL THEN '' ELSE replace(replace('<a href=£javascript:void(0)£ onclick=£window.open(''../ALLEGATI/CONTRATTI/ELABORAZIONI/RICEVUTE/'||RICEVUTA||''','''','''');£>'||'Visuliazza'||'</a>','$','&'),'£','') END) AS RICEVUTA," _
                            & "(CASE WHEN RICEVUTA IS NULL THEN '' ELSE replace(replace('<a href=£javascript:void(0)£ onclick=£window.open(''../ALLEGATI/CONTRATTI/ELABORAZIONI/RICEVUTE/'||QUIETANZA||''','''','''');£>'||'Visuliazza'||'</a>','$','&'),'£','') END) AS QUIETANZA," _
                            & "TRIM(TO_CHAR(IMPORTO,'9G999G999G999G999G990D99')) AS IMPORTO,RAPPORTI_UTENZA_AVVISI_LIQ.ID,TAB_COD_TRIBUTO.CODICE,TRIM(TO_CHAR(SANZIONI,'9G999G999G999G999G990D99')) as SANZIONI,TRIM(TO_CHAR(INTERESSI,'9G999G999G999G999G990D99')) AS INTERESSI," _
                            & "TRIM(TO_CHAR(SPESE_NOTIFICA,'9G999G999G999G999G990D99')) AS SPESE_NOTIFICA,to_char(to_date(DATA_PG,'yyyymmdd'),'dd/mm/yyyy') AS DATA_PG,to_char(to_date(DATA_PAG,'yyyymmdd'),'dd/mm/yyyy') AS DATA_PAG,NOTE,IMPORTO+SANZIONI+INTERESSI+SPESE_NOTIFICA as totale" _
                            & " FROM SISCOM_MI.RAPPORTI_UTENZA_AVVISI_LIQ,SISCOM_MI.TAB_COD_TRIBUTO WHERE TAB_COD_TRIBUTO.ID=RAPPORTI_UTENZA_AVVISI_LIQ.IMPOSTA AND ID_CONTRATTO=" & IdRiferimento

                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    DaChiudere = True
                End If

                cmd = OracleConn.CreateCommand()

                cmd.CommandText = queryAvvisi
                Dim da As New Oracle.DataAccess.Client.OracleDataAdapter(queryAvvisi, OracleConn)
                Dim dt As New Data.DataTable
                da.Fill(dt)
                da.Dispose()

                'If dt.Rows.Count > 0 Then
                dataGridAvvisi.DataSource = dt
                dataGridAvvisi.DataBind()
                'End If

                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If

            Catch ex As Exception
                cmd.Dispose()
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            End Try

        End Sub



        Function CalcolaCanone27RECA(ByVal Id As Long, ByVal Prov As Long, ByVal id_unita As Long, ByVal Cod_Contratto As String, ByRef IMPORTO As Double, ByRef newTransitorio As Double, ByRef VAL_LOCATIVO_UNITA As String, ByRef Comunicazioni As String, ByRef AreaEconomica As Integer, ByRef sISEE As String, ByRef sISE As String, ByRef sISR As String, ByRef sISP As String, ByRef sVSE As String, ByRef sREDD_DIP As String, ByRef sREDD_ALT As String, ByRef sLimitePensione As String, ByRef sPER_VAL_LOC As String, ByRef sPERC_INC_MAX_ISE_ERP As String, ByRef sCANONE_MIN As String, ByRef sISE_MIN As String, ByRef sCANONE As String, ByRef sNOTE As String, ByRef sDEM As String, ByRef sSUPCONVENZIONALE As String, ByRef sCOSTOBASE As String, ByRef sZONA As String, ByRef sPIANO As String, ByRef sCONSERVAZIONE As String, ByRef sVETUSTA As String, ByRef sPSE As String, ByRef sINCIDENZAISE As String, ByRef sCOEFFFAM As String, ByRef sSOTTOAREA As String, ByRef sMOTIVODECADENZA As String, ByRef sNUMCOMP As String, ByRef sNUMCOMP66 As String, ByRef sNUMCOMP100 As String, ByRef sNUMCOMP100C As String, ByRef sPREVDIP As String, ByRef sDETRAZIONI As String, ByRef sMOBILIARI As String, ByRef sIMMOBILIARI As String, ByRef sCOMPLESSIVO As String, ByRef sDETRAZIONIF As String, ByRef sANNOCOSTRUZIONE As String, ByRef sLOCALITA As String, ByRef sASCENSORE As String, ByRef sDESCRIZIONEPIANO As String, ByRef sSUPNETTA As String, ByRef sALTRESUP As String, ByRef sMINORI15 As String, ByRef sMAGGIORI65 As String, ByRef sSUPACCESSORI As String, ByRef sVALORELOCATIVO As String, ByRef sCANONECLASSE As String, ByRef sCANONESOPP As String, ByRef sVALOCIICI As String, ByRef sALLOGGIOIDONEO As String, ByRef sISTAT As String, ByRef sCANONECLASSEISTAT As String, ByRef sANNOINIZIOVAL As String, ByRef sANNOFINEVAL As String, ByRef parte1 As String, ByRef parte2 As String, ByRef parte3 As String, ByRef parte4 As String, Optional ByVal ANNO_RIFERIMENTO As Integer = 0) As String
            Comunicazioni = ""
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double

            Dim annoCalcolo As Integer

            Dim UnitaVenduta As Boolean = False

            Dim ISEE As Double = 0
            Dim PSE As Double = 0
            Dim VSE As Double = 0
            Dim ISE As Double = 0
            Dim ISR As Double = 0
            Dim ISP As Double = 0
            Dim REDD_DIP As Double = 0
            Dim REDD_ALT As Double = 0
            Dim totS As Double = 0

            Dim TotDetrazioni As Double = 0
            Dim TotMobiliari As Double = 0
            Dim TotImmobiliari As Double = 0
            Dim TotImmobilResid As Double = 0
            Dim TotImmobilCompless As Double = 0
            Dim FigurativoMobili As Double = 0
            Dim TotPatrimonioIseeERP As Double = 0
            Dim limitePatrimonio As Double = 0
            Dim patrimonioSuperato As String = ""
            Dim idBandoAU As Long = 0
            Dim REDDITO_COMPLESSIVO As Double = 0
            Dim DETRAZIONI_F As Double = 0

            Dim NumComponenti As Integer = 0
            Dim IdDichiarazione As Long
            Dim Minori65 As Boolean = False
            Dim IdDomanda As Long = 0
            Dim Note As String = ""
            Dim BUONO As Boolean = True

            Dim AREA As Integer
            Dim PER_VAL_LOC As Integer
            Dim PERC_INC_MAX_ISE_ERP As Integer
            Dim CANONE_MIN As Double
            Dim ISE_MIN As Double
            Dim LimitePensioni As Double = 0

            Dim AREAMIA As Integer
            Dim CanoneDaPagare As Double

            Dim COEF_NUCLEO_FAM As Double = 0
            Dim Decadenza As String = "0"
            Dim Ise_erp_new As Double = 0
            Dim Disabilita66 As Boolean = False
            Dim DataDecorrenzaContratto As String = ""
            Dim StatoDichiarazione As Integer = 1

            Dim NUM66 As Integer = 0
            Dim NUM99 As Integer = 0
            Dim NUM100 As Integer = 0
            Dim NUM100C As Integer = 0

            sPREVDIP = "0"

            sDETRAZIONI = "0"
            sMOBILIARI = "0"
            sIMMOBILIARI = "0"
            sCOMPLESSIVO = "0"
            sDETRAZIONIF = "0"
            sANNOCOSTRUZIONE = ""
            sLOCALITA = ""
            sASCENSORE = "0"
            sDESCRIZIONEPIANO = ""
            sSUPNETTA = ""
            sALTRESUP = ""


            sMINORI15 = "0"
            sMAGGIORI65 = "0"
            sSUPACCESSORI = ""
            sVALORELOCATIVO = ""

            sCANONECLASSE = ""
            sCANONESOPP = ""
            sCANONECLASSEISTAT = ""
            sISTAT = ""

            sANNOFINEVAL = ""
            sANNOINIZIOVAL = ""

            Dim MINORI15 As Integer = 0
            Dim MAGGIORI65 As Integer = 0
            Dim ANNO_SIT_ECONOMICA As String = ""

            Dim DATA_EVENTO As String = ""
            Dim DATA_EVENTO_DOMANDA As String = ""

            Try
                CalcolaCanone27RECA = 0

                par.OracleConn.Open()
                par.SettaCommand(par)

                If Prov = 0 Then
                    par.cmd.CommandText = "SELECT * FROM UTENZA_DICHIARAZIONI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        'IdDomanda = par.IfNull(myReaderX("ID"), 0)
                        Cod_Contratto = par.IfNull(myReaderX("RAPPORTO"), "")
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)
                        idBandoAU = par.IfNull(myReaderX("ID_BANDO"), 0)
                        DATA_EVENTO = par.IfNull(myReaderX("DATA_INIZIO_VAL"), Format(Now, "yyyyMMdd"))

                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.UTENZA_REDDITI where ID_UTENZA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.UTENZA_REDDITI where ID_UTENZA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.UTENZA_COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.utenza_comp_patr_immob where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.UTENZA_COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            If par.IfNull(myReaderQ("F_RESIDENZA"), 0) = 1 Then
                                TotImmobilResid = TotImmobilResid + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            Else
                                TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            End If
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If


                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If


                If Prov = 1 Then
                    'prendo i dati dalla domanda erp
                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        ISEE = par.IfNull(myReaderX("REDDITO_ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = Format(Now, "yyyyMMdd")
                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = "20100101" 'par.IfNull(myReaderX("data_inizio_val"), "2009")
                        sANNOFINEVAL = "20111231" ' par.IfNull(myReaderX("data_fine_val"), "2009")

                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)) from sepa.DOMANDE_REDDITI where ID_DOMANDA=" & Id
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI where ID_DOMANDA=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            If par.IfNull(myReaderQ("F_RESIDENZA"), 0) = 1 Then
                                TotImmobilResid = TotImmobilResid + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            Else
                                TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            End If
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If




                If Prov = 2 Then

                    'prendo i dati dalla domanda CAMBI

                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO_CAMBI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        ISEE = par.IfNull(myReaderX("reddito_ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = Format(Now, "yyyyMMdd")

                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_CAMBI WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = "20100101" 'par.IfNull(myReaderX("data_inizio_val"), "2009")
                        sANNOFINEVAL = "20111231" ' par.IfNull(myReaderX("data_fine_val"), "2009")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)) from sepa.DOMANDE_REDDITI_CAMBI where ID_DOMANDA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_CAMBI where ID_DOMANDA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_CAMBI where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_CAMBI where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_CAMBI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_MOB_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT



                End If


                If Prov = 3 Or Prov = 11 Then

                    'prendo i dati dalla domanda VSA
                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO_VSA WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        ISEE = par.IfNull(myReaderX("REDDITO_ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)
                        'MAX 12/04/2019 Viene presa la data evento per fare il confronto e ricavare l'età
                        DATA_EVENTO_DOMANDA = Mid(par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd")), 1, 4) & "1231"

                        If ANNO_RIFERIMENTO <> 0 Then
                            DATA_EVENTO = ANNO_RIFERIMENTO
                        Else
                            DATA_EVENTO = par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd"))
                        End If


                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_VSA WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_VSA where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_VSA where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_VSA where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) AS IMPORTO FROM COMP_PATR_MOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            If par.IfNull(myReaderQ("F_RESIDENZA"), 0) = 1 Then
                                TotImmobilResid = TotImmobilResid + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            Else
                                TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            End If
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If
                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If

                If Prov = 4 Then

                    'prendo i dati dalla DICHIARAZIONE VSA

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_VSA WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")

                        DATA_EVENTO = Format(Now, "yyyyMMdd")
                        'MAX 12/04/2019 Viene presa la data evento per fare il confronto e ricavare l'età
                        DATA_EVENTO_DOMANDA = Mid(par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd")), 1, 4) & "1231"
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & Id
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_VSA where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_VSA where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_VSA where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) AS IMPORTO FROM COMP_PATR_MOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            If par.IfNull(myReaderQ("F_RESIDENZA"), 0) = 1 Then
                                TotImmobilResid = TotImmobilResid + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            Else
                                TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            End If
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If


                If Prov = 5 Then

                    'prendo i dati dalla domanda vsa
                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO_VSA WHERE ID_DICHIARAZIONE=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        IdDomanda = par.IfNull(myReaderX("ID"), 0)
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd"))
                        'MAX 12/04/2019 Viene presa la data evento per fare il confronto e ricavare l'età
                        DATA_EVENTO_DOMANDA = Mid(par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd")), 1, 4) & "1231"

                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_VSA WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDomanda
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDomanda
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_VSA where id_DICHIARAZIONE=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DATA_EVENTO_DOMANDA) > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_VSA where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_VSA where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) AS IMPORTO FROM COMP_PATR_MOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            If par.IfNull(myReaderQ("F_RESIDENZA"), 0) = 1 Then
                                TotImmobilResid = TotImmobilResid + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            Else
                                TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                            End If
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If


                sMINORI15 = MINORI15
                sMAGGIORI65 = MAGGIORI65

                sNUMCOMP = NumComponenti
                sNUMCOMP66 = NUM66
                sNUMCOMP100 = NUM100
                sNUMCOMP100C = NUM100C

                sDETRAZIONI = TotDetrazioni
                sMOBILIARI = TotMobiliari
                sIMMOBILIARI = TotImmobiliari
                sCOMPLESSIVO = REDDITO_COMPLESSIVO
                sDETRAZIONIF = DETRAZIONI_F

                FigurativoMobili = (TotMobiliari \ 5165) * 5165
                TotImmobilCompless = TotImmobiliari + TotImmobilResid
                TotPatrimonioIseeERP = (TotImmobilCompless + FigurativoMobili)
                limitePatrimonio = 16000 + (6000 * VSE)


                sISEE = ISEE
                sISE = ISE
                sISR = ISR
                sISP = ISP
                sVSE = VSE
                sPSE = PSE

                Dim NOME_TABELLA_REDDITI As String = ""
                Dim LimiteA4 As Long = 0
                Dim InizioUltimaArea As Long = 0
                Dim LimiteDecadenza As Long = 0
                Dim LimiteA5 As Long = 0
                Dim InizioB1 As Long = 0
                Dim InizioC13 As Long = 0

                Dim sISTAT_PROTEZIONE As String = ""
                Dim sISTAT_ACCESSO As String = ""
                Dim sISTAT_PERMANENZA As String = ""
                Dim sISTAT_DECADENZA As String = ""

                If ANNO_RIFERIMENTO <> 0 Then
                    annoCalcolo = ANNO_RIFERIMENTO
                Else
                    annoCalcolo = Mid(DATA_EVENTO, 1, 4)
                End If

                Select Case annoCalcolo
                    Case "2006"
                        LimitePensioni = 10520
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001

                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2007"
                        LimitePensioni = 10731
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2008"
                        LimitePensioni = 10903
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2009"
                        LimitePensioni = 11274
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_36"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "2,025"
                        sISTAT_DECADENZA = "2,025"
                    Case "2010"
                        LimitePensioni = 11343
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2009"
                        LimiteA4 = 8162
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9182
                        InizioB1 = 9183
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0,525"
                        sISTAT_PERMANENZA = "2,56"
                        sISTAT_DECADENZA = "2,56"

                    Case "2011"
                        LimitePensioni = 11501
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2009"
                        LimiteA4 = 8162
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9182
                        InizioB1 = 9183
                        InizioC13 = 33669
                        sISTAT_PROTEZIONE = "1,275"
                        sISTAT_ACCESSO = "1,806"
                        sISTAT_PERMANENZA = "3,868"
                        sISTAT_DECADENZA = "3,868"

                    Case "2012"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2011"

                        LimiteA4 = 8514
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000


                        LimiteA5 = 9579
                        InizioB1 = 9580
                        sISTAT_PROTEZIONE = "3,781"
                        sISTAT_ACCESSO = "4,326"
                        sISTAT_PERMANENZA = "6,439"

                        sISTAT_DECADENZA = "6,439"
                    Case "2013"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2011"
                        LimiteA4 = 8514
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9579
                        InizioB1 = 9580
                        sISTAT_PROTEZIONE = "5,727"
                        sISTAT_ACCESSO = "6,283"
                        sISTAT_PERMANENZA = "8,435"
                        sISTAT_DECADENZA = "8,435"
                    Case "2014"
                        LimitePensioni = 11824
                        'NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2013"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,203"
                        sISTAT_ACCESSO = "6,761"
                        sISTAT_PERMANENZA = "8,923"
                        sISTAT_DECADENZA = "8,923"
                    Case "2015"
                        LimitePensioni = 11824
                        'NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2013"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,363"
                        sISTAT_ACCESSO = "6,921"
                        sISTAT_PERMANENZA = "9,086"
                        sISTAT_DECADENZA = "9,086"
                    Case "2016"
                        LimitePensioni = 12336.87
                        'NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2015"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,4420"
                        sISTAT_ACCESSO = "7,0010"
                        sISTAT_PERMANENZA = "9,1680"
                        sISTAT_DECADENZA = "9,1680"
                    Case "2017"
                        LimitePensioni = 12336.87
                        'NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2015"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,6020"
                        sISTAT_ACCESSO = "7,1710"
                        sISTAT_PERMANENZA = "9,3310"
                        sISTAT_DECADENZA = "9,3310"
                    Case "2018"
                        LimitePensioni = 12349.48
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2017"
                        LimiteA4 = 8798
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9898
                        InizioB1 = 9899
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "7,1610"
                        sISTAT_ACCESSO = "7,7240"
                        sISTAT_PERMANENZA = "9,9050"
                        sISTAT_DECADENZA = "9,9050"
                    Case "2019"
                        LimitePensioni = 12349.48
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2019"
                        LimiteA4 = 8906
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 10020
                        InizioB1 = 10021
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "8,609"
                        sISTAT_ACCESSO = "9,179"
                        sISTAT_PERMANENZA = "11,390"
                        sISTAT_DECADENZA = "11,390"
                    Case "2020", "2021"
                        LimitePensioni = 12349.48
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2020"
                        LimiteA4 = 8919
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 10035
                        InizioB1 = 10036
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "8,772"
                        sISTAT_ACCESSO = "9,343"
                        sISTAT_PERMANENZA = "11,557"
                        sISTAT_DECADENZA = "11,557"
                End Select


                StringaFile = "COMUNE DI MILANO - PROSPETTO CANONE " & vbCrLf & vbCrLf
                parte1 = "COMUNE DI MILANO - PROSPETTO CANONE " & vbCrLf & vbCrLf

                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = StringaFile & "CALCOLO CANONE L.R. 27/07   - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    parte1 = parte1 & "CALCOLO CANONE L.R. 27/07   - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf

                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    parte1 = parte1 & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf

                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf
                    parte1 = parte1 & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf

                    sLOCALITA = par.IfNull(myReader("COMUNE_DI"), "")

                    'If Cod_Contratto <> "" Then
                    '    StringaFile = StringaFile & "CONTRATTO COD: " & Cod_Contratto & vbCrLf & vbCrLf
                    'End If
                    If Cod_Contratto <> "" Then
                        par.cmd.CommandText = "SELECT CASE WHEN anagrafica.ragione_sociale is not null THEN ragione_sociale  ELSE RTRIM(LTRIM(COGNOME ||' ' ||NOME)) END AS ""INTESTATARIO"",rapporti_utenza.data_decorrenza FROM SISCOM_MI.ANAGRAFICA,SISCOM_MI.SOGGETTI_CONTRATTUALI,siscom_mi.rapporti_utenza WHERE RAPPORTI_UTENZA.COD_CONTRATTO='" & Cod_Contratto & "' AND SOGGETTI_CONTRATTUALI.ID_CONTRATTO=RAPPORTI_UTENZA.ID AND (SOGGETTI_CONTRATTUALI.COD_TIPOLOGIA_OCCUPANTE='INTE') AND ANAGRAFICA.ID=SOGGETTI_CONTRATTUALI.ID_ANAGRAFICA ORDER BY SOGGETTI_CONTRATTUALI.COD_TIPOLOGIA_OCCUPANTE DESC"
                        Dim myReader345 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader345.Read Then
                            StringaFile = StringaFile & vbCrLf & "CODICE CONTRATTO: " & Cod_Contratto & " - INTESTATARIO: " & par.IfNull(myReader345("INTESTATARIO"), "") & vbCrLf & vbCrLf
                            parte1 = parte1 & vbCrLf & "CODICE CONTRATTO: " & Cod_Contratto & " - INTESTATARIO: " & par.IfNull(myReader345("INTESTATARIO"), "") & vbCrLf & vbCrLf
                            DataDecorrenzaContratto = par.IfNull(myReader345("data_decorrenza"), "")
                        End If
                        myReader345.Close()
                    End If

                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf
                    parte2 = parte2 & "ANNO " & annoCalcolo & vbCrLf
                    parte2 = parte2 & "DATI UNITA' ABITATIVA" & vbCrLf

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf
                    parte2 = parte2 & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf


                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf
                    parte2 = parte2 & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf

                    If SUP_CONVENZIONALE = 0 Then
                        Note = Note & "SUP.CONVENZIONALE UGUALE A 0 O ASSENTE/"
                        BUONO = False
                    End If

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111) = 1111 And par.IfNull(myReader("DATA_COSTRUZIONE"), 1111) = 1111 Then
                        Note = Note & "DATA RISTRUTTURAZIONE E COSTRUZIONE ASSENTI/"
                        BUONO = False
                    End If


                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000

                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        parte2 = parte2 & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4)
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        parte2 = parte2 & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4)
                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    StringaFile = StringaFile & vbTab & "Indice Ubicazione:..............." & ZONA & vbCrLf
                    parte2 = parte2 & vbTab & "Indice Ubicazione:..............." & ZONA & vbCrLf


                    If ZONA = 0 Then
                        Note = Note & "INDICE ZONA UGUALE A 0/"
                        BUONO = False
                    End If


                    'LIVELLO PIANO
                    'par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO,SISCOM_MI.PIANI where PIANI.COD_TIPO_LIVELLO_PIANO=" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & " AND TIPO_LIVELLO_PIANO.COD=PIANI.COD_TIPO_LIVELLO_PIANO"
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        parte2 = parte2 & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf

                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                            parte2 = parte2 & vbTab & "Ascensore:.......................SI" & vbCrLf

                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                            parte2 = parte2 & vbTab & "Ascensore:.......................NO" & vbCrLf

                        End If
                        sDESCRIZIONEPIANO = par.IfNull(myReaderA("DESCRIZIONE"), "")
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPNETTA = par.IfNull(myReaderA("VALORE"), 0)
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI WHERE COD_TIPOLOGIA<>'SUP_NETTA' AND COD_TIPOLOGIA<>'SUP_CONV' AND TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sALTRESUP = sALTRESUP & par.IfNull(myReaderA("DESCRIZIONE"), 0) & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI,SISCOM_MI.UNITA_IMMOBILIARI WHERE TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND DIMENSIONI.ID_UNITA_IMMOBILIARE=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPACCESSORI = sSUPACCESSORI & par.IfNull(myReaderA("DESCRIZIONE"), 0) & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                        parte2 = parte2 & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf

                    End If
                    myReaderA.Close()

                    If CONSERVAZIONE = 0 Then
                        Note = Note & "INDICE CONSERVAZIONE UGUALE A 0/"
                        BUONO = False
                    End If

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            parte2 = parte2 & vbTab & "Indice Vetusta':.................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf

                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                parte2 = parte2 & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf

                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                    parte2 = parte2 & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf

                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            parte2 = parte2 & vbTab & "Indice Vetusta':.................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf

                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                parte2 = parte2 & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf

                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                    parte2 = parte2 & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf

                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    If VETUSTA = 0 Then
                        Note = Note & "INDICE VETUSTA UGUALE A 0/"
                        BUONO = False
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    parte2 = parte2 & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf

                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    parte2 = parte2 & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf

                    VAL_LOCATIVO_UNITA = Format(VALORELOCATIVO, "##,##0.00")
                    sVALORELOCATIVO = VALORELOCATIVO

                    sDEM = DEM
                    sSUPCONVENZIONALE = SUP_CONVENZIONALE
                    sCOSTOBASE = COSTO_BASE_MC
                    sZONA = ZONA
                    sPIANO = PIANO
                    sCONSERVAZIONE = CONSERVAZIONE
                    sVETUSTA = VETUSTA

                    If myReader("cod_tipo_disponibilita") = "VEND" Then
                        UnitaVenduta = True
                    End If
                    'Decadenza = "1"

                    'If Decadenza = "0" Then
                    If Id <> -1 Then
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "DATI REDDITUALI - CALCOLO ISE-ERP ED ISEE-ERP" & vbCrLf
                        parte3 = parte3 & vbCrLf & vbCrLf & "DATI REDDITUALI - CALCOLO ISE-ERP ED ISEE-ERP" & " Redditi " & annoCalcolo & vbCrLf


                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. ................................................." & sNUMCOMP
                        parte3 = parte3 & vbCrLf & vbTab & "N. COMP. ................................................." & sNUMCOMP

                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MINORI 15 ANNI..................................." & sMINORI15
                        parte3 = parte3 & vbCrLf & vbTab & "N. COMP. MINORI 15 ANNI..................................." & sMINORI15

                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MAGGIORI 65 ANNI................................." & sMAGGIORI65
                        parte3 = parte3 & vbCrLf & vbTab & "N. COMP. MAGGIORI 65 ANNI................................." & sMAGGIORI65

                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 66%-99%................................." & sNUMCOMP66
                        parte3 = parte3 & vbCrLf & vbTab & "N. COMP. INVALIDI 66%-99%................................." & sNUMCOMP66

                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100%...................................." & sNUMCOMP100
                        parte3 = parte3 & vbCrLf & vbTab & "N. COMP. INVALIDI 100%...................................." & sNUMCOMP100

                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100% CON IND. ACC......................." & sNUMCOMP100C
                        parte3 = parte3 & vbCrLf & vbTab & "N. COMP. INVALIDI 100% CON IND. ACC......................." & sNUMCOMP100C

                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI................................................" & Format(CDbl(sDETRAZIONI), "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "DETRAZIONI................................................" & Format(CDbl(sDETRAZIONI), "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI PER FRAGILITA'................................." & Format(CDbl(sDETRAZIONIF), "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "DETRAZIONI PER FRAGILITA'................................." & Format(CDbl(sDETRAZIONIF), "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI MOBILIARI.........................................." & Format(CDbl(sMOBILIARI), "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "VALORI MOBILIARI.........................................." & Format(CDbl(sMOBILIARI), "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI IMMOBILIARI........................................" & Format(CDbl(sIMMOBILIARI), "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "VALORI IMMOBILIARI........................................" & Format(CDbl(sIMMOBILIARI), "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "REDDITO COMPLESSIVO......................................." & Format(CDbl(sCOMPLESSIVO), "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "REDDITO COMPLESSIVO......................................." & Format(CDbl(sCOMPLESSIVO), "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "ISEE ERP EFF.............................................." & Format(ISEE, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "ISEE ERP EFF.............................................." & Format(ISEE, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "ISE ERP EFF..............................................." & Format(ISE, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "ISE ERP EFF..............................................." & Format(ISE, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "ISR:......................................................" & Format(ISR, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "ISR:......................................................" & Format(ISR, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "ISP:......................................................" & Format(ISP, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "ISP:......................................................" & Format(ISP, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "VSE:......................................................" & Format(VSE, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "VSE:......................................................" & Format(VSE, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "Redditi Dipendenti o Assimilati:.........................." & Format(REDD_DIP, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "Redditi Dipendenti o Assimilati:.........................." & Format(REDD_DIP, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "Altri tipi di reddito Imponibili:........................." & Format(REDD_ALT, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "Altri tipi di reddito Imponibili:........................." & Format(REDD_ALT, "##,##0.00")
                    Else
                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE NON PRESENTATA/"
                    End If

                    If ISEE > LimiteDecadenza Or StatoDichiarazione = 0 Or StatoDichiarazione = 2 Then
                        Decadenza = "1"

                    End If



                    Dim CatCatastale As String = ""

                    If Id <> -1 Then
                        Select Case Prov
                            Case 0
                                par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 1
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or PIENA_PROPRIETA=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 2
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_CAMBI WHERE (perc_patr_immobiliare=100 or PIENA_PROPRIETA=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_CAMBI WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 3, 11, 4, 5
                                If annoCalcolo < 2012 Then
                                    par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT ENTRO_70KM FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) ='1' OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                                Else
                                    par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                                End If
                        End Select

                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then


                            Do While myReaderA.Read
                                If Mid(par.IfNull(myReaderA("cat_catastale"), "X"), 1, 1) = "A" Then
                                    Select Case NumComponenti
                                        Case 1, 2
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 54 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 1-2 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 3, 4
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 74 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 3-4 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 5, 6
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 90 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 5-6 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case Is > 7
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 114 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 7 O + COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                    End Select
                                End If
                            Loop
                        End If
                        myReaderA.Close()

                        Select Case Prov
                            Case 0
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM UTENZA_COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 1
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 2
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_CAMBI WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_CAMBI WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 3, 11, 4, 5
                                If annoCalcolo < 2012 Then
                                    par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_VSA WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT ENTRO_70KM FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) ='1' OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                                Else
                                    par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_VSA WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                                End If
                        End Select


                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then
                            Do While myReaderA.Read

                                Select Case NumComponenti
                                    Case 1, 2
                                        If par.IfNull(myReaderA(0), 0) >= 49637.23 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 1-2 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 3, 4
                                        If par.IfNull(myReaderA(0), 0) >= 64528.41 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE  PER 3-4 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 5, 6
                                        If par.IfNull(myReaderA(0), 0) >= 69492.12 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 5-6 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case Is > 7
                                        If par.IfNull(myReaderA(0), 0) >= 89347.02 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 7 O + COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                End Select
                            Loop
                        End If
                        myReaderA.Close()


                        par.cmd.CommandText = "select COD_TIPOLOGIA_CONTR_LOC from siscom_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "'"
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.Read Then
                            If par.IfNull(myReaderA("COD_TIPOLOGIA_CONTR_LOC"), "") = "NONE" Then
                                Decadenza = "1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "TIPOLOGIA RAPPORTO ABUSIVO/"
                                ISEE = InizioUltimaArea
                                sSOTTOAREA = "D7"
                            End If
                        End If
                        myReaderA.Close()
                    End If


                    '*** 25/02/2015 Controllo limite soglia patrimoniale superato *** 

                    If TotPatrimonioIseeERP > limitePatrimonio * 3 Then
                        patrimonioSuperato = "1"
                    End If


                    'If TotPatrimonioIseeERP > limitePatrimonio * 3 Then
                    '    If (MAGGIORI65 = NumComponenti Or NUM100C > 0 Or NUM100 > 0 Or NUM66 > 0) And par.RicavaEta(par.IfEmpty(DataDecorrenzaContratto, Format(Now, "yyyMMdd"))) > 30 Then

                    '    Else
                    '        'limite patrimoniale superato
                    '        patrimonioSuperato = "1"
                    '    End If
                    'End If
                    '*** 25/02/2015 Fine Controllo limite soglia patrimoniale superato ***




                    'StringaFile = StringaFile & vbCrLf & vbTab & "Anno situazione economica:................................" & ANNO_SIT_ECONOMICA
                    Dim prev_dip As Boolean
                    prev_dip = False

                    If REDD_DIP > ((REDD_ALT + REDD_DIP) * 80) / 100 Then
                        prev_dip = True
                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................SI"
                        parte3 = parte3 & vbCrLf & vbTab & "Prevalentemente dipendente:...............................SI"

                        'End If
                    Else
                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................NO"
                        parte3 = parte3 & vbCrLf & vbTab & "Prevalentemente dipendente:...............................NO"

                        'End If
                    End If

                    If prev_dip = True Then
                        sPREVDIP = "1"
                    Else
                        sPREVDIP = "0"
                    End If
                    If Decadenza = "0" Then
                        'PENSIONE INPS

                        'par.cmd.CommandText = "select valore from siscom_MI.parametri where parametro= 'LIMITE 2 PENSIONI'"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.Read Then
                        '    LimitePensioni = 10903 'par.IfNull(myReaderA("VALORE"), 0)
                        'End If
                        'myReaderA.Close()

                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Limite 2 pensioni INPS, minima + sociale:................." & Format(LimitePensioni, "##,##0.00")
                        parte3 = parte3 & vbCrLf & vbTab & "Limite 2 pensioni INPS, minima + sociale:................." & Format(LimitePensioni, "##,##0.00")


                        'End If
                        '
                        'VERIFICA SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE O NO


                        'DEFINIZIONE PARAMETRI L.R27 TENENDO CONTO ANCHE SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE E ISEE-ERP<9000

                        ISEE = Math.Truncate(ISEE)
                        ISE = Math.Truncate(ISE)

                        par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " ORDER BY ISEE_ERP ASC"
                        myReaderA = par.cmd.ExecuteReader()
                        If prev_dip = True Then
                            If ISEE <= LimiteA4 Then
                                If REDD_DIP + REDD_ALT < LimitePensioni Then
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    AREA = 1
                                    PER_VAL_LOC = 36
                                    PERC_INC_MAX_ISE_ERP = 16
                                    CANONE_MIN = 20
                                    sSOTTOAREA = "A5"
                                    ISE_MIN = ISEE
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                End If
                            Else
                                If ISEE <= LimiteA5 Then
                                    If REDD_DIP + REDD_ALT > LimitePensioni Then
                                        AREA = 1
                                        PER_VAL_LOC = 36
                                        PERC_INC_MAX_ISE_ERP = 16
                                        CANONE_MIN = 20
                                        sSOTTOAREA = "A5"
                                        ISE_MIN = ISEE
                                        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                    Else
                                        Do While myReaderA.Read
                                            If ISEE <= myReaderA("ISEE_ERP") Then
                                                AREA = myReaderA("AREE")
                                                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                                CANONE_MIN = myReaderA("CANONE_MINIMO")
                                                sSOTTOAREA = myReaderA("SOTTO_AREA")
                                                ISE_MIN = ISEE
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = IfNull(myReaderA("INC_MAX_ISEE_ERP"), 0)
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            ISE_MIN = ISEE
                                            Exit Do
                                        End If
                                    Loop
                                End If

                            End If
                        Else
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE <> 0 Then
                                Comunicazioni = "Probabile Errore...non sono stati inseriti i redditi convenzionali!"
                            End If
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 And par.IfEmpty(ANNO_SIT_ECONOMICA, Year(Now)) < 2010 Then
                                AREA = 2
                                PER_VAL_LOC = 43
                                PERC_INC_MAX_ISE_ERP = 20
                                CANONE_MIN = 70
                                ISE_MIN = InizioB1
                                sSOTTOAREA = "B1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            Else
                                If ISEE <= LimiteA5 And (REDD_DIP <> 0 Or REDD_ALT <> 0) Then
                                    AREA = 2
                                    PER_VAL_LOC = 43
                                    PERC_INC_MAX_ISE_ERP = 20
                                    CANONE_MIN = 70
                                    sSOTTOAREA = "B1"
                                    ISE_MIN = InizioB1
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                'End If
                            End If
                        End If
                    Else
                        If ISEE > LimiteDecadenza And ISEE <> InizioUltimaArea And Id <> -1 Then
                            If Disabilita66 = True Then
                                Decadenza = "0"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & " ma invalidi > 66% nel nucleo/"
                                sSOTTOAREA = ""
                            Else
                                par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                                Dim myReaderY As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderY.Read Then
                                    DataDecorrenzaContratto = par.IfNull(myReaderY(0), 0)
                                End If
                                myReaderY.Close()

                                If Minori65 = False And par.RicavaEtaChiusura(par.FormattaData(DataDecorrenzaContratto), par.IfNull(sANNOINIZIOVAL, Format(Now, "yyyyMMdd"))) >= 30 Then
                                    Decadenza = "0"
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & " ma data stipula>=30 e tutti i comp.>65 anni/"
                                    sSOTTOAREA = ""
                                Else


                                End If
                            End If

                            If Decadenza = "1" Then
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & "/"
                                'sSOTTOAREA = "D4"
                            End If
                        End If

                        If StatoDichiarazione = 0 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE INCOMPLETA/"
                            ISEE = InizioUltimaArea
                            sSOTTOAREA = "D5"
                        End If

                        If StatoDichiarazione = 2 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE DA CANCELLARE/"
                            ISEE = InizioUltimaArea
                            sSOTTOAREA = "D5"
                        End If

                        If Decadenza = "1" And Id <> -1 And sSOTTOAREA <> "D11" Then
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " where aree=4 ORDER BY ISEE_ERP ASC"
                            myReaderA = par.cmd.ExecuteReader()
                            Do While myReaderA.Read
                                If ISEE <= myReaderA("ISEE_ERP") Then
                                    AREA = myReaderA("AREE")
                                    PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                    PERC_INC_MAX_ISE_ERP = 0
                                    CANONE_MIN = myReaderA("CANONE_MINIMO")
                                    ISE_MIN = ISEE
                                    If sSOTTOAREA = "" Then
                                        sSOTTOAREA = myReaderA("SOTTO_AREA")
                                    End If
                                    Exit Do
                                End If
                            Loop
                        Else
                            If Id <> -1 Then
                                AREA = 3
                                PER_VAL_LOC = 120
                                PERC_INC_MAX_ISE_ERP = 24
                                CANONE_MIN = 120
                                ISE_MIN = InizioC13
                                sSOTTOAREA = "C13"

                            Else
                                AREA = 4
                                PER_VAL_LOC = 200
                                PERC_INC_MAX_ISE_ERP = 0
                                CANONE_MIN = 250
                                ISE_MIN = InizioUltimaArea
                                sSOTTOAREA = "D6"
                            End If
                        End If


                    End If

                    '**** 25/02/2015 Forzo a D11 se esiste un'altra AU con limite patrimoniale superato
                    If Id <> -1 And patrimonioSuperato = "1" Then
                        'par.cmd.CommandText = "select max(id_bando_au) from siscom_mi.canoni_Ec"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.Read Then
                        '    idBandoAU = par.IfNull(myReaderA(0), 0)
                        'End If
                        'myReaderA.Close()

                        'Dim VECCHIOBANDO As Long = 0
                        Dim CanoneMinimoD4 As Decimal = 0
                        Dim Perc_Inc_Loc_D4 As Integer = 0
                        'par.cmd.CommandText = "SELECT ID FROM UTENZA_BANDI WHERE ID<>" & idBandoAU & " ORDER BY ID DESC"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.Read Then
                        '    VECCHIOBANDO = par.IfNull(myReaderA(0), 0)
                        'End If
                        'myReaderA.Close()

                        par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " WHERE SOTTO_AREA='D4'"
                        myReader = par.cmd.ExecuteReader()
                        If myReader.Read() Then
                            CanoneMinimoD4 = par.IfNull(myReader("canone_minimo"), 0)
                            Perc_Inc_Loc_D4 = par.IfNull(myReader("PERC_VAL_LOCATIVO"), 0)
                        End If
                        myReader.Close()

                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "LIMITE SOGLIA PATRIMONIALE SUPERATA/"
                        sSOTTOAREA = "D11"
                        AREA = 4
                        PER_VAL_LOC = Perc_Inc_Loc_D4
                        PERC_INC_MAX_ISE_ERP = 0
                        CANONE_MIN = CanoneMinimoD4
                        ISE_MIN = 48001

                        'par.cmd.CommandText = "SELECT * FROM SISCOM_MI.CANONI_EC WHERE PATRIMONIO_SUP='1' AND ID_BANDO_AU=" & VECCHIOBANDO & " AND cod_contratto='" & Cod_Contratto & "'"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.HasRows = True Then
                        '    Decadenza = "1"
                        '    sMOTIVODECADENZA = sMOTIVODECADENZA & "LIMITE SOGLIA PATRIMONIALE SUPERATA/"
                        '    sSOTTOAREA = "D11"
                        '    AREA = 4
                        '    PER_VAL_LOC = Perc_Inc_Loc_D4
                        '    PERC_INC_MAX_ISE_ERP = 0
                        '    CANONE_MIN = CanoneMinimoD4
                        '    ISE_MIN = 48001
                        'End If
                        'myReaderA.Close()
                    End If
                    '**** 25/02/2015 FINE Forzo a D11 se esiste un'altra AU con limite patrimoniale superato


                    'max 12/10/2017
                    If idBandoAU <> 0 Then
                        par.cmd.CommandText = "SELECT * FROM UTENZA_BANDI_PARAMETRI WHERE ID_AU=" & idBandoAU
                        myReader = par.cmd.ExecuteReader()
                        If myReader.Read() Then
                            sISTAT_PROTEZIONE = par.IfNull(myReader("ISTAT_1_PR"), 0)
                            'ISTAT_2_PR = myReader("ISTAT_2_PR")

                            sISTAT_ACCESSO = par.IfNull(myReader("ISTAT_1_AC"), 0)
                            'ISTAT_2_AC = myReader("ISTAT_2_AC")

                            sISTAT_PERMANENZA = par.IfNull(myReader("ISTAT_1_PE"), 0)
                            'ISTAT_2_PE = myReader("ISTAT_2_PE")

                            sISTAT_DECADENZA = par.IfNull(myReader("ISTAT_1_DE"), 0)
                            'ISTAT_2_DE = myReader("ISTAT_2_DE")

                            LimitePensioni = par.IfNull(myReader("limite_pensione"), 0)
                        End If
                        myReader.Close()
                    End If
                    '----

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "DETERMINAZIONE DEL CANONE" & vbCrLf
                    parte4 = parte4 & vbCrLf & vbCrLf & "DETERMINAZIONE DEL CANONE ANNO " & annoCalcolo & vbCrLf


                    AREAMIA = AREA

                    If Decadenza = "0" Then
                        Select Case AREA
                            Case 1
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PROTEZIONE"
                                parte4 = parte4 & vbCrLf & vbTab & "Area:.....................................................PROTEZIONE"

                                'sISTAT = "1,275"
                                sISTAT = sISTAT_PROTEZIONE
                            Case 2
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................ACCESSO"
                                parte4 = parte4 & vbCrLf & vbTab & "Area:.....................................................ACCESSO"

                                'sISTAT = "1,806"
                                sISTAT = sISTAT_ACCESSO
                            Case 3
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PERMANENZA"
                                parte4 = parte4 & vbCrLf & vbTab & "Area:.....................................................PERMANENZA"

                                'sISTAT = "3,868"
                                sISTAT = sISTAT_PERMANENZA
                        End Select
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................DECADENZA"
                        parte4 = parte4 & vbCrLf & vbTab & "Area:.....................................................DECADENZA"

                        'sISTAT = "3,868"
                        sISTAT = sISTAT_DECADENZA
                    End If

                    StringaFile = StringaFile & vbCrLf & vbTab & "Fascia:..................................................." & sSOTTOAREA
                    parte4 = parte4 & vbCrLf & vbTab & "Fascia:..................................................." & sSOTTOAREA


                    'DATI FINALI PER LA STRINGA STAMPA

                    'If ISEE <> 0 Then
                    StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(ISE_MIN, "##,##0.00")
                    parte4 = parte4 & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(ISE_MIN, "##,##0.00")

                    'Else
                    'If Decadenza = "0" Then
                    'StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(0, "##,##0.00")
                    'End If
                    'End If



                    If Decadenza = "0" Then
                        'SE L 'ISE ERP E' MAGGIORE DELL'ISEE SI PRENDE QUELLO ALTRIMENTI L'ISEE PER LA LEGGE 27 DIVENTA ISE!SEMPRE IL MAGGIORE VA PRESO!

                        If ISE > (ISE_MIN * VSE) Then
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            parte4 = parte4 & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")

                            'End If

                            Ise_erp_new = ISE
                        Else
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            parte4 = parte4 & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")

                            'End If

                            Ise_erp_new = (ISE_MIN * VSE)
                        End If
                    End If

                    If Decadenza = "0" Then

                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                        parte4 = parte4 & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"

                        StringaFile = StringaFile & vbCrLf & vbTab & "INCIDENZA PERCENTUALE MASSIMA SU ISE-ERP:................." & PERC_INC_MAX_ISE_ERP & "%"
                        parte4 = parte4 & vbCrLf & vbTab & "INCIDENZA PERCENTUALE MASSIMA SU ISE-ERP:................." & PERC_INC_MAX_ISE_ERP & "%"

                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORE INCIDENZA SU ISE-ERP:.............................." & Format((PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "VALORE INCIDENZA SU ISE-ERP:.............................." & Format((PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100, "##,##0.00")
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                        parte4 = parte4 & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"

                    End If
                    'DEFINIZIONE COEFFICIENTE NUCLEI FAMILIARI CON UN SOLO COMPONENTE

                    Dim TOT_COMPONENTI As Integer = 1

                    If Decadenza = "0" Then
                        COEF_NUCLEO_FAM = 1
                        If NumComponenti = 1 Then
                            If AREA = 1 Then
                                COEF_NUCLEO_FAM = 0.7
                            ElseIf AREA = 2 Then
                                COEF_NUCLEO_FAM = 0.8
                            ElseIf AREA = 3 Then
                                COEF_NUCLEO_FAM = 0.85
                            End If
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI CON UN SOLO COMPONENTE: " & COEF_NUCLEO_FAM
                            parte4 = parte4 & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI CON UN SOLO COMPONENTE: " & COEF_NUCLEO_FAM

                        Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI:........................" & COEF_NUCLEO_FAM
                            parte4 = parte4 & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI:........................" & COEF_NUCLEO_FAM

                        End If
                    End If
                    '  CANONE MINIMO
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE MINIMO MENSILE.................................. : " & Format(CANONE_MIN, "0.00")
                    parte4 = parte4 & vbCrLf & vbTab & "CANONE MINIMO MENSILE.................................. : " & Format(CANONE_MIN, "0.00")

                    'End If



                    'CALCOLO CANONE ERP A REGIME ANNUALE
                    Dim CanoneMIN As Double = 0
                    Dim canoneA As Double = 0
                    Dim canoneB As Double = 0
                    Dim canoneB1 As Double = 0
                    Dim CanoneErpRegime As Double = 0
                    Dim CANONEERPMIO As Double = 0
                    Dim CANONEAPP As Double = 0


                    If Decadenza = "0" Then

                        CanoneMIN = CANONE_MIN * 12
                        canoneA = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100

                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = (CANONEAPP + ((CANONEAPP * CDbl(sISTAT)) / 100)) * COEF_NUCLEO_FAM
                        canoneB1 = CANONEAPP * COEF_NUCLEO_FAM

                        If canoneA < canoneB Then
                            If canoneA > CanoneMIN Then
                                CanoneErpRegime = canoneA
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                        Else
                            If canoneB > CanoneMIN Then
                                CanoneErpRegime = canoneB
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                            CANONEERPMIO = CanoneErpRegime

                        End If
                        If CanoneErpRegime > CanoneMIN Then
                            CanoneDaPagare = CanoneErpRegime
                        Else
                            CanoneDaPagare = CanoneMIN
                        End If
                    Else
                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = CANONEAPP + ((CANONEAPP * CDbl(sISTAT)) / 100)
                        canoneB1 = CANONEAPP

                        CanoneDaPagare = canoneB
                        If CanoneDaPagare < 3000 Then
                            CanoneDaPagare = 3000
                        End If
                    End If



                    '------- 03/04/2012 CANONE TRANSITORIO ------
                    'Dim canoneCalcolato As Decimal = 0
                    'Dim canoneAregime As Decimal = 0
                    'Dim canoneTransit As Double = 0
                    'Dim delta As Double = 0
                    'Dim canone1anno As Double = 0
                    'Dim canone2anno As Double = 0
                    'Dim canone3anno As Double = 0
                    'Dim canone4anno As Double = 0
                    'Dim canone5anno As Double = 0
                    'Dim transitorio As Boolean = False
                    'Dim aRegime As Boolean = False

                    'If ANNO_RIFERIMENTO >= 2008 And ANNO_RIFERIMENTO < 2010 Then
                    '    par.cmd.CommandText = "SELECT * from SISCOM_MI.RAPPORTI_UTENZA_EXTRA where NVL(IMP_ANN_CANONE_TRANSITORIO,0) <> 0 AND ID_CONTRATTO IN (SELECT ID from SISCOM_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "')"
                    '    Dim myReaderRX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    '    If myReaderRX.Read Then
                    '        transitorio = True
                    '        canoneTransit = par.IfNull(myReaderRX("IMP_ANN_CANONE_TRANSITORIO"), 0)
                    '        canoneAregime = par.IfNull(myReaderRX("IMP_ANN_CANONE_A_REGIME_" & ANNO_RIFERIMENTO & ""), 0)
                    '        canone1anno = par.IfNull(myReaderRX("IMP_ANN_PRIMO_ANNO"), 0)
                    '        canone2anno = par.IfNull(myReaderRX("IMP_ANN_SECONDO_ANNO"), 0)
                    '        canone3anno = par.IfNull(myReaderRX("IMP_ANN_TERZO_ANNO"), 0)
                    '        canone4anno = par.IfNull(myReaderRX("IMP_ANN_QUARTO_ANNO"), 0)
                    '        canone5anno = par.IfNull(myReaderRX("IMP_ANN_QUINTO_ANNO"), 0)

                    '        'RICAVO DELTA
                    '        canoneCalcolato = CanoneDaPagare
                    '        canoneCalcolato = Math.Round(canoneCalcolato, 2)
                    '        canoneAregime = Math.Round(canoneAregime, 2)
                    '        delta = canoneAregime - canoneCalcolato
                    '        canone1anno = canone1anno - (delta)
                    '        canone2anno = canone2anno - (delta)

                    '        If ANNO_RIFERIMENTO = 2008 Then
                    '            newTransitorio = Format(canone1anno, "0.00")
                    '        End If
                    '        If ANNO_RIFERIMENTO = 2009 Then
                    '            newTransitorio = Format(canone2anno, "0.00")
                    '        End If
                    '    End If
                    '    myReaderRX.Close()
                    '    transitorio = False
                    'End If

                    'If ANNO_RIFERIMENTO >= 2010 Then
                    '    par.cmd.CommandText = "SELECT * from SISCOM_MI.CANONI_EC where ID_CONTRATTO IN (SELECT ID from SISCOM_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "') and ID_BANDO_AU = 2 ORDER BY DATA_CALCOLO DESC"
                    '    Dim myReaderRX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    '    If myReaderRX.Read Then
                    '        canoneAregime = par.IfNull(myReaderRX("CANONE"), 0)
                    '        'aRegime = True
                    '    End If
                    '    myReaderRX.Close()

                    '    par.cmd.CommandText = "SELECT * from SISCOM_MI.RAPPORTI_UTENZA_EXTRA where NVL(IMP_ANN_CANONE_TRANSITORIO,0) <> 0 AND ID_CONTRATTO IN (SELECT ID from SISCOM_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "')"
                    '    myReaderRX = par.cmd.ExecuteReader()
                    '    If myReaderRX.Read Then
                    '        transitorio = True
                    '        canoneTransit = par.IfNull(myReaderRX("IMP_ANN_CANONE_TRANSITORIO"), 0)
                    '        canone1anno = par.IfNull(myReaderRX("IMP_ANN_PRIMO_ANNO"), 0)
                    '        canone2anno = par.IfNull(myReaderRX("IMP_ANN_SECONDO_ANNO"), 0)
                    '        canone3anno = par.IfNull(myReaderRX("IMP_ANN_TERZO_ANNO"), 0)
                    '        canone4anno = 0 'par.IfNull(myReaderRX("IMP_ANN_QUARTO_ANNO"), 0)
                    '        canone5anno = 0 'par.IfNull(myReaderRX("IMP_ANN_QUINTO_ANNO"), 0)

                    '        'RICAVO DELTA
                    '        canoneCalcolato = CanoneDaPagare
                    '        canoneCalcolato = Math.Round(canoneCalcolato, 2)
                    '        canoneAregime = Math.Round(canoneAregime, 2)
                    '        delta = canoneAregime - canoneCalcolato
                    '        canone3anno = canone3anno - (delta)

                    '        If canone4anno <> 0 Then
                    '            canone4anno = canone4anno - (delta)
                    '        End If
                    '        If canone5anno <> 0 Then
                    '            canone5anno = canone5anno - (delta)
                    '        End If

                    '        If ANNO_RIFERIMENTO = 2010 Then
                    '            newTransitorio = Format(canone3anno, "0.00")
                    '        End If
                    '        If ANNO_RIFERIMENTO = 2011 Then
                    '            newTransitorio = Format(canone4anno, "0.00")
                    '            transitorio = False
                    '        End If
                    '        If ANNO_RIFERIMENTO = 2012 Then
                    '            newTransitorio = Format(canone5anno, "0.00")
                    '            transitorio = False
                    '        End If
                    '    End If
                    '    myReaderRX.Close()
                    '    transitorio = False
                    'End If
                    '------- 03/04/2012 FINE CANONE TRANSITORIO ------

                    If UnitaVenduta = True Then
                        'CalcolaCanone27 = "Unità VENDUTA, Canone impostato a 0!"
                        'sMOTIVODECADENZA = sMOTIVODECADENZA & "Unità VENDUTA, Canone impostato a 0!"

                        sCANONECLASSE = "0"
                        sCANONECLASSEISTAT = "0"

                        sCANONESOPP = "0"

                        IMPORTO = Format("0", "0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(0, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(0, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & "0"
                        parte4 = parte4 & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & "0"

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(0, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(0, "##,##0.00")

                        'StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(0, "##,##0.00")
                        'parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(0, "##,##0.00")

                        'StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(0 / 12, "##,##0.00")
                        'parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(0 / 12, "##,##0.00")


                        parte4 = parte4 & vbCrLf & vbTab & "IMPORTO ANN.CANONE A REGIME:.............................." & Format(0, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "IMPORTO ANN.CANONE TRANSITORIO:..........................." & Format(0, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(0, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(0 / 12, "##,##0.00")

                        If Prov = 0 Then
                            If annoCalcolo <= 2012 Then
                                par.cmd.CommandText = "SELECT CANONE_COMPETENZA_" & annoCalcolo & " FROM SISCOM_MI.ELABORAZIONE_CONGUAGLI WHERE COD_CONTRATTO='" & Cod_Contratto & "'"
                                Dim myReaderCanone As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderCanone.Read Then
                                    If par.IfNull(myReaderCanone("CANONE_COMPETENZA_" & annoCalcolo & ""), 0) <> 0 Then
                                        parte4 = parte4 & vbCrLf & vbTab & "CANONE COMPETENZA " & annoCalcolo & ":..................................." & Format(CDec(par.IfNull(myReaderCanone("CANONE_COMPETENZA_" & annoCalcolo & ""), 0)), "##,##0.00")
                                    End If
                                End If
                                myReaderCanone.Close()
                            End If
                        End If

                        CanoneDaPagare = 0
                        CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace("Unità VENDUTA, Canone impostato a 0!", "/", vbCrLf)
                        parte4 = parte4 & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace("Unità VENDUTA, Canone impostato a 0!", "/", vbCrLf)


                        CalcolaCanone27RECA = StringaFile
                        CalcolaCanone27RECA = parte4
                    Else
                        sCANONECLASSE = Format(canoneB1, "0.00")
                        sCANONECLASSEISTAT = Format(canoneB, "0.00")

                        sCANONESOPP = Format(canoneA, "0.00")

                        'If transitorio = False Then
                        IMPORTO = Format(CanoneDaPagare, "0.00")
                        'End If

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(canoneB1, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(canoneB1, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & sISTAT
                        parte4 = parte4 & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & sISTAT

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(canoneB, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(canoneB, "##,##0.00")

                        'StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(CanoneDaPagare, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(CanoneDaPagare, "##,##0.00")

                        'StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(CanoneDaPagare / 12, "##,##0.00")
                        parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(CanoneDaPagare / 12, "##,##0.00")


                        'parte4 = parte4 & vbCrLf & vbTab & "IMPORTO ANN.CANONE A REGIME:.............................." & Format(canoneAregime, "##,##0.00")
                        'If transitorio = True Then
                        '    parte4 = parte4 & vbCrLf & vbTab & "IMPORTO ANN.CANONE TRANSITORIO:..........................." & Format(newTransitorio, "##,##0.00")
                        'End If

                        'parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(IMPORTO, "##,##0.00")
                        'parte4 = parte4 & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(IMPORTO / 12, "##,##0.00")

                        If Prov = 0 Then
                            If annoCalcolo <= 2012 Then
                                par.cmd.CommandText = "SELECT CANONE_COMPETENZA_" & annoCalcolo & " FROM SISCOM_MI.ELABORAZIONE_CONGUAGLI WHERE COD_CONTRATTO='" & Cod_Contratto & "'"
                                Dim myReaderCanone As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderCanone.Read Then
                                    If par.IfNull(myReaderCanone("CANONE_COMPETENZA_" & annoCalcolo & ""), 0) <> 0 Then
                                        parte4 = parte4 & vbCrLf & vbTab & "CANONE COMPETENZA " & annoCalcolo & ":..................................." & Format(CDec(par.IfNull(myReaderCanone("CANONE_COMPETENZA_" & annoCalcolo & ""), 0)), "##,##0.00")
                                    End If
                                End If
                                myReaderCanone.Close()
                            End If
                        End If

                        CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace(sMOTIVODECADENZA, "/", vbCrLf)
                        parte4 = parte4 & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace(sMOTIVODECADENZA, "/", vbCrLf)

                        CalcolaCanone27RECA = StringaFile
                        CalcolaCanone27RECA = parte4
                    End If
                Else
                    CalcolaCanone27RECA = "Canone non calcolabile per mancanza di dati!"
                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Canone non calcolabile per mancanza di dati Unità!/"
                End If


                If sMOTIVODECADENZA <> "Canone non calcolabile per mancanza di dati Unità!/" Then
                    AreaEconomica = AREAMIA
                    sLimitePensione = LimitePensioni
                    sPER_VAL_LOC = PER_VAL_LOC
                    sPERC_INC_MAX_ISE_ERP = PERC_INC_MAX_ISE_ERP
                    sCANONE_MIN = CANONE_MIN
                    sISE_MIN = ISE_MIN
                    sCANONE = CanoneDaPagare
                    sNOTE = Note
                    sCOEFFFAM = COEF_NUCLEO_FAM
                    sINCIDENZAISE = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100
                Else
                    AreaEconomica = -1
                End If

                CalcolaCanone27RECA = parte1 & parte2 & parte3 & parte4

                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                IMPORTO = 0
                sNOTE = ex.Message
                CalcolaCanone27RECA = ex.Message
            End Try
        End Function
        Function RicavaAreaEconomica(Indice As String) As String
            Select Case Indice
                Case "1"
                    RicavaAreaEconomica = "PROTEZIONE"
                Case "2"
                    RicavaAreaEconomica = "ACCESSO"
                Case "3"
                    RicavaAreaEconomica = "PERMANENZA"
                Case "4"
                    RicavaAreaEconomica = "DECADENZA"
                Case Else
                    RicavaAreaEconomica = "---"
            End Select
        End Function

        Public Function CalcolaSaldoAlData(ByVal IdContratto As Long, ByVal dataSaldo As String) As Double
            Dim DaChiudere As Boolean = False

            Try

                Dim TotSaldo As Double = 0
                Dim idGr As Integer = 0
                Dim idGrOrd As Integer = 0

                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    DaChiudere = True
                    cmd = OracleConn.CreateCommand()

                End If

                cmd.CommandText = "SELECT " _
                    & "SUM(NVL(IMPORTO_TOTALE,0)- NVL(IMPORTO_RIC_B,0)) EMESSO_BOLLETTA," _
                    & "SUM(IMPORTO_TOTALE -  NVL(IMPORTO_RIC_B,0) - NVL(QUOTA_SIND_B,0)) AS EMESSO_CONTABILE, " _
                    & "SUM(NVL(IMPORTO_PAGATO,0) - NVL(QUOTA_SIND_PAGATA_B,0)- NVL(IMPORTO_RIC_PAGATO_B,0)) AS INCASSATO, " _
                    & "(SUM(IMPORTO_TOTALE -  NVL(IMPORTO_RIC_B,0) - NVL(QUOTA_SIND_B,0))-(SUM(NVL(IMPORTO_PAGATO,0) - NVL(QUOTA_SIND_PAGATA_B,0)- NVL(IMPORTO_RIC_PAGATO_B,0)))) AS saldo " _
                    & "FROM siscom_mi.BOL_BOLLETTE " _
                    & "WHERE (BOL_BOLLETTE.FL_ANNULLATA=0 OR (BOL_BOLLETTE.FL_ANNULLATA<>0 AND DATA_PAGAMENTO IS NOT NULL )) and nvl(importo_ruolo,0)=0 and nvl(importo_ingiunzione,0)=0 " _
                    & "AND BOL_BOLLETTE.RIFERIMENTO_DA<='" & dataSaldo & "' AND ID_CONTRATTO in (" & IdContratto & ")"

                Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader3.Read Then
                    TotSaldo = IfNull(myReader3("SALDO"), 0)
                End If
                myReader3.Close()

                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If

                CalcolaSaldoAlData = TotSaldo

            Catch ex As Exception
                CalcolaSaldoAlData = 0
                If DaChiudere = True Then
                    cmd.Dispose()
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
            End Try
        End Function

        Public Function CalcolaDovuto(ByVal Importo As Double, ByVal RiferimentoDa As String, ByVal RiferimentoA As String) As Decimal
            Try
                Dim GiorniUltimoMese As Integer = 0
                Dim giorniCanone As Integer = 0
                CalcolaDovuto = 0
                Dim MesiDiff As Integer = DateDiff("m", CDate(FormattaData(RiferimentoDa)), CDate(FormattaData(RiferimentoA)))
                If MesiDiff >= 0 Then
                    Dim affitto As Double = 0
                    Select Case Mid(FormattaData(RiferimentoDa), 4, 2)
                        Case "01", "03", "05", "07", "08", "10", "12"
                            GiorniUltimoMese = DateDiff("d", FormattaData(RiferimentoDa), "31" & Mid(FormattaData(RiferimentoDa), 3, 8))
                        Case "02"
                            GiorniUltimoMese = DateDiff("d", FormattaData(RiferimentoDa), "28" & Mid(FormattaData(RiferimentoDa), 3, 8)) + 3
                        Case Else
                            GiorniUltimoMese = DateDiff("d", FormattaData(RiferimentoDa), "30" & Mid(FormattaData(RiferimentoDa), 3, 8)) + 1
                    End Select

                    giorniCanone = GiorniUltimoMese + 30 * DateDiff("m", DateAdd(DateInterval.Month, 1, CDate(FormattaData(RiferimentoDa))), CDate(FormattaData(RiferimentoA)))
                    giorniCanone = giorniCanone + 30 'DateDiff("d", CDate("01/" & Mid(RiferimentoA, 5, 2) & "/" & Mid(RiferimentoA, 1, 4)), CDate(FormattaData(RiferimentoA)))

                    CalcolaDovuto = (Importo / 360) * giorniCanone
                End If
            Catch ex As Exception
                CalcolaDovuto = 0
            End Try

        End Function

        Public Function CalcolaEmesso(ByVal IndiceRU As String, ByVal RiferimentoDa As String, ByVal RiferimentoA As String, Optional ByVal tipoGruppo As Integer = 0, Optional ByVal idVoce As Integer = 0) As Decimal
            Dim DaChiudere As Boolean = False
            CalcolaEmesso = 0
            Try
                If OracleConn.State = Data.ConnectionState.Closed Then
                    OracleConn.Open()
                    DaChiudere = True
                    cmd = OracleConn.CreateCommand()
                End If

                Dim condizioneGruppo As String = ""

                If tipoGruppo <> 0 Then
                    condizioneGruppo = "BOL_BOLLETTE_VOCI.id_voce in (select id from siscom_mi.t_voci_bolletta where gruppo=" & tipoGruppo & ") and "
                End If

                If idVoce <> 0 Then
                    condizioneGruppo = "BOL_BOLLETTE_VOCI.id_voce=" & idVoce & " and "
                End If

                cmd.CommandText = "select SUM(BOL_BOLLETTE_VOCI.IMPORTO) AS EMESSO From siscom_mi.bol_bollette_voci,siscom_mi.BOL_BOLLETTE where " & condizioneGruppo & "bol_bollette.id_tipo<>5 and bol_bollette.id_tipo<>4 and bol_bollette.id_tipo<>22 and bol_bollette.id_bolletta_storno is null and BOL_BOLLETTE_VOCI.id_bolletta = BOL_BOLLETTE.ID And BOL_BOLLETTE.ID_CONTRATTO = " & IndiceRU & " and SUBSTR(BOL_BOLLETTE.RIFERIMENTO_DA,1,6)>='" & Mid(RiferimentoDa, 1, 6) & "' AND SUBSTR(BOL_BOLLETTE.RIFERIMENTO_A,1,6)<='" & Mid(RiferimentoA, 1, 6) & "'"
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReader.Read Then
                    CalcolaEmesso = IfNull(myReader("EMESSO"), 0)
                End If
                myReader.Close()

                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If

            Catch ex As Exception
                If DaChiudere = True Then
                    OracleConn.Close()
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                    CalcolaEmesso = 0
                End If
            End Try

            Return CalcolaEmesso

        End Function


        Function CalcolaCanone27(ByVal Id As Long, ByVal Prov As Long, ByVal id_unita As Long, ByVal Cod_Contratto As String, ByRef IMPORTO As Double, ByRef VAL_LOCATIVO_UNITA As String, ByRef Comunicazioni As String, ByRef AreaEconomica As Integer, ByRef sISEE As String, ByRef sISE As String, ByRef sISR As String, ByRef sISP As String, ByRef sVSE As String, ByRef sREDD_DIP As String, ByRef sREDD_ALT As String, ByRef sLimitePensione As String, ByRef sPER_VAL_LOC As String, ByRef sPERC_INC_MAX_ISE_ERP As String, ByRef sCANONE_MIN As String, ByRef sISE_MIN As String, ByRef sCANONE As String, ByRef sNOTE As String, ByRef sDEM As String, ByRef sSUPCONVENZIONALE As String, ByRef sCOSTOBASE As String, ByRef sZONA As String, ByRef sPIANO As String, ByRef sCONSERVAZIONE As String, ByRef sVETUSTA As String, ByRef sPSE As String, ByRef sINCIDENZAISE As String, ByRef sCOEFFFAM As String, ByRef sSOTTOAREA As String, ByRef sMOTIVODECADENZA As String, ByRef sNUMCOMP As String, ByRef sNUMCOMP66 As String, ByRef sNUMCOMP100 As String, ByRef sNUMCOMP100C As String, ByRef sPREVDIP As String, ByRef sDETRAZIONI As String, ByRef sMOBILIARI As String, ByRef sIMMOBILIARI As String, ByRef sCOMPLESSIVO As String, ByRef sDETRAZIONIF As String, ByRef sANNOCOSTRUZIONE As String, ByRef sLOCALITA As String, ByRef sASCENSORE As String, ByRef sDESCRIZIONEPIANO As String, ByRef sSUPNETTA As String, ByRef sALTRESUP As String, ByRef sMINORI15 As String, ByRef sMAGGIORI65 As String, ByRef sSUPACCESSORI As String, ByRef sVALORELOCATIVO As String, ByRef sCANONECLASSE As String, ByRef sCANONESOPP As String, ByRef sVALOCIICI As String, ByRef sALLOGGIOIDONEO As String, ByRef sISTAT As String, ByRef sCANONECLASSEISTAT As String, ByRef sANNOINIZIOVAL As String, ByRef sANNOFINEVAL As String, Optional ByVal ANNO_RIFERIMENTO As Integer = 0) As String
            Comunicazioni = ""
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double

            Dim UnitaVenduta As Boolean = False

            Dim ISEE As Double = 0
            Dim PSE As Double = 0
            Dim VSE As Double = 0
            Dim ISE As Double = 0
            Dim ISR As Double = 0
            Dim ISP As Double = 0
            Dim REDD_DIP As Double = 0
            Dim REDD_ALT As Double = 0
            Dim totS As Double = 0

            Dim TotDetrazioni As Double = 0
            Dim TotMobiliari As Double = 0
            Dim TotImmobiliari As Double = 0
            Dim REDDITO_COMPLESSIVO As Double = 0
            Dim DETRAZIONI_F As Double = 0

            Dim NumComponenti As Integer = 0
            Dim IdDichiarazione As Long
            Dim Minori65 As Boolean = False
            Dim IdDomanda As Long = 0
            Dim Note As String = ""
            Dim BUONO As Boolean = True

            Dim AREA As Integer
            Dim PER_VAL_LOC As Integer
            Dim PERC_INC_MAX_ISE_ERP As Integer
            Dim CANONE_MIN As Double
            Dim ISE_MIN As Double
            Dim LimitePensioni As Double = 0

            Dim AREAMIA As Integer
            Dim CanoneDaPagare As Double

            Dim COEF_NUCLEO_FAM As Double = 0
            Dim Decadenza As String = "0"
            Dim Ise_erp_new As Double = 0
            Dim Disabilita66 As Boolean = False
            Dim DataDecorrenzaContratto As String = ""
            Dim StatoDichiarazione As Integer = 1

            Dim NUM66 As Integer = 0
            Dim NUM99 As Integer = 0
            Dim NUM100 As Integer = 0
            Dim NUM100C As Integer = 0

            sPREVDIP = "0"

            sDETRAZIONI = "0"
            sMOBILIARI = "0"
            sIMMOBILIARI = "0"
            sCOMPLESSIVO = "0"
            sDETRAZIONIF = "0"
            sANNOCOSTRUZIONE = ""
            sLOCALITA = ""
            sASCENSORE = "0"
            sDESCRIZIONEPIANO = ""
            sSUPNETTA = ""
            sALTRESUP = ""


            sMINORI15 = "0"
            sMAGGIORI65 = "0"
            sSUPACCESSORI = ""
            sVALORELOCATIVO = ""

            sCANONECLASSE = ""
            sCANONESOPP = ""
            sCANONECLASSEISTAT = ""
            sISTAT = ""

            sANNOFINEVAL = ""
            sANNOINIZIOVAL = ""

            Dim MINORI15 As Integer = 0
            Dim MAGGIORI65 As Integer = 0
            Dim ANNO_SIT_ECONOMICA As String = ""

            Dim DATA_EVENTO As String = ""

            Try
                CalcolaCanone27 = 0

                par.OracleConn.Open()
                par.SettaCommand(par)

                If Prov = 0 Then
                    par.cmd.CommandText = "SELECT * FROM UTENZA_DICHIARAZIONI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        'IdDomanda = par.IfNull(myReaderX("ID"), 0)
                        Cod_Contratto = par.IfNull(myReaderX("RAPPORTO"), "")
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = par.IfNull(myReaderX("DATA_INIZIO_VAL"), Format(Now, "yyyyMMdd"))

                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), ANNO_SIT_ECONOMICA + 2 & "0101")
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), ANNO_SIT_ECONOMICA + 3 & "1231")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.UTENZA_REDDITI where ID_UTENZA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.UTENZA_REDDITI where ID_UTENZA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.UTENZA_COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.utenza_comp_patr_immob where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.UTENZA_COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If


                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If

                If Prov = 1 Then
                    'prendo i dati dalla domanda erp
                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        ISEE = par.IfNull(myReaderX("REDDITO_ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = Format(Now, "yyyyMMdd")
                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = ANNO_SIT_ECONOMICA + 2 & "0101"
                        sANNOFINEVAL = ANNO_SIT_ECONOMICA + 3 & "1231"

                        If Year(Now) Mod 2 = 0 Then
                            sANNOINIZIOVAL = Year(Now) & "0101"
                            sANNOFINEVAL = Year(Now) + 1 & "1231"
                        Else
                            sANNOINIZIOVAL = Year(Now) & "0101"
                            sANNOFINEVAL = Year(Now) & "1231"
                        End If

                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)) from sepa.DOMANDE_REDDITI where ID_DOMANDA=" & Id
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI where ID_DOMANDA=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If




                If Prov = 2 Then

                    'prendo i dati dalla domanda CAMBI

                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO_CAMBI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        ISEE = par.IfNull(myReaderX("reddito_ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = Format(Now, "yyyyMMdd")

                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_CAMBI WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        'sANNOINIZIOVAL = "20100101" 'par.IfNull(myReaderX("data_inizio_val"), "2009")
                        'sANNOFINEVAL = "20111231" ' par.IfNull(myReaderX("data_fine_val"), "2009")
                        sANNOINIZIOVAL = ANNO_SIT_ECONOMICA + 2 & "0101"
                        sANNOFINEVAL = ANNO_SIT_ECONOMICA + 3 & "1231"
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)) from sepa.DOMANDE_REDDITI_CAMBI where ID_DOMANDA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_CAMBI where ID_DOMANDA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_CAMBI where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_CAMBI where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_CAMBI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_MOB_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0
                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_CAMBI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT



                End If


                If Prov = 3 Or Prov = 11 Then

                    'prendo i dati dalla domanda VSA
                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO_VSA WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        ISEE = par.IfNull(myReaderX("REDDITO_ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        If ANNO_RIFERIMENTO <> 0 Then
                            DATA_EVENTO = ANNO_RIFERIMENTO
                        Else
                            DATA_EVENTO = par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd"))
                        End If


                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_VSA WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")

                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), Format(Now, "yyyyMMdd"))
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), ANNO_SIT_ECONOMICA + 3 & "1231")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_VSA where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_VSA where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_VSA where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) AS IMPORTO FROM COMP_PATR_MOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0
                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If

                If Prov = 4 Then

                    'prendo i dati dalla DICHIARAZIONE VSA

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_VSA WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        'sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        'sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), Format(Now, "yyyyMMdd"))
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), ANNO_SIT_ECONOMICA + 3 & "1231")

                        DATA_EVENTO = Format(Now, "yyyyMMdd")
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & Id
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_VSA where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_VSA where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_VSA where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) AS IMPORTO FROM COMP_PATR_MOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0
                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If


                If Prov = 5 Then

                    'prendo i dati dalla domanda vsa
                    par.cmd.CommandText = "SELECT * FROM DOMANDE_BANDO_VSA WHERE ID_DICHIARAZIONE=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID_DICHIARAZIONE"), 0)
                        IdDomanda = par.IfNull(myReaderX("ID"), 0)
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = par.IfNull(myReaderX("DATA_EVENTO"), Format(Now, "yyyyMMdd"))

                    End If
                    myReaderX.Close()

                    par.cmd.CommandText = "SELECT * FROM DICHIARAZIONI_VSA WHERE ID=" & IdDichiarazione
                    myReaderX = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        'sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        'sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), Format(Now, "yyyyMMdd"))
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), ANNO_SIT_ECONOMICA + 3 & "1231")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDomanda
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.DOMANDE_REDDITI_VSA where ID_DOMANDA=" & IdDomanda
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.COMP_NUCLEO_VSA where id_DICHIARAZIONE=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.comp_patr_immob_VSA where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.COMP_DETRAZIONI_VSA where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) AS IMPORTO FROM COMP_PATR_MOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_REDDITO_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM COMP_ALTRI_REDDITI_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0
                        par.cmd.CommandText = "SELECT * FROM COMP_ELENCO_SPESE_VSA WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If
                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If


                sMINORI15 = MINORI15
                sMAGGIORI65 = MAGGIORI65

                sNUMCOMP = NumComponenti
                sNUMCOMP66 = NUM66
                sNUMCOMP100 = NUM100
                sNUMCOMP100C = NUM100C

                sDETRAZIONI = TotDetrazioni
                sMOBILIARI = TotMobiliari
                sIMMOBILIARI = TotImmobiliari
                sCOMPLESSIVO = REDDITO_COMPLESSIVO
                sDETRAZIONIF = DETRAZIONI_F

                sISEE = ISEE
                sISE = ISE
                sISR = ISR
                sISP = ISP
                sVSE = VSE
                sPSE = PSE

                Dim NOME_TABELLA_REDDITI As String = ""
                Dim LimiteA4 As Long = 0
                Dim InizioUltimaArea As Long = 0
                Dim LimiteDecadenza As Long = 0
                Dim LimiteA5 As Long = 0
                Dim InizioB1 As Long = 0
                Dim InizioC13 As Long = 0

                Dim sISTAT_PROTEZIONE As String = ""
                Dim sISTAT_ACCESSO As String = ""
                Dim sISTAT_PERMANENZA As String = ""
                Dim sISTAT_DECADENZA As String = ""


                Select Case Mid(DATA_EVENTO, 1, 4)
                    Case "2006"
                        LimitePensioni = 10520
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001

                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2007"
                        LimitePensioni = 10731
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2008"
                        LimitePensioni = 10903
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2009"
                        LimitePensioni = 11274
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_36"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "2,025"
                        sISTAT_DECADENZA = "2,025"
                    Case "2010"
                        LimitePensioni = 11343
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2009"
                        LimiteA4 = 8162
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9182
                        InizioB1 = 9183
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0,525"
                        sISTAT_PERMANENZA = "2,56"
                        sISTAT_DECADENZA = "2,56"
                    Case "2011"
                        LimitePensioni = 11501
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2009"
                        LimiteA4 = 8162
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9182
                        InizioB1 = 9183
                        InizioC13 = 33669
                        sISTAT_PROTEZIONE = "1,275"
                        sISTAT_ACCESSO = "1,806"
                        sISTAT_PERMANENZA = "3,868"
                        sISTAT_DECADENZA = "3,868"
                    Case "2012"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2012"
                        LimiteA4 = 8309
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9347
                        InizioB1 = 9348
                        sISTAT_PROTEZIONE = "3,781"
                        sISTAT_ACCESSO = "4,326"
                        sISTAT_PERMANENZA = "6,439"
                        sISTAT_DECADENZA = "6,439"
                    Case Else


                        LimitePensioni = 12349.48
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2020"
                        LimiteA4 = 8919
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 10035
                        InizioB1 = 10036
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "8,772"
                        sISTAT_ACCESSO = "9,343"
                        sISTAT_PERMANENZA = "11,557"
                        sISTAT_DECADENZA = "11,557"
                End Select


                StringaFile = "COMUNE DI MILANO - PROSPETTO CANONE " & vbCrLf & vbCrLf

                'max 03/11/2017
                'verifico se esiste SUP.CONV OPPURE SUP.CONV SMI
                par.cmd.CommandText = "select * from siscom_mi.dimensioni where COD_TIPOLOGIA='SUP_CONV' AND id_unita_immobiliare=" & id_unita
                Dim myReaderCONV As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderCONV.HasRows = False Then
                    par.cmd.CommandText = "select * from siscom_mi.dimensioni where COD_TIPOLOGIA='SUP_CONV_LR' AND id_unita_immobiliare=" & id_unita
                    Dim myReaderCONVLR As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderCONVLR.Read Then
                        par.cmd.CommandText = "INSERT INTO SISCOM_MI.DIMENSIONI VALUES (SISCOM_MI.SEQ_DIMENSIONI.NEXTVAL,NULL," & id_unita & ",NULL,'SUP_CONV'," & VirgoleInPunti(IfNull(myReaderCONVLR("VALORE"), "0")) & ")"
                        par.cmd.ExecuteNonQuery()
                    End If
                    myReaderCONVLR.Close()
                End If
                myReaderCONV.Close()
                '----


                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = StringaFile & "CALCOLO CANONE L.R. 27/07   - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf
                    sLOCALITA = par.IfNull(myReader("COMUNE_DI"), "")

                    'If Cod_Contratto <> "" Then
                    '    StringaFile = StringaFile & "CONTRATTO COD: " & Cod_Contratto & vbCrLf & vbCrLf
                    'End If
                    If Cod_Contratto <> "" Then
                        par.cmd.CommandText = "SELECT CASE WHEN anagrafica.ragione_sociale is not null THEN ragione_sociale  ELSE RTRIM(LTRIM(COGNOME ||' ' ||NOME)) END AS ""INTESTATARIO"" FROM SISCOM_MI.ANAGRAFICA,SISCOM_MI.SOGGETTI_CONTRATTUALI,siscom_mi.rapporti_utenza WHERE RAPPORTI_UTENZA.COD_CONTRATTO='" & Cod_Contratto & "' AND SOGGETTI_CONTRATTUALI.ID_CONTRATTO=RAPPORTI_UTENZA.ID AND (SOGGETTI_CONTRATTUALI.COD_TIPOLOGIA_OCCUPANTE='INTE') AND ANAGRAFICA.ID=SOGGETTI_CONTRATTUALI.ID_ANAGRAFICA ORDER BY SOGGETTI_CONTRATTUALI.COD_TIPOLOGIA_OCCUPANTE DESC"
                        Dim myReader345 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader345.Read Then
                            StringaFile = StringaFile & vbCrLf & "CODICE CONTRATTO: " & Cod_Contratto & " - INTESTATARIO: " & par.IfNull(myReader345("INTESTATARIO"), "") & vbCrLf & vbCrLf
                        End If
                        myReader345.Close()
                    End If

                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf
                    If SUP_CONVENZIONALE = 0 Then
                        Note = Note & "SUP.CONVENZIONALE UGUALE A 0 O ASSENTE/"
                        BUONO = False
                    End If

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111) = 1111 And par.IfNull(myReader("DATA_COSTRUZIONE"), 1111) = 1111 Then
                        Note = Note & "DATA RISTRUTTURAZIONE E COSTRUZIONE ASSENTI/"
                        BUONO = False
                    End If


                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000

                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4)
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4)
                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    StringaFile = StringaFile & vbTab & "Indice Ubicazione:..............." & ZONA & vbCrLf

                    If ZONA = 0 Then
                        Note = Note & "INDICE ZONA UGUALE A 0/"
                        BUONO = False
                    End If


                    'LIVELLO PIANO
                    'par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO,SISCOM_MI.PIANI where PIANI.COD_TIPO_LIVELLO_PIANO=" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & " AND TIPO_LIVELLO_PIANO.COD=PIANI.COD_TIPO_LIVELLO_PIANO"
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                        End If
                        sDESCRIZIONEPIANO = par.IfNull(myReaderA("DESCRIZIONE"), "")
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPNETTA = par.IfNull(myReaderA("VALORE"), 0)
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI WHERE COD_TIPOLOGIA<>'SUP_NETTA' AND COD_TIPOLOGIA<>'SUP_CONV' AND TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sALTRESUP = sALTRESUP & par.IfNull(myReaderA("DESCRIZIONE"), 0) & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI,SISCOM_MI.UNITA_IMMOBILIARI WHERE TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND DIMENSIONI.ID_UNITA_IMMOBILIARE=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPACCESSORI = sSUPACCESSORI & par.IfNull(myReaderA("DESCRIZIONE"), 0) & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    If CONSERVAZIONE = 0 Then
                        Note = Note & "INDICE CONSERVAZIONE UGUALE A 0/"
                        BUONO = False
                    End If

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    If VETUSTA = 0 Then
                        Note = Note & "INDICE VETUSTA UGUALE A 0/"
                        BUONO = False
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    VAL_LOCATIVO_UNITA = Format(VALORELOCATIVO, "##,##0.00")
                    sVALORELOCATIVO = VALORELOCATIVO

                    sDEM = DEM
                    sSUPCONVENZIONALE = SUP_CONVENZIONALE
                    sCOSTOBASE = COSTO_BASE_MC
                    sZONA = ZONA
                    sPIANO = PIANO
                    sCONSERVAZIONE = CONSERVAZIONE
                    sVETUSTA = VETUSTA

                    If myReader("cod_tipo_disponibilita") = "VEND" Then
                        UnitaVenduta = True
                    End If
                    'Decadenza = "1"

                    'If Decadenza = "0" Then
                    If Id <> -1 Then
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "DATI REDDITUALI - CALCOLO ISE-ERP ED ISEE-ERP" & vbCrLf


                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. ................................................." & sNUMCOMP
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MINORI 15 ANNI..................................." & sMINORI15
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MAGGIORI 65 ANNI................................." & sMAGGIORI65
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 66%-99%................................." & sNUMCOMP66
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100%...................................." & sNUMCOMP100
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100% CON IND. ACC......................." & sNUMCOMP100C
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI................................................" & Format(CDbl(sDETRAZIONI), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI PER FRAGILITA'................................." & Format(CDbl(sDETRAZIONIF), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI MOBILIARI.........................................." & Format(CDbl(sMOBILIARI), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI IMMOBILIARI........................................" & Format(CDbl(sIMMOBILIARI), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "REDDITO COMPLESSIVO......................................." & Format(CDbl(sCOMPLESSIVO), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISEE ERP EFF.............................................." & Format(ISEE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISE ERP EFF..............................................." & Format(ISE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISR:......................................................" & Format(ISR, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISP:......................................................" & Format(ISP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VSE:......................................................" & Format(VSE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Redditi Dipendenti o Assimilati:.........................." & Format(REDD_DIP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Altri tipi di reddito Imponibili:........................." & Format(REDD_ALT, "##,##0.00")
                    Else
                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE NON PRESENTATA/"
                    End If

                    If ISEE > LimiteDecadenza Or StatoDichiarazione = 0 Or StatoDichiarazione = 2 Then
                        Decadenza = "1"

                    End If



                    Dim CatCatastale As String = ""

                    If Id <> -1 Then
                        Select Case Prov
                            Case 0
                                par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 1
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 2
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_CAMBI WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_CAMBI WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 3, 11, 4, 5
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        End Select

                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then


                            Do While myReaderA.Read
                                If Mid(par.IfNull(myReaderA("cat_catastale"), "X"), 1, 1) = "A" Then
                                    Select Case NumComponenti
                                        Case 1, 2
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 54 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 1-2 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 3, 4
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 74 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 3-4 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 5, 6
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 90 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 5-6 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case Is > 7
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 114 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 7 O + COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                    End Select
                                End If
                            Loop
                        End If
                        myReaderA.Close()

                        Select Case Prov
                            Case 0
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM UTENZA_COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 1
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 2
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_CAMBI WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_CAMBI WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 3, 11, 4, 5
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_VSA WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        End Select


                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then
                            Do While myReaderA.Read

                                Select Case NumComponenti
                                    Case 1, 2
                                        If par.IfNull(myReaderA(0), 0) >= 49637.23 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 1-2 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 3, 4
                                        If par.IfNull(myReaderA(0), 0) >= 64528.41 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE  PER 3-4 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 5, 6
                                        If par.IfNull(myReaderA(0), 0) >= 69492.12 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 5-6 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case Is > 7
                                        If par.IfNull(myReaderA(0), 0) >= 89347.02 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 7 O + COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                End Select
                            Loop
                        End If
                        myReaderA.Close()


                        par.cmd.CommandText = "select COD_TIPOLOGIA_CONTR_LOC from siscom_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "'"
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.Read Then
                            If par.IfNull(myReaderA("COD_TIPOLOGIA_CONTR_LOC"), "") = "NONE" Then
                                Decadenza = "1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "TIPOLOGIA RAPPORTO ABUSIVO/"
                                ISEE = InizioUltimaArea
                                sSOTTOAREA = "D7"
                            End If
                        End If
                        myReaderA.Close()
                    End If

                    'StringaFile = StringaFile & vbCrLf & vbTab & "Anno situazione economica:................................" & ANNO_SIT_ECONOMICA

                    StringaFile = StringaFile & vbCrLf & vbTab & "Limite 2 pensioni INPS, minima + sociale:................." & Format(LimitePensioni, "##,##0.00")

                    '
                    'VERIFICA SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE O NO
                    Dim prev_dip As Boolean
                    prev_dip = False

                    'If ISEE = 0 Then
                    '    Beep()
                    '    'prev_dip = True
                    'End If

                    If REDD_DIP > ((REDD_ALT + REDD_DIP) * 80) / 100 Then
                        prev_dip = True
                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................SI"
                        'End If
                    Else
                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................NO"
                        'End If
                    End If

                    If prev_dip = True Then
                        sPREVDIP = "1"
                    Else
                        sPREVDIP = "0"
                    End If

                    If Decadenza = "0" Then



                        'DEFINIZIONE PARAMETRI L.R27 TENENDO CONTO ANCHE SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE E ISEE-ERP<9000

                        ISEE = Math.Truncate(ISEE)
                        ISE = Math.Truncate(ISE)

                        par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " ORDER BY ISEE_ERP ASC"
                        myReaderA = par.cmd.ExecuteReader()
                        If prev_dip = True Then
                            If ISEE <= LimiteA4 Then
                                If REDD_DIP + REDD_ALT < LimitePensioni Then
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    AREA = 1
                                    PER_VAL_LOC = 36
                                    PERC_INC_MAX_ISE_ERP = 16
                                    CANONE_MIN = 20
                                    sSOTTOAREA = "A5"
                                    ISE_MIN = ISEE
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                End If
                            Else
                                If ISEE <= LimiteA5 Then
                                    If REDD_DIP + REDD_ALT > LimitePensioni Then
                                        AREA = 1
                                        PER_VAL_LOC = 36
                                        PERC_INC_MAX_ISE_ERP = 16
                                        CANONE_MIN = 20
                                        sSOTTOAREA = "A5"
                                        ISE_MIN = ISEE
                                        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                    Else
                                        Do While myReaderA.Read
                                            If ISEE <= myReaderA("ISEE_ERP") Then
                                                AREA = myReaderA("AREE")
                                                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                                CANONE_MIN = myReaderA("CANONE_MINIMO")
                                                sSOTTOAREA = myReaderA("SOTTO_AREA")
                                                ISE_MIN = ISEE
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = IfNull(myReaderA("INC_MAX_ISEE_ERP"), 0)
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            ISE_MIN = ISEE
                                            Exit Do
                                        End If
                                    Loop
                                End If

                            End If
                        Else
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE <> 0 Then
                                Comunicazioni = "Probabile Errore...non sono stati inseriti i redditi convenzionali!"
                            End If

                            'If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 Then
                            '    AREA = 2
                            '    PER_VAL_LOC = 43
                            '    PERC_INC_MAX_ISE_ERP = 20
                            '    CANONE_MIN = 70
                            '    ISE_MIN = InizioB1
                            '    sSOTTOAREA = "B1"
                            '    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            'Else


                            '    If ISEE <= LimiteA5 Then
                            '        AREA = 2
                            '        PER_VAL_LOC = 43
                            '        PERC_INC_MAX_ISE_ERP = 20
                            '        CANONE_MIN = 70
                            '        sSOTTOAREA = "B1"
                            '        ISE_MIN = InizioB1
                            '        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            '    Else
                            '        Do While myReaderA.Read
                            '            If ISEE <= myReaderA("ISEE_ERP") Then
                            '                AREA = myReaderA("AREE")
                            '                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                            '                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                            '                CANONE_MIN = myReaderA("CANONE_MINIMO")
                            '                ISE_MIN = ISEE
                            '                sSOTTOAREA = myReaderA("SOTTO_AREA")
                            '                Exit Do
                            '            End If
                            '        Loop
                            '    End If
                            '    'End If
                            'End If
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 And par.IfEmpty(ANNO_SIT_ECONOMICA, Year(Now)) < 2010 Then
                                AREA = 2
                                PER_VAL_LOC = 43
                                PERC_INC_MAX_ISE_ERP = 20
                                CANONE_MIN = 70
                                ISE_MIN = InizioB1
                                sSOTTOAREA = "B1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            Else
                                If ISEE <= LimiteA5 And (REDD_DIP <> 0 Or REDD_ALT <> 0) Then
                                    AREA = 2
                                    PER_VAL_LOC = 43
                                    PERC_INC_MAX_ISE_ERP = 20
                                    CANONE_MIN = 70
                                    sSOTTOAREA = "B1"
                                    ISE_MIN = InizioB1
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                'End If
                            End If
                        End If




                    Else
                        If ISEE > LimiteDecadenza And ISEE <> InizioUltimaArea And Id <> -1 Then
                            If Disabilita66 = True Then
                                Decadenza = "0"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & " ma invalidi > 66% nel nucleo/"
                                sSOTTOAREA = ""
                            Else
                                par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                                Dim myReaderY As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderY.Read Then
                                    DataDecorrenzaContratto = par.IfNull(myReaderY(0), 0)
                                End If
                                myReaderY.Close()

                                If Minori65 = False And par.RicavaEtaChiusura(par.FormattaData(DataDecorrenzaContratto), Format(Now, "yyyyMMdd")) >= 30 Then
                                    Decadenza = "0"
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & " ma data stipula>=30 e tutti i comp.>65 anni/"
                                    sSOTTOAREA = ""
                                Else


                                End If
                            End If

                            If Decadenza = "1" Then
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & "/"
                                'sSOTTOAREA = "D4"
                            End If
                        End If

                        If StatoDichiarazione = 0 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE INCOMPLETA/"
                            ISEE = InizioUltimaArea
                            sSOTTOAREA = "D5"
                        End If

                        If StatoDichiarazione = 2 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE DA CANCELLARE/"
                            ISEE = InizioUltimaArea
                            sSOTTOAREA = "D5"
                        End If

                        If Decadenza = "1" And Id <> -1 Then
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " where aree=4 ORDER BY ISEE_ERP ASC"
                            myReaderA = par.cmd.ExecuteReader()
                            Do While myReaderA.Read
                                If ISEE <= myReaderA("ISEE_ERP") Then
                                    AREA = myReaderA("AREE")
                                    PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                    PERC_INC_MAX_ISE_ERP = 0
                                    CANONE_MIN = myReaderA("CANONE_MINIMO")
                                    ISE_MIN = ISEE
                                    If sSOTTOAREA = "" Then
                                        sSOTTOAREA = myReaderA("SOTTO_AREA")
                                    End If
                                    Exit Do
                                End If
                            Loop
                        Else
                            If Id <> -1 Then
                                AREA = 3
                                PER_VAL_LOC = 120
                                PERC_INC_MAX_ISE_ERP = 24
                                CANONE_MIN = 120
                                ISE_MIN = InizioC13
                                sSOTTOAREA = "C13"

                            Else
                                AREA = 4
                                PER_VAL_LOC = 200
                                PERC_INC_MAX_ISE_ERP = 0
                                CANONE_MIN = 250
                                ISE_MIN = InizioUltimaArea
                                sSOTTOAREA = "D6"
                            End If
                        End If


                    End If

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "DETERMINAZIONE DEL CANONE" & vbCrLf

                    AREAMIA = AREA

                    If Decadenza = "0" Then
                        Select Case AREA
                            Case 1
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PROTEZIONE"
                                'sISTAT = "1,275"
                                sISTAT = sISTAT_PROTEZIONE
                            Case 2
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................ACCESSO"
                                'sISTAT = "1,806"
                                sISTAT = sISTAT_ACCESSO
                            Case 3
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PERMANENZA"
                                'sISTAT = "3,868"
                                sISTAT = sISTAT_PERMANENZA
                        End Select
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................DECADENZA"
                        'sISTAT = "3,868"
                        sISTAT = sISTAT_DECADENZA
                    End If

                    StringaFile = StringaFile & vbCrLf & vbTab & "Fascia:..................................................." & sSOTTOAREA


                    'DATI FINALI PER LA STRINGA STAMPA

                    'If ISEE <> 0 Then
                    StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(ISE_MIN, "##,##0.00")
                    'Else
                    'If Decadenza = "0" Then
                    'StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(0, "##,##0.00")
                    'End If
                    'End If



                    If Decadenza = "0" Then
                        'SE L 'ISE ERP E' MAGGIORE DELL'ISEE SI PRENDE QUELLO ALTRIMENTI L'ISEE PER LA LEGGE 27 DIVENTA ISE!SEMPRE IL MAGGIORE VA PRESO!

                        If ISE > (ISE_MIN * VSE) Then
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'End If

                            Ise_erp_new = ISE
                        Else
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'End If

                            Ise_erp_new = (ISE_MIN * VSE)
                        End If
                    End If

                    If Decadenza = "0" Then

                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "INCIDENZA PERCENTUALE MASSIMA SU ISE-ERP:................." & PERC_INC_MAX_ISE_ERP & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORE INCIDENZA SU ISE-ERP:.............................." & Format((PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100, "##,##0.00")
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"

                    End If
                    'DEFINIZIONE COEFFICIENTE NUCLEI FAMILIARI CON UN SOLO COMPONENTE

                    Dim TOT_COMPONENTI As Integer = 1

                    If Decadenza = "0" Then
                        COEF_NUCLEO_FAM = 1
                        If NumComponenti = 1 Then
                            If AREA = 1 Then
                                COEF_NUCLEO_FAM = 0.7
                            ElseIf AREA = 2 Then
                                COEF_NUCLEO_FAM = 0.8
                            ElseIf AREA = 3 Then
                                COEF_NUCLEO_FAM = 0.85
                            End If
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI CON UN SOLO COMPONENTE: " & COEF_NUCLEO_FAM
                        Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI:........................" & COEF_NUCLEO_FAM

                        End If
                    End If
                    '  CANONE MINIMO
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE MINIMO MENSILE.................................. : " & Format(CANONE_MIN, "0.00")
                    'End If



                    'CALCOLO CANONE ERP A REGIME ANNUALE
                    Dim CanoneMIN As Double = 0
                    Dim canoneA As Double = 0
                    Dim canoneB As Double = 0
                    Dim canoneB1 As Double = 0
                    Dim CanoneErpRegime As Double = 0
                    Dim CANONEERPMIO As Double = 0
                    Dim CANONEAPP As Double = 0


                    If Decadenza = "0" Then

                        CanoneMIN = CANONE_MIN * 12
                        canoneA = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100

                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = (CANONEAPP + ((CANONEAPP * CDbl(sISTAT)) / 100)) * COEF_NUCLEO_FAM
                        canoneB1 = CANONEAPP * COEF_NUCLEO_FAM

                        If canoneA < canoneB Then
                            If canoneA > CanoneMIN Then
                                CanoneErpRegime = canoneA
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                        Else
                            If canoneB > CanoneMIN Then
                                CanoneErpRegime = canoneB
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                            CANONEERPMIO = CanoneErpRegime

                        End If
                        If CanoneErpRegime > CanoneMIN Then
                            CanoneDaPagare = CanoneErpRegime
                        Else
                            CanoneDaPagare = CanoneMIN
                        End If
                    Else
                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = CANONEAPP + ((CANONEAPP * CDbl(sISTAT)) / 100)
                        canoneB1 = CANONEAPP

                        CanoneDaPagare = canoneB
                        If CanoneDaPagare < 3000 Then
                            CanoneDaPagare = 3000
                        End If
                    End If

                    If UnitaVenduta = True Then
                        'CalcolaCanone27 = "Unità VENDUTA, Canone impostato a 0!"
                        'sMOTIVODECADENZA = sMOTIVODECADENZA & "Unità VENDUTA, Canone impostato a 0!"

                        sCANONECLASSE = "0"
                        sCANONECLASSEISTAT = "0"

                        sCANONESOPP = "0"

                        IMPORTO = Format("0", "0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(0, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & "0"
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(0, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(0, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(0 / 12, "##,##0.00")
                        CanoneDaPagare = 0
                        CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace("Unità VENDUTA, Canone impostato a 0!", "/", vbCrLf)


                        CalcolaCanone27 = StringaFile
                    Else
                        sCANONECLASSE = Format(canoneB1, "0.00")
                        sCANONECLASSEISTAT = Format(canoneB, "0.00")

                        sCANONESOPP = Format(canoneA, "0.00")

                        IMPORTO = Format(CanoneDaPagare, "0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(canoneB1, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & sISTAT
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(canoneB, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(CanoneDaPagare, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(Round(CanoneDaPagare, 2) / 12, "##,##0.00")

                        CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace(sMOTIVODECADENZA, "/", vbCrLf)
                        CalcolaCanone27 = StringaFile

                    End If
                Else
                    CalcolaCanone27 = "Canone non calcolabile per mancanza di dati!"
                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Canone non calcolabile per mancanza di dati Unità!/"
                End If

                If sMOTIVODECADENZA <> "Canone non calcolabile per mancanza di dati Unità!/" Then
                    AreaEconomica = AREAMIA
                    sLimitePensione = LimitePensioni
                    sPER_VAL_LOC = PER_VAL_LOC
                    sPERC_INC_MAX_ISE_ERP = PERC_INC_MAX_ISE_ERP
                    sCANONE_MIN = CANONE_MIN
                    sISE_MIN = ISE_MIN
                    sCANONE = CanoneDaPagare
                    sNOTE = Note
                    sCOEFFFAM = COEF_NUCLEO_FAM
                    sINCIDENZAISE = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100
                Else
                    AreaEconomica = -1
                End If

                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                IMPORTO = 0
                sNOTE = ex.Message
                CalcolaCanone27 = ex.Message
            End Try


        End Function

        Function CalcolaCanone27_ANAGRAFE_UTENZA(ByVal IdContratto As Long, ByVal PATRIMONIO_SUPERATO As String, ByVal SCONTO_COSTO_BASE As Double, ByVal ISTAT_1_PR As Double, ByVal ISTAT_2_PR As Double, ByVal ISTAT_1_AC As Double, ByVal ISTAT_2_AC As Double, ByVal ISTAT_1_PE As Double, ByVal ISTAT_2_PE As Double, ByVal ISTAT_1_DE As Double, ByVal ISTAT_2_DE As Double, ByVal LimiteA4 As Double, ByVal LimiteA5 As Double, ByVal InizioB1 As Double, ByVal InizioC12 As Double, ByVal CanomeMinimoA5 As Double, ByVal Perc_Inc_ISE_A5 As Double, ByVal Perc_Inc_Loc_A5 As Double, ByVal CanomeMinimoB1 As Double, ByVal Perc_Inc_ISE_B1 As Double, ByVal Perc_Inc_Loc_B1 As Double, ByVal CanomeMinimoC12 As Double, ByVal Perc_Inc_ISE_C12 As Double, ByVal Perc_Inc_Loc_C12 As Double, ByVal CanomeMinimoD4 As Double, ByVal Perc_Inc_ISE_D4 As Double, ByVal Perc_Inc_Loc_D4 As Double, ByVal limitePensioneAU As Double, ByVal ValoreICI_7 As Double, ByVal ValoreICI_5_6 As Double, ByVal ValoreICI_3_4 As Double, ByVal ValoreICI_1_2 As Double, ByVal AnnoAU As String, ByVal AnnoRedditiAU As String, ByVal Inizio_val_can As String, ByVal Fine_val_can As String, ByVal IdAU As Long, ByVal Id As Long, ByVal id_unita As Long, ByVal Cod_Contratto As String, ByRef IMPORTO As Double, ByRef VAL_LOCATIVO_UNITA As String, ByRef Comunicazioni As String, ByRef AreaEconomica As Integer, ByRef sISEE As String, ByRef sISE As String, ByRef sISR As String, ByRef sISP As String, ByRef sVSE As String, ByRef sREDD_DIP As String, ByRef sREDD_ALT As String, ByRef sLimitePensione As String, ByRef sPER_VAL_LOC As String, ByRef sPERC_INC_MAX_ISE_ERP As String, ByRef sCANONE_MIN As String, ByRef sISE_MIN As String, ByRef sCANONE As String, ByRef sNOTE As String, ByRef sDEM As String, ByRef sSUPCONVENZIONALE As String, ByRef sCOSTOBASE As String, ByRef sZONA As String, ByRef sPIANO As String, ByRef sCONSERVAZIONE As String, ByRef sVETUSTA As String, ByRef sPSE As String, ByRef sINCIDENZAISE As String, ByRef sCOEFFFAM As String, ByRef sSOTTOAREA As String, ByRef sMOTIVODECADENZA As String, ByRef sNUMCOMP As String, ByRef sNUMCOMP66 As String, ByRef sNUMCOMP100 As String, ByRef sNUMCOMP100C As String, ByRef sPREVDIP As String, ByRef sDETRAZIONI As String, ByRef sMOBILIARI As String, ByRef sIMMOBILIARI As String, ByRef sCOMPLESSIVO As String, ByRef sDETRAZIONIF As String, ByRef sANNOCOSTRUZIONE As String, ByRef sLOCALITA As String, ByRef sASCENSORE As String, ByRef sDESCRIZIONEPIANO As String, ByRef sSUPNETTA As String, ByRef sALTRESUP As String, ByRef sMINORI15 As String, ByRef sMAGGIORI65 As String, ByRef sSUPACCESSORI As String, ByRef sVALORELOCATIVO As String, ByRef sCANONECLASSE As String, ByRef sCANONESOPP As String, ByRef sVALOCIICI As String, ByRef sALLOGGIOIDONEO As String, ByRef sISTAT As String, ByRef sISTAT2ANNO As String, ByRef sCANONECLASSEISTAT As String, ByRef sANNOINIZIOVAL As String, ByRef sANNOFINEVAL As String, ByRef sTIPOCANONEAPPLICATO As String, ByRef sCOMPETENZA1ANNO As String, ByRef sCOMPETENZA2ANNO As String, ByRef sESCLUSIONE1243 As String, ByRef sDELTA12432 As String, ByRef sDELTA12431 As String, ByRef sCANONE12432 As String, ByRef sCANONE12431 As String) As String
            Comunicazioni = ""
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORECONVENZIONALE_1243 As Double = 0
            Dim VAL_LOCATIVO_UNITA_1243 As String = ""

            Dim VALORELOCATIVO As Double
            Dim VALORELOCATIVO_1243 As Double

            Dim ISEE As Double = 0
            Dim PSE As Double = 0
            Dim VSE As Double = 0
            Dim ISE As Double = 0
            Dim ISR As Double = 0
            Dim ISP As Double = 0
            Dim REDD_DIP As Double = 0
            Dim REDD_ALT As Double = 0
            Dim totS As Double = 0

            Dim TotDetrazioni As Double = 0
            Dim TotMobiliari As Double = 0
            Dim TotImmobiliari As Double = 0
            Dim REDDITO_COMPLESSIVO As Double = 0
            Dim DETRAZIONI_F As Double = 0

            Dim NumComponenti As Integer = 0
            Dim IdDichiarazione As Long
            Dim Minori65 As Boolean = False
            Dim IdDomanda As Long = 0
            Dim Note As String = ""
            Dim BUONO As Boolean = True

            Dim AREA As Integer
            Dim PER_VAL_LOC As Integer
            Dim PERC_INC_MAX_ISE_ERP As Integer
            Dim CANONE_MIN As Double
            Dim ISE_MIN As Double
            Dim LimitePensioni As Double = 0

            Dim AREAMIA As Integer
            Dim CanoneDaPagare As Double

            Dim COEF_NUCLEO_FAM As Double = 0
            Dim Decadenza As String = "0"
            Dim Ise_erp_new As Double = 0
            Dim Disabilita66 As Boolean = False
            Dim DataDecorrenzaContratto As String = ""
            Dim StatoDichiarazione As Integer = 1

            Dim NUM66 As Integer = 0
            Dim NUM99 As Integer = 0
            Dim NUM100 As Integer = 0
            Dim NUM100C As Integer = 0



            sPREVDIP = "0"

            sDETRAZIONI = "0"
            sMOBILIARI = "0"
            sIMMOBILIARI = "0"
            sCOMPLESSIVO = "0"
            sDETRAZIONIF = "0"
            sANNOCOSTRUZIONE = ""
            sLOCALITA = ""
            sASCENSORE = "0"
            sDESCRIZIONEPIANO = ""
            sSUPNETTA = ""
            sALTRESUP = ""


            sMINORI15 = "0"
            sMAGGIORI65 = "0"
            sSUPACCESSORI = ""
            sVALORELOCATIVO = ""

            sCANONECLASSE = ""
            sCANONESOPP = ""
            sCANONECLASSEISTAT = ""
            sISTAT = ""

            sANNOFINEVAL = ""
            sANNOINIZIOVAL = ""

            Dim MINORI15 As Integer = 0
            Dim MAGGIORI65 As Integer = 0
            Dim ANNO_SIT_ECONOMICA As String = ""

            Dim DataRiferimentoMinori As String = ""



            Try
                CalcolaCanone27_ANAGRAFE_UTENZA = 0
                sMOTIVODECADENZA = ""
                AreaEconomica = -1

                par.OracleConn.Open()
                par.SettaCommand(par)

                sNUMCOMP = 0
                sDETRAZIONI = "0"

                sALLOGGIOIDONEO = "0"
                sVALOCIICI = "0"
                sSOTTOAREA = ""


                'dati bando

                sANNOINIZIOVAL = Inizio_val_can
                sANNOFINEVAL = Fine_val_can


                'prendo i dati dalla dichiarazione au
                If Id <> -1 Then
                    par.cmd.CommandText = "SELECT * FROM UTENZA_DICHIARAZIONI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                        ANNO_SIT_ECONOMICA = AnnoRedditiAU 'par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")

                        par.cmd.CommandText = "SELECT * FROM UTENZA_BANDI WHERE ID=" & par.IfNull(myReaderX("id_BANDO"), 1)
                        Dim myReaderX1 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderX1.Read Then
                            DataRiferimentoMinori = par.IfNull(myReaderX1("ANNO_AU"), Year(Now)) & "1231"
                        End If
                        myReaderX1.Close()
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.UTENZA_redditi where id_utenza=" & Id
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.utenza_redditi where id_utenza=" & Id
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.utenza_COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEtaChiusura(par.IfNull(myReaderW("data_nascita"), ""), DataRiferimentoMinori) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DataRiferimentoMinori) < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), DataRiferimentoMinori) > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.utenza_comp_patr_immob where nvl(FL_VENDUTO,0)=0 and id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.UTENZA_COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT ROUND(IMPORTO/NVL(PERC_PROPRIETA,1),2) FROM UTENZA_COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ(0), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE nvl(FL_VENDUTO,0)=0 and ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        Dim Frag_Comp As Double = 0

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                Frag_Comp = Frag_Comp + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While
                            If Frag_Comp < 10000 Then
                                If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                    DETRAZIONI_F = DETRAZIONI_F + 10000
                                End If
                            Else
                                DETRAZIONI_F = DETRAZIONI_F + Frag_Comp
                            End If

                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If
                        End If
                        myReaderQ.Close()

                        ' If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                        '     DETRAZIONI_F = 10000
                        ' End If
                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT
                Else
                    IdDichiarazione = -1
                    ISEE = 0
                    ISE = 0
                    ISR = 0
                    ISP = 0
                    PSE = 0
                    VSE = 0
                    StatoDichiarazione = -1
                    sREDD_DIP = 0
                    sREDD_ALT = 0
                    NumComponenti = 0
                End If
                sMINORI15 = MINORI15
                sMAGGIORI65 = MAGGIORI65

                sNUMCOMP = NumComponenti
                sNUMCOMP66 = NUM66
                sNUMCOMP100 = NUM100
                sNUMCOMP100C = NUM100C

                sDETRAZIONI = TotDetrazioni
                sMOBILIARI = TotMobiliari
                sIMMOBILIARI = TotImmobiliari
                sCOMPLESSIVO = REDDITO_COMPLESSIVO
                sDETRAZIONIF = DETRAZIONI_F

                sISEE = ISEE
                sISE = ISE
                sISR = ISR
                sISP = ISP
                sVSE = VSE
                sPSE = PSE



                StringaFile = "COMUNE DI MILANO - PROSPETTO CANONE AU " & AnnoAU & " (redditi " & AnnoRedditiAU & ")" & vbCrLf & vbCrLf



                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=EDIFICI.ID_INDIRIZZO_PRINCIPALE AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = StringaFile & "CALCOLO CANONE L.R. 27/07   - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf
                    sLOCALITA = par.IfNull(myReader("COMUNE_DI"), "")

                    If Cod_Contratto <> "" Then
                        StringaFile = StringaFile & "CONTRATTO COD: " & Cod_Contratto & vbCrLf & vbCrLf
                    End If
                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            Note = Note & "INDICE DEMOGRAFIA UGUALE A 0 O ASSENTE/"
                            BUONO = False
                            DEM = 0
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf
                    If SUP_CONVENZIONALE = 0 Then
                        Note = Note & "SUP.CONVENZIONALE UGUALE A 0 O ASSENTE/"
                        BUONO = False
                    End If

                    'COSTO CONVENZIONALE

                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111") = "1111" And par.IfNull(myReader("DATA_COSTRUZIONE"), "1111") = "1111" Then
                        Note = Note & "DATA RISTRUTTURAZIONE E COSTRUZIONE ASSENTI/"
                        BUONO = False
                    End If


                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000

                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4)
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4)
                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)

                    StringaFile = StringaFile & vbTab & "Indice Ubicazione:..............." & ZONA & vbCrLf

                    If ZONA = 0 Then
                        Note = Note & "INDICE ZONA UGUALE A 0/"
                        BUONO = False
                    End If


                    'LIVELLO PIANO
                    ''par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO,SISCOM_MI.PIANI where PIANI.COD_TIPO_LIVELLO_PIANO=" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & " AND TIPO_LIVELLO_PIANO.COD=PIANI.COD_TIPO_LIVELLO_PIANO"
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If CInt(par.IfNull(myReaderA("COD"), "0")) >= 5 And CInt(par.IfNull(myReaderA("COD"), "0")) <= 31 Then
                                PIANO = 0.95
                            End If
                            If CInt(par.IfNull(myReaderA("COD"), "0")) >= 46 And CInt(par.IfNull(myReaderA("COD"), "0")) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                        End If
                        sDESCRIZIONEPIANO = par.IfNull(myReaderA("DESCRIZIONE"), "")
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPNETTA = par.IfNull(myReaderA("VALORE"), 0)
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI WHERE COD_TIPOLOGIA<>'SUP_NETTA' AND COD_TIPOLOGIA<>'SUP_CONV' AND TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sALTRESUP = sALTRESUP & par.IfNull(myReaderA("DESCRIZIONE"), "0") & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI,SISCOM_MI.UNITA_IMMOBILIARI WHERE TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND DIMENSIONI.ID_UNITA_IMMOBILIARE=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPACCESSORI = sSUPACCESSORI & par.IfNull(myReaderA("DESCRIZIONE"), "0") & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    If CONSERVAZIONE = 0 Then
                        Note = Note & "INDICE CONSERVAZIONE UGUALE A 0/"
                        BUONO = False
                    End If

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1234"), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1234"), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    If VETUSTA = 0 Then
                        Note = Note & "INDICE VETUSTA UGUALE A 0/"
                        BUONO = False
                    End If
                    If SCONTO_COSTO_BASE = 1000 Then
                        SCONTO_COSTO_BASE = 0
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    VALORECONVENZIONALE_1243 = (COSTO_BASE_MC + ((COSTO_BASE_MC * SCONTO_COSTO_BASE) / 100)) * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA

                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    VALORELOCATIVO_1243 = (VALORECONVENZIONALE_1243 * 5) / 100

                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    VAL_LOCATIVO_UNITA = Format(VALORELOCATIVO, "##,##0.00")
                    VAL_LOCATIVO_UNITA_1243 = Format(VALORELOCATIVO_1243, "##,##0.00")

                    sVALORELOCATIVO = VALORELOCATIVO

                    sDEM = DEM
                    sSUPCONVENZIONALE = SUP_CONVENZIONALE
                    sCOSTOBASE = COSTO_BASE_MC
                    sZONA = ZONA
                    sPIANO = PIANO
                    sCONSERVAZIONE = CONSERVAZIONE
                    sVETUSTA = VETUSTA



                    If Id <> -1 Then
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "DATI REDDITUALI - CALCOLO ISE-ERP ED ISEE-ERP" & vbCrLf


                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. ................................................." & sNUMCOMP
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MINORI 15 ANNI..................................." & sMINORI15
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MAGGIORI 65 ANNI................................." & sMAGGIORI65
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 66%-99%................................." & sNUMCOMP66
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100%...................................." & sNUMCOMP100
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100% CON IND. ACC......................." & sNUMCOMP100C
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI................................................" & Format(CDbl(par.IfEmpty(sDETRAZIONI, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI PER FRAGILITA'................................." & Format(CDbl(par.IfEmpty(sDETRAZIONIF, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI MOBILIARI.........................................." & Format(CDbl(par.IfEmpty(sMOBILIARI, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI IMMOBILIARI........................................" & Format(CDbl(par.IfEmpty(sIMMOBILIARI, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "REDDITO COMPLESSIVO......................................." & Format(CDbl(par.IfEmpty(sCOMPLESSIVO, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISEE ERP EFF.............................................." & Format(ISEE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISE ERP EFF..............................................." & Format(ISE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISR:......................................................" & Format(ISR, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISP:......................................................" & Format(ISP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VSE:......................................................" & Format(VSE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Redditi Dipendenti o Assimilati:.........................." & Format(REDD_DIP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Altri tipi di reddito Imponibili:........................." & Format(REDD_ALT, "##,##0.00")
                    Else
                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE AU " & AnnoAU & " NON PRESENTATA/"
                        sSOTTOAREA = "D6"
                    End If

                    If Id <> -1 And PATRIMONIO_SUPERATO = "1" Then
                        'Dim VECCHIOBANDO As Long = 0
                        'par.cmd.CommandText = "SELECT ID FROM UTENZA_BANDI WHERE ID<>" & IdAU & " ORDER BY ID DESC"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.Read Then
                        '    VECCHIOBANDO = par.IfNull(myReaderA(0), 0)
                        'End If
                        'myReaderA.Close()

                        'par.cmd.CommandText = "SELECT * FROM SISCOM_MI.CANONI_EC WHERE PATRIMONIO_SUP='1' AND ID_BANDO_AU=" & VECCHIOBANDO & " AND ID_CONTRATTO=" & IdContratto
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.HasRows = True Then
                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "LIMITE SOGLIA PATRIMONIALE SUPERATA/"
                        sSOTTOAREA = "D11"
                        AREA = 4
                        PER_VAL_LOC = Perc_Inc_Loc_D4
                        PERC_INC_MAX_ISE_ERP = 0
                        CANONE_MIN = CanomeMinimoD4
                        ISE_MIN = 48001
                        'End If
                        'myReaderA.Close()
                    End If


                    If ISEE > 35000 Or StatoDichiarazione = 0 Or StatoDichiarazione = 2 Then
                        Decadenza = "1"
                    End If

                    Dim CatCatastale As String = ""

                    If Id <> -1 Then
                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE nvl(FL_VENDUTO,0)=0 and (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then


                            Do While myReaderA.Read
                                If Mid(par.IfNull(myReaderA("cat_catastale"), "X"), 1, 1) = "A" Then
                                    Select Case NumComponenti
                                        Case 1, 2
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 54 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 1-2 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 3, 4
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 74 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 3-4 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 5, 6
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 90 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 5-6 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case Is > 7
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 114 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 7 O + COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = 48001
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                    End Select
                                End If
                            Loop
                        End If
                        myReaderA.Close()

                        par.cmd.CommandText = "SELECT SUM(VALORE) FROM UTENZA_COMP_PATR_IMMOB WHERE nvl(FL_VENDUTO,0)=0 and substr(cat_catastale,1,1)='A' and  (perc_patr_immobiliare=100 or NVL(ID_TIPO_PROPRIETA,0)=1) and ((SELECT distanza_km FROM COMUNI_NAZIONI WHERE UPPER (nome) = UPPER (comune)) <=70 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then
                            Do While myReaderA.Read

                                Select Case NumComponenti
                                    Case 1, 2
                                        If par.IfNull(myReaderA(0), 0) >= ValoreICI_1_2 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 1-2 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 3, 4
                                        If par.IfNull(myReaderA(0), 0) >= ValoreICI_3_4 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE  PER 3-4 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 5, 6
                                        If par.IfNull(myReaderA(0), 0) >= ValoreICI_5_6 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 5-6 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case Is > 7
                                        If par.IfNull(myReaderA(0), 0) >= ValoreICI_7 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 7 O + COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = 48001
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                End Select
                                'End If
                            Loop
                        End If
                        myReaderA.Close()

                    End If
                    par.cmd.CommandText = "select COD_TIPOLOGIA_CONTR_LOC from siscom_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        If par.IfNull(myReaderA("COD_TIPOLOGIA_CONTR_LOC"), "") = "NONE" Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "TIPOLOGIA RAPPORTO ABUSIVO/"
                            ISEE = 48001
                            sSOTTOAREA = "D7"
                        End If
                    End If
                    myReaderA.Close()


                    LimitePensioni = limitePensioneAU

                    'If ISEE <> 0 Then
                    StringaFile = StringaFile & vbCrLf & vbTab & "Limite 2 pensioni INPS, minima + sociale:................." & Format(LimitePensioni, "##,##0.00")
                    'End If
                    '
                    'VERIFICA SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE O NO
                    Dim prev_dip As Boolean
                    prev_dip = False


                    If REDD_DIP > ((REDD_ALT + REDD_DIP) * 80) / 100 Then
                        prev_dip = True
                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................SI"
                        'End If
                    Else
                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................NO"
                        'End If
                    End If

                    If prev_dip = True Then
                        sPREVDIP = "1"
                    Else
                        sPREVDIP = "0"
                    End If


                    If Decadenza = "0" Then

                        'DEFINIZIONE PARAMETRI L.R27 TENENDO CONTO ANCHE SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE E ISEE-ERP<9000

                        ISEE = Math.Truncate(ISEE)
                        ISE = Math.Truncate(ISE)

                        par.cmd.CommandText = "SELECT * FROM SISCOM_MI.CANONE_SOPPORTABILE_AU_" & AnnoAU & " ORDER BY ISEE_ERP ASC"
                        myReaderA = par.cmd.ExecuteReader()
                        If prev_dip = True Then
                            If ISEE <= LimiteA4 Then
                                If REDD_DIP + REDD_ALT < LimitePensioni Then
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    AREA = 1
                                    PER_VAL_LOC = Perc_Inc_Loc_A5
                                    PERC_INC_MAX_ISE_ERP = Perc_Inc_ISE_A5
                                    CANONE_MIN = CanomeMinimoA5
                                    sSOTTOAREA = "A5"
                                    ISE_MIN = ISEE
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                End If
                            Else
                                If ISEE <= LimiteA5 Then
                                    If REDD_DIP + REDD_ALT > LimitePensioni Then
                                        AREA = 1
                                        PER_VAL_LOC = Perc_Inc_Loc_A5
                                        PERC_INC_MAX_ISE_ERP = Perc_Inc_ISE_A5
                                        CANONE_MIN = CanomeMinimoA5

                                        sSOTTOAREA = "A5"
                                        ISE_MIN = ISEE

                                        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                    Else
                                        Do While myReaderA.Read
                                            If ISEE <= myReaderA("ISEE_ERP") Then
                                                AREA = myReaderA("AREE")
                                                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                                CANONE_MIN = myReaderA("CANONE_MINIMO")
                                                sSOTTOAREA = myReaderA("SOTTO_AREA")
                                                ISE_MIN = ISEE
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = IfNull(myReaderA("INC_MAX_ISEE_ERP"), 0)
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            ISE_MIN = ISEE
                                            Exit Do
                                        End If
                                    Loop
                                End If

                            End If
                        Else
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE <> 0 Then
                                Comunicazioni = "Probabile Errore...non sono stati inseriti i redditi convenzionali!"
                            End If
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 And par.IfEmpty(ANNO_SIT_ECONOMICA, Year(Now)) < 2010 Then
                                AREA = 2
                                PER_VAL_LOC = 43
                                PERC_INC_MAX_ISE_ERP = 20
                                CANONE_MIN = 70
                                ISE_MIN = InizioB1
                                sSOTTOAREA = "B1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            Else
                                If ISEE <= LimiteA5 And (REDD_DIP <> 0 Or REDD_ALT <> 0) Then
                                    AREA = 2
                                    PER_VAL_LOC = 43
                                    PERC_INC_MAX_ISE_ERP = 20
                                    CANONE_MIN = 70
                                    sSOTTOAREA = "B1"
                                    ISE_MIN = InizioB1
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                    If ISEE = 0 Then
                                        sPREVDIP = "1"
                                    End If
                                End If
                                'End If
                            End If

                            'If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 Then
                            '    AREA = 2
                            '    PER_VAL_LOC = Perc_Inc_Loc_B1
                            '    PERC_INC_MAX_ISE_ERP = Perc_Inc_ISE_A5
                            '    CANONE_MIN = CanomeMinimoB1
                            '    ISE_MIN = InizioB1
                            '    sSOTTOAREA = "B1"
                            '    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalento=NO/"
                            'Else

                            '    'If ISEE = 0 Then
                            '    '    Do While myReaderA.Read
                            '    '        If ISEE <= myReaderA("ISEE_ERP") Then
                            '    '            AREA = myReaderA("AREE")
                            '    '            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                            '    '            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                            '    '            CANONE_MIN = myReaderA("CANONE_MINIMO")
                            '    '            ISE_MIN = ISEE
                            '    '            sSOTTOAREA = myReaderA("SOTTO_AREA")
                            '    '            Exit Do
                            '    '        End If
                            '    '    Loop
                            '    'Else
                            '    If ISEE <= LimiteA5 Then
                            '        AREA = 2
                            '        PER_VAL_LOC = Perc_Inc_Loc_B1
                            '        PERC_INC_MAX_ISE_ERP = Perc_Inc_ISE_B1
                            '        CANONE_MIN = CanomeMinimoB1
                            '        sSOTTOAREA = "B1"
                            '        ISE_MIN = InizioB1
                            '        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalento=NO/"
                            '    Else
                            '        Do While myReaderA.Read
                            '            If ISEE <= myReaderA("ISEE_ERP") Then
                            '                AREA = myReaderA("AREE")
                            '                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                            '                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                            '                CANONE_MIN = myReaderA("CANONE_MINIMO")
                            '                ISE_MIN = ISEE
                            '                sSOTTOAREA = myReaderA("SOTTO_AREA")
                            '                Exit Do
                            '            End If
                            '        Loop
                            '    End If
                            '    'End If
                            'End If
                        End If



                        'If ISEE > 35000 Then
                        '    If Minori65 = True Then Decadenza = "1"
                        '    If Disabilita66 = False Then Decadenza = "1"

                        '    If Decadenza = "1" Then
                        '        par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                        '        Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        '        If myReaderW.Read Then
                        '            DataDecorrenzaContratto = par.IfNull(myReaderW(0), 0)
                        '        End If
                        '        myReaderW.Close()
                        '    End If

                        '    If Decadenza = "0" Then
                        '        AREA = 3
                        '        PER_VAL_LOC = 120
                        '        PERC_INC_MAX_ISE_ERP = 24
                        '        CANONE_MIN = 120
                        '        ISE_MIN = 33669
                        '        sSOTTOAREA = "C13"
                        '    End If

                        'End If
                    Else
                        If ISEE > 35000 And ISEE <> 48001 And Id <> -1 And sSOTTOAREA <> "D11" Then

                            If Disabilita66 = True Then
                                Decadenza = "0"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma invalidi > 66% nel nucleo/"

                                sSOTTOAREA = ""
                            Else
                                par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                                Dim myReaderY As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderY.Read Then
                                    DataDecorrenzaContratto = par.IfNull(myReaderY(0), 0)
                                End If
                                myReaderY.Close()

                                If Minori65 = False And par.RicavaEtaChiusura(par.FormattaData(DataDecorrenzaContratto), Format(Now, "yyyyMMdd")) >= 30 Then
                                    Decadenza = "0"
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000 ma data stipula>=30 e tutti i comp.>65 anni/"
                                    sSOTTOAREA = ""
                                Else


                                End If
                            End If

                            If Decadenza = "1" Then
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>35.000/"
                            End If
                        End If

                        If StatoDichiarazione = 0 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE INCOMPLETA/"
                            ISEE = 48001
                            sSOTTOAREA = "D5"
                        End If

                        If StatoDichiarazione = 2 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE DA CANCELLARE/"
                            ISEE = 48001
                            sSOTTOAREA = "D5"
                        End If

                        If Decadenza = "1" And Id <> -1 And sSOTTOAREA <> "D11" Then
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI.CANONE_SOPPORTABILE_AU_" & AnnoAU & " where aree=4 ORDER BY ISEE_ERP ASC"
                            myReaderA = par.cmd.ExecuteReader()
                            Do While myReaderA.Read
                                If ISEE <= myReaderA("ISEE_ERP") Then
                                    AREA = myReaderA("AREE")
                                    PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                    PERC_INC_MAX_ISE_ERP = 0
                                    CANONE_MIN = myReaderA("CANONE_MINIMO")
                                    ISE_MIN = ISEE
                                    If sSOTTOAREA = "" Then
                                        sSOTTOAREA = myReaderA("SOTTO_AREA")
                                    End If
                                    Exit Do
                                End If
                            Loop
                        Else
                            If Id <> -1 And sSOTTOAREA <> "D11" Then
                                AREA = 3
                                PER_VAL_LOC = Perc_Inc_Loc_C12
                                PERC_INC_MAX_ISE_ERP = Perc_Inc_ISE_C12
                                CANONE_MIN = CanomeMinimoC12
                                ISE_MIN = InizioC12
                                sSOTTOAREA = "C12"

                            Else
                                AREA = 4
                                PER_VAL_LOC = Perc_Inc_Loc_D4
                                PERC_INC_MAX_ISE_ERP = 0
                                CANONE_MIN = CanomeMinimoD4
                                ISE_MIN = 48001
                                If sSOTTOAREA = "" Then
                                    sSOTTOAREA = "D11"
                                End If
                            End If
                        End If


                    End If

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "DETERMINAZIONE DEL CANONE" & vbCrLf

                    AREAMIA = AREA

                    If Decadenza = "0" Then
                        Select Case AREA
                            Case 1
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PROTEZIONE"
                                sISTAT = ISTAT_1_PR
                                'sISTAT = ISTAT_2_PR
                            Case 2
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................ACCESSO"
                                sISTAT = ISTAT_1_AC
                                'sISTAT = ISTAT_2_AC
                            Case 3
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PERMANENZA"
                                sISTAT = ISTAT_1_PE
                                'sISTAT = ISTAT_2_PE
                        End Select
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................DECADENZA"
                        sISTAT = ISTAT_1_DE
                        'sISTAT = ISTAT_2_DE
                    End If

                    StringaFile = StringaFile & vbCrLf & vbTab & "Fascia:..................................................." & sSOTTOAREA


                    'DATI FINALI PER LA STRINGA STAMPA

                    'If ISEE <> 0 Then
                    StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(ISE_MIN, "##,##0.00")
                    'Else
                    'If Decadenza = "0" Then
                    'StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(0, "##,##0.00")
                    'End If
                    'End If



                    If Decadenza = "0" Then
                        'SE L 'ISE ERP E' MAGGIORE DELL'ISEE SI PRENDE QUELLO ALTRIMENTI L'ISEE PER LA LEGGE 27 DIVENTA ISE!SEMPRE IL MAGGIORE VA PRESO!

                        If ISE > (ISE_MIN * VSE) Then
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'End If

                            Ise_erp_new = ISE
                        Else
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'End If

                            Ise_erp_new = (ISE_MIN * VSE)
                        End If
                    End If

                    If Decadenza = "0" Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "INCIDENZA PERCENTUALE MASSIMA SU ISE-ERP:................." & PERC_INC_MAX_ISE_ERP & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORE INCIDENZA SU ISE-ERP:.............................." & Format((PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100, "##,##0.00")
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                    End If
                    'DEFINIZIONE COEFFICIENTE NUCLEI FAMILIARI CON UN SOLO COMPONENTE

                    Dim TOT_COMPONENTI As Integer = 1

                    If Decadenza = "0" Then
                        COEF_NUCLEO_FAM = 1
                        If NumComponenti = 1 Then
                            If AREA = 1 Then
                                COEF_NUCLEO_FAM = 0.7
                            ElseIf AREA = 2 Then
                                COEF_NUCLEO_FAM = 0.8
                            ElseIf AREA = 3 Then
                                COEF_NUCLEO_FAM = 0.85
                            End If
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI CON UN SOLO COMPONENTE: " & COEF_NUCLEO_FAM
                        Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI:........................" & COEF_NUCLEO_FAM

                        End If
                    End If
                    '  CANONE MINIMO
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE MINIMO MENSILE.................................. : " & Format(CANONE_MIN, "0.00")
                    'End If



                    'CALCOLO CANONE ERP A REGIME ANNUALE
                    Dim CanoneMIN As Double = 0
                    Dim canoneA As Double = 0
                    Dim canoneB As Double = 0
                    Dim canoneB_1243 As Double = 0
                    Dim canoneB1 As Double = 0
                    Dim canoneB1_1243 As Double = 0
                    Dim CanoneErpRegime As Double = 0
                    Dim CANONEERPMIO As Double = 0
                    Dim CANONEAPP As Double = 0
                    Dim CANONEAPP_1243 As Double = 0


                    sCANONE12431 = ""
                    sCANONE12432 = ""
                    sDELTA12431 = ""
                    sDELTA12432 = ""
                    sESCLUSIONE1243 = ""

                    If Decadenza = "0" Then

                        CanoneMIN = CANONE_MIN * 12
                        canoneA = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100

                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        CANONEAPP_1243 = (PER_VAL_LOC * VALORELOCATIVO_1243) / 100

                        canoneB = (CANONEAPP + ((CANONEAPP * CDbl(par.IfEmpty(sISTAT, 0))) / 100)) * COEF_NUCLEO_FAM
                        canoneB_1243 = (CANONEAPP_1243 + ((CANONEAPP_1243 * CDbl(par.IfEmpty(sISTAT, 0))) / 100)) * COEF_NUCLEO_FAM

                        canoneB1 = CANONEAPP * COEF_NUCLEO_FAM
                        canoneB1_1243 = CANONEAPP_1243 * COEF_NUCLEO_FAM

                        If canoneA < canoneB Then
                            If canoneA > CanoneMIN Then
                                CanoneErpRegime = canoneA
                                sTIPOCANONEAPPLICATO = "SOPPORTABILE"
                            Else
                                CanoneErpRegime = CanoneMIN
                                sTIPOCANONEAPPLICATO = "MINIMO AREA"
                                sESCLUSIONE1243 = "b)"
                            End If
                        Else
                            If canoneB > CanoneMIN Then
                                CanoneErpRegime = canoneB
                                sTIPOCANONEAPPLICATO = "CLASSE"
                            Else
                                CanoneErpRegime = CanoneMIN
                                sTIPOCANONEAPPLICATO = "MINIMO AREA"
                                sESCLUSIONE1243 = "b)"
                            End If
                            CANONEERPMIO = CanoneErpRegime
                        End If

                        If canoneA < canoneB_1243 Then
                            If canoneA > CanoneMIN Then
                                sCANONE12431 = canoneA
                            Else
                                sCANONE12431 = CanoneMIN
                            End If
                        Else
                            If canoneB_1243 > CanoneMIN Then
                                sCANONE12431 = canoneB_1243
                            Else
                                sCANONE12431 = CanoneMIN
                            End If
                        End If


                        If CanoneErpRegime > CanoneMIN Then
                            CanoneDaPagare = CanoneErpRegime
                        Else
                            CanoneDaPagare = CanoneMIN
                            sTIPOCANONEAPPLICATO = "MINIMO AREA"
                            sESCLUSIONE1243 = "b)"
                        End If
                    Else
                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = CANONEAPP + ((CANONEAPP * CDbl(par.IfEmpty(sISTAT, 0))) / 100)
                        canoneB1 = CANONEAPP
                        sTIPOCANONEAPPLICATO = "CLASSE"
                        CanoneDaPagare = canoneB
                        If CanoneDaPagare < CanomeMinimoD4 * 12 Then
                            CanoneDaPagare = CanomeMinimoD4 * 12
                            sTIPOCANONEAPPLICATO = "MINIMO AREA"
                        End If
                        sCANONE12431 = ""
                        sCANONE12432 = ""
                        sDELTA12431 = ""
                        sDELTA12432 = ""
                        sESCLUSIONE1243 = "a)"
                    End If

                    sCANONECLASSE = Format(canoneB1, "0.00")
                    sCANONECLASSEISTAT = Format(canoneB, "0.00")

                    sCANONESOPP = Format(canoneA, "0.00")

                    IMPORTO = Format(CanoneDaPagare, "0.00")

                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(canoneB1, "##,##0.00")
                    StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & sISTAT
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(canoneB, "##,##0.00")
                    StringaFile = StringaFile & vbCrLf & vbTab & "TIPOLOGIA CANONE APPLICATO:..............................." & sTIPOCANONEAPPLICATO

                    If sTIPOCANONEAPPLICATO <> "CLASSE" Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO 1 e 2 ANNO:..........." & Format(CanoneDaPagare, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO 1 e 2 ANNO:..........." & Format(CanoneDaPagare / 12, "##,##0.00")
                        sCOMPETENZA1ANNO = Format(CanoneDaPagare, "##,##0.00")
                        sCOMPETENZA2ANNO = Format(CanoneDaPagare, "##,##0.00")

                        sCANONE12432 = sCANONE12431
                    Else

                        If ISTAT_2_PR = 0 And ISTAT_2_AC = 0 And ISTAT_2_PE = 0 And ISTAT_2_DE = 0 Then
                            StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO 1 e 2 ANNO:..........." & Format(CanoneDaPagare, "##,##0.00")
                            StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO 1 e 2 ANNO:..........." & Format(CanoneDaPagare / 12, "##,##0.00")
                            sCOMPETENZA1ANNO = Format(CanoneDaPagare, "##,##0.00")
                            sCOMPETENZA2ANNO = Format(CanoneDaPagare, "##,##0.00")
                            sCANONE12432 = sCANONE12431
                        Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO 1 ANNO:..........." & Format(CanoneDaPagare, "##,##0.00")
                            StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO 1 ANNO:..........." & Format(CanoneDaPagare / 12, "##,##0.00")
                            sCOMPETENZA1ANNO = Format(CanoneDaPagare, "##,##0.00")

                            Select Case AREA
                                Case 1
                                    sISTAT2ANNO = ISTAT_2_PR
                                Case 2
                                    sISTAT2ANNO = ISTAT_2_AC
                                Case 3
                                    sISTAT2ANNO = ISTAT_2_PE
                                Case 4
                                    sISTAT2ANNO = ISTAT_2_DE
                                    CanoneMIN = CanomeMinimoD4 * 12
                            End Select
                            If Decadenza = "0" Then
                                CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                                CANONEAPP_1243 = (PER_VAL_LOC * VALORELOCATIVO_1243) / 100

                                canoneB = CANONEAPP + ((CANONEAPP * CDbl(par.IfEmpty(sISTAT2ANNO, 0))) / 100) * COEF_NUCLEO_FAM
                                canoneB_1243 = CANONEAPP_1243 + ((CANONEAPP_1243 * CDbl(par.IfEmpty(sISTAT2ANNO, 0))) / 100) * COEF_NUCLEO_FAM

                                If canoneB < CanoneMIN Then
                                    canoneB = CanoneMIN
                                End If

                                If canoneB_1243 < CanoneMIN Then
                                    canoneB_1243 = CanoneMIN
                                End If
                                StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE 2 ANNO: .................." & sISTAT2ANNO
                                StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO 2 ANNO:..............." & Format(canoneB, "##,##0.00")
                                StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO 2 ANNO:..............." & Format(canoneB / 12, "##,##0.00")

                                sCOMPETENZA2ANNO = Format(canoneB, "##,##0.00")
                                sCANONE12432 = canoneB_1243
                            Else
                                Dim canoneB2 As Double = 0
                                Dim CanoneDaPagare1 As Double = 0
                                canoneB2 = ((PER_VAL_LOC * VALORELOCATIVO) / 100) + ((((PER_VAL_LOC * VALORELOCATIVO) / 100) * CDbl(par.IfEmpty(sISTAT2ANNO, 0))) / 100)
                                sTIPOCANONEAPPLICATO = "CLASSE"
                                CanoneDaPagare1 = canoneB2
                                If CanoneDaPagare1 < CanomeMinimoD4 * 12 Then
                                    CanoneDaPagare1 = CanomeMinimoD4 * 12
                                    sTIPOCANONEAPPLICATO = "MINIMO AREA"
                                End If
                                sCANONE12431 = ""
                                sCANONE12432 = ""
                                sDELTA12431 = ""
                                sDELTA12432 = ""
                                sESCLUSIONE1243 = "a)"

                                StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE 2 ANNO: .................." & sISTAT2ANNO
                                StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO 2 ANNO:..............." & Format(canoneB2, "##,##0.00")
                                StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO 2 ANNO:..............." & Format(canoneB2 / 12, "##,##0.00")

                                sCOMPETENZA2ANNO = Format(canoneB2, "##,##0.00")

                            End If

                        End If

                    End If

                    StringaFile = StringaFile & vbCrLf
                    StringaFile = StringaFile & vbCrLf & "ACCORDO SINDACALE"
                    If sESCLUSIONE1243 <> "" Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "MOTIVO ESCLUSIONE:........................................" & sESCLUSIONE1243
                        sCANONE12431 = ""
                        sCANONE12432 = ""
                        sDELTA12431 = ""
                        sDELTA12432 = ""
                    Else
                        If SCONTO_COSTO_BASE = "-1000" Or sTIPOCANONEAPPLICATO = "SOPPORTABILE" Or sTIPOCANONEAPPLICATO = "MINIMO AREA" Then
                            sCANONE12431 = ""
                            sCANONE12432 = ""
                            sDELTA12431 = ""
                            sDELTA12432 = ""
                        Else
                            sDELTA12431 = CanoneDaPagare - sCANONE12431
                            sDELTA12432 = canoneB - sCANONE12432

                            StringaFile = StringaFile & vbCrLf & vbTab & "CANONE 1243 1 ANNO:......................................." & Format(CDbl(par.IfEmpty(sCANONE12431, 0)), "##,##0.00")
                            StringaFile = StringaFile & vbCrLf & vbTab & "CANONE 1243 2 ANNO:......................................." & Format(CDbl(par.IfEmpty(sCANONE12432, 0)), "##,##0.00")
                            StringaFile = StringaFile & vbCrLf & vbTab & "DELTA 1243 1 ANNO:........................................" & Format(CDbl(par.IfEmpty(sDELTA12431, 0)), "##,##0.00")
                            StringaFile = StringaFile & vbCrLf & vbTab & "DELTA 1243 2 ANNO:........................................" & Format(CDbl(par.IfEmpty(sDELTA12432, 0)), "##,##0.00")

                            sCANONE12431 = Format(CDbl(par.IfEmpty(sCANONE12431, 0)), "##,##0.00")
                            sCANONE12432 = Format(CDbl(par.IfEmpty(sCANONE12432, 0)), "##,##0.00")
                            sDELTA12431 = Format(CDbl(par.IfEmpty(sDELTA12431, 0)), "##,##0.00")
                            sDELTA12432 = Format(CDbl(par.IfEmpty(sDELTA12432, 0)), "##,##0.00")
                        End If

                    End If



                    CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace(sMOTIVODECADENZA, "/", vbCrLf)

                    CalcolaCanone27_ANAGRAFE_UTENZA = StringaFile
                Else
                    CalcolaCanone27_ANAGRAFE_UTENZA = "Canone non calcolabile per mancanza di dati!"
                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Canone non calcolabile per mancanza di dati Unità!/"

                End If

                If sMOTIVODECADENZA <> "Canone non calcolabile per mancanza di dati Unità!/" Then
                    AreaEconomica = AREAMIA
                    sLimitePensione = LimitePensioni
                    sPER_VAL_LOC = PER_VAL_LOC
                    sPERC_INC_MAX_ISE_ERP = PERC_INC_MAX_ISE_ERP
                    sCANONE_MIN = CANONE_MIN
                    sISE_MIN = ISE_MIN
                    sCANONE = CanoneDaPagare
                    sNOTE = Note
                    sCOEFFFAM = COEF_NUCLEO_FAM
                    sINCIDENZAISE = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100
                Else
                    AreaEconomica = -1
                End If

                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                IMPORTO = 0
                sNOTE = ex.Message
                CalcolaCanone27_ANAGRAFE_UTENZA = ex.Message
            End Try
        End Function

        Function DataDiPasqua(ByVal iAnno As Integer) As String
            Dim a As Integer
            Dim b As Integer
            Dim c As Integer
            Dim d As Integer
            Dim e As Integer
            Dim f As Integer
            Dim g As Integer
            Dim h As Integer
            Dim k As Integer
            Dim m As Integer
            Dim sTmp As String

            a = iAnno Mod 19
            b = iAnno Mod 4
            c = iAnno Mod 7
            h = 19 * a + 24
            d = h Mod 30
            k = 5 + 2 * b + 4 * c + 6 * d
            e = k Mod 7
            m = d + e

            If m <= 9 Then
                g = 31 - (9 - m)
                m = 3
            Else
                f = m - 9
                If f = 26 Then
                    g = 19
                    m = 4
                Else
                    If f = 25 Then
                        If d <> 28 Then
                            g = f
                            m = 4
                        Else
                            g = 18
                            m = 4
                        End If
                    Else
                        g = f
                        m = 4
                    End If
                End If
            End If

            sTmp = Format(g, "00") + "/" + Format(m, "00") + "/" + Mid(Str(iAnno), 2)

            DataDiPasqua = (sTmp)
        End Function


        Function CalcolaCanone27Abusivi(ByVal Id As Long, ByVal Prov As Long, ByVal id_unita As Long, ByVal Cod_Contratto As String, ByRef IMPORTO As Double, ByRef VAL_LOCATIVO_UNITA As String, ByRef Comunicazioni As String, ByRef AreaEconomica As Integer, ByRef sISEE As String, ByRef sISE As String, ByRef sISR As String, ByRef sISP As String, ByRef sVSE As String, ByRef sREDD_DIP As String, ByRef sREDD_ALT As String, ByRef sLimitePensione As String, ByRef sPER_VAL_LOC As String, ByRef sPERC_INC_MAX_ISE_ERP As String, ByRef sCANONE_MIN As String, ByRef sISE_MIN As String, ByRef sCANONE As String, ByRef sNOTE As String, ByRef sDEM As String, ByRef sSUPCONVENZIONALE As String, ByRef sCOSTOBASE As String, ByRef sZONA As String, ByRef sPIANO As String, ByRef sCONSERVAZIONE As String, ByRef sVETUSTA As String, ByRef sPSE As String, ByRef sINCIDENZAISE As String, ByRef sCOEFFFAM As String, ByRef sSOTTOAREA As String, ByRef sMOTIVODECADENZA As String, ByRef sNUMCOMP As String, ByRef sNUMCOMP66 As String, ByRef sNUMCOMP100 As String, ByRef sNUMCOMP100C As String, ByRef sPREVDIP As String, ByRef sDETRAZIONI As String, ByRef sMOBILIARI As String, ByRef sIMMOBILIARI As String, ByRef sCOMPLESSIVO As String, ByRef sDETRAZIONIF As String, ByRef sANNOCOSTRUZIONE As String, ByRef sLOCALITA As String, ByRef sASCENSORE As String, ByRef sDESCRIZIONEPIANO As String, ByRef sSUPNETTA As String, ByRef sALTRESUP As String, ByRef sMINORI15 As String, ByRef sMAGGIORI65 As String, ByRef sSUPACCESSORI As String, ByRef sVALORELOCATIVO As String, ByRef sCANONECLASSE As String, ByRef sCANONESOPP As String, ByRef sVALOCIICI As String, ByRef sALLOGGIOIDONEO As String, ByRef sISTAT As String, ByRef sCANONECLASSEISTAT As String, ByRef sANNOINIZIOVAL As String, ByRef sANNOFINEVAL As String, Optional ByVal ANNO_RIFERIMENTO As Integer = 0) As String
            Comunicazioni = ""
            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double

            Dim UnitaVenduta As Boolean = False

            Dim ISEE As Double = 0
            Dim PSE As Double = 0
            Dim VSE As Double = 0
            Dim ISE As Double = 0
            Dim ISR As Double = 0
            Dim ISP As Double = 0
            Dim REDD_DIP As Double = 0
            Dim REDD_ALT As Double = 0
            Dim totS As Double = 0

            Dim TotDetrazioni As Double = 0
            Dim TotMobiliari As Double = 0
            Dim TotImmobiliari As Double = 0
            Dim REDDITO_COMPLESSIVO As Double = 0
            Dim DETRAZIONI_F As Double = 0

            Dim NumComponenti As Integer = 0
            Dim IdDichiarazione As Long
            Dim Minori65 As Boolean = False
            Dim IdDomanda As Long = 0
            Dim Note As String = ""
            Dim BUONO As Boolean = True

            Dim AREA As Integer
            Dim PER_VAL_LOC As Integer
            Dim PERC_INC_MAX_ISE_ERP As Integer
            Dim CANONE_MIN As Double
            Dim ISE_MIN As Double
            Dim LimitePensioni As Double = 0

            Dim AREAMIA As Integer
            Dim CanoneDaPagare As Double

            Dim COEF_NUCLEO_FAM As Double = 0
            Dim Decadenza As String = "0"
            Dim Ise_erp_new As Double = 0
            Dim Disabilita66 As Boolean = False
            Dim DataDecorrenzaContratto As String = ""
            Dim StatoDichiarazione As Integer = 1

            Dim NUM66 As Integer = 0
            Dim NUM99 As Integer = 0
            Dim NUM100 As Integer = 0
            Dim NUM100C As Integer = 0

            sPREVDIP = "0"

            sDETRAZIONI = "0"
            sMOBILIARI = "0"
            sIMMOBILIARI = "0"
            sCOMPLESSIVO = "0"
            sDETRAZIONIF = "0"
            sANNOCOSTRUZIONE = ""
            sLOCALITA = ""
            sASCENSORE = "0"
            sDESCRIZIONEPIANO = ""
            sSUPNETTA = ""
            sALTRESUP = ""


            sMINORI15 = "0"
            sMAGGIORI65 = "0"
            sSUPACCESSORI = ""
            sVALORELOCATIVO = ""

            sCANONECLASSE = ""
            sCANONESOPP = ""
            sCANONECLASSEISTAT = ""
            sISTAT = ""

            sANNOFINEVAL = ""
            sANNOINIZIOVAL = ""

            Dim MINORI15 As Integer = 0
            Dim MAGGIORI65 As Integer = 0
            Dim ANNO_SIT_ECONOMICA As String = ""

            Dim DATA_EVENTO As String = ""

            Try
                CalcolaCanone27Abusivi = 0

                par.OracleConn.Open()
                par.SettaCommand(par)


                If Prov = 0 Then
                    par.cmd.CommandText = "SELECT * FROM UTENZA_DICHIARAZIONI WHERE ID=" & Id
                    Dim myReaderX As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderX.Read Then
                        IdDichiarazione = par.IfNull(myReaderX("ID"), 0)
                        'IdDomanda = par.IfNull(myReaderX("ID"), 0)
                        Cod_Contratto = par.IfNull(myReaderX("RAPPORTO"), "")
                        ISEE = par.IfNull(myReaderX("ISEE"), 0)
                        ISE = par.IfNull(myReaderX("ISE_ERP"), 0)
                        ISR = par.IfNull(myReaderX("ISR_ERP"), 0)
                        ISP = par.IfNull(myReaderX("ISP_ERP"), 0)
                        PSE = par.IfNull(myReaderX("PSE"), 1)
                        VSE = par.IfNull(myReaderX("VSE"), 1)

                        DATA_EVENTO = par.IfNull(myReaderX("DATA_INIZIO_VAL"), Format(Now, "yyyyMMdd"))

                        ANNO_SIT_ECONOMICA = par.IfNull(myReaderX("ANNO_SIT_ECONOMICA"), "2009")
                        sANNOINIZIOVAL = par.IfNull(myReaderX("data_inizio_val"), "2010")
                        sANNOFINEVAL = par.IfNull(myReaderX("data_fine_val"), "2011")
                        StatoDichiarazione = par.IfNull(myReaderX("id_stato"), 1)
                    End If
                    myReaderX.Close()


                    par.cmd.CommandText = "select sum(nvl(dipendente,0)+nvl(non_imponibili,0)+nvl(pensione,0)+nvl(pens_esente,0)) from sepa.UTENZA_REDDITI where ID_UTENZA=" & IdDichiarazione
                    Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_DIP = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    par.cmd.CommandText = "select sum(nvl(autonomo,0)+nvl(dom_ag_fab,0)+nvl(occasionali,0)) from sepa.UTENZA_REDDITI where ID_UTENZA=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    If myReaderW.Read Then
                        REDD_ALT = par.IfNull(myReaderW(0), 0)
                    End If
                    myReaderW.Close()

                    Disabilita66 = False
                    Minori65 = False

                    par.cmd.CommandText = "select * from SEPA.UTENZA_COMP_NUCLEO where id_DICHIARAZIONE=" & IdDichiarazione
                    myReaderW = par.cmd.ExecuteReader()
                    Do While myReaderW.Read
                        NumComponenti = NumComponenti + 1
                        If Minori65 = False Then
                            If par.RicavaEta(par.IfNull(myReaderW("data_nascita"), "")) < 65 Then
                                Minori65 = True
                            End If
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") < 15 Then
                            MINORI15 = MINORI15 + 1
                        End If

                        If par.RicavaEtaChiusura(par.FormattaData(par.IfNull(myReaderW("data_nascita"), "")), ANNO_SIT_ECONOMICA & "1231") > 65 Then
                            MAGGIORI65 = MAGGIORI65 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) > 66 Then
                            Disabilita66 = True
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) >= 66 And par.IfNull(myReaderW("perc_inval"), 0) <= 99 Then
                            NUM66 = NUM66 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "0" Then
                            NUM100 = NUM100 + 1
                        End If

                        If par.IfNull(myReaderW("perc_inval"), 0) = 100 And par.IfNull(myReaderW("INDENNITA_ACC"), "0") = "1" Then
                            NUM100C = NUM100C + 1
                        End If


                        par.cmd.CommandText = "select sum(valore) from SEPA.utenza_comp_patr_immob where id_componente=" & myReaderW("id") & " and id_tipo=0"
                        Dim myReaderQ As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            totS = totS + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()


                        par.cmd.CommandText = "select SUM(importo) from SEPA.UTENZA_COMP_DETRAZIONI where id_componente=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.Read Then
                            TotDetrazioni = TotDetrazioni + par.IfNull(myReaderQ(0), 0)
                        End If
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_MOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotMobiliari = TotMobiliari + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            TotImmobiliari = TotImmobiliari + (par.IfNull(myReaderQ("VALORE"), 0) - par.IfNull(myReaderQ("MUTUO"), 0))
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_REDDITO WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("REDDITO_IRPEF"), 0) + par.IfNull(myReaderQ("PROV_AGRARI"), 0)
                        End While
                        myReaderQ.Close()

                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ALTRI_REDDITI WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        While myReaderQ.Read
                            REDDITO_COMPLESSIVO = REDDITO_COMPLESSIVO + par.IfNull(myReaderQ("IMPORTO"), 0)
                        End While
                        myReaderQ.Close()


                        par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_ELENCO_SPESE WHERE ID_COMPONENTE=" & myReaderW("id")
                        myReaderQ = par.cmd.ExecuteReader()
                        If myReaderQ.HasRows Then
                            While myReaderQ.Read
                                DETRAZIONI_F = DETRAZIONI_F + par.IfNull(myReaderQ("IMPORTO"), 0)
                            End While

                        Else
                            If par.IfNull(myReaderW("indennita_acc"), 0) = "1" Then
                                DETRAZIONI_F = DETRAZIONI_F + 10000
                            End If

                        End If
                        myReaderQ.Close()

                        If DETRAZIONI_F < 10000 And NUM100C > 0 Then
                            DETRAZIONI_F = 10000
                        End If

                    Loop
                    myReaderW.Close()

                    DETRAZIONI_F = DETRAZIONI_F + (NUM100 * 3000) + (NUM66 * 1500)

                    sREDD_DIP = REDD_DIP
                    sREDD_ALT = REDD_ALT

                End If


                sMINORI15 = MINORI15
                sMAGGIORI65 = MAGGIORI65

                sNUMCOMP = NumComponenti
                sNUMCOMP66 = NUM66
                sNUMCOMP100 = NUM100
                sNUMCOMP100C = NUM100C

                sDETRAZIONI = TotDetrazioni
                sMOBILIARI = TotMobiliari
                sIMMOBILIARI = TotImmobiliari
                sCOMPLESSIVO = REDDITO_COMPLESSIVO
                sDETRAZIONIF = DETRAZIONI_F

                sISEE = ISEE
                sISE = ISE
                sISR = ISR
                sISP = ISP
                sVSE = VSE
                sPSE = PSE

                Dim NOME_TABELLA_REDDITI As String = ""
                Dim LimiteA4 As Long = 0
                Dim InizioUltimaArea As Long = 0
                Dim LimiteDecadenza As Long = 0
                Dim LimiteA5 As Long = 0
                Dim InizioB1 As Long = 0
                Dim InizioC13 As Long = 0

                Dim sISTAT_PROTEZIONE As String = ""
                Dim sISTAT_ACCESSO As String = ""
                Dim sISTAT_PERMANENZA As String = ""
                Dim sISTAT_DECADENZA As String = ""


                Select Case Mid(DATA_EVENTO, 1, 4)
                    Case "2006"
                        LimitePensioni = 10520
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001

                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2007"
                        LimitePensioni = 10731
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2008"
                        LimitePensioni = 10903
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_27"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 28000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "0"
                        sISTAT_DECADENZA = "0"
                    Case "2009"
                        LimitePensioni = 11274
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_36"
                        LimiteA4 = 8000
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9000
                        InizioB1 = 9001
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0"
                        sISTAT_PERMANENZA = "2,025"
                        sISTAT_DECADENZA = "2,025"
                    Case "2010"
                        LimitePensioni = 11343
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2009"
                        LimiteA4 = 8162
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9182
                        InizioB1 = 9183
                        sISTAT_PROTEZIONE = "0"
                        sISTAT_ACCESSO = "0,525"
                        sISTAT_PERMANENZA = "2,56"
                        sISTAT_DECADENZA = "2,56"

                    Case "2011"
                        LimitePensioni = 11501
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2009"
                        LimiteA4 = 8162
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9182
                        InizioB1 = 9183
                        InizioC13 = 33669
                        sISTAT_PROTEZIONE = "1,275"
                        sISTAT_ACCESSO = "1,806"
                        sISTAT_PERMANENZA = "3,868"
                        sISTAT_DECADENZA = "3,868"

                    Case "2012"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2011"

                        LimiteA4 = 8514
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000


                        LimiteA5 = 9579
                        InizioB1 = 9580
                        sISTAT_PROTEZIONE = "3,781"
                        sISTAT_ACCESSO = "4,326"
                        sISTAT_PERMANENZA = "6,439"

                        sISTAT_DECADENZA = "6,439"
                    Case "2013"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_AU_2011"
                        LimiteA4 = 8514
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9579
                        InizioB1 = 9580
                        sISTAT_PROTEZIONE = "5,727"
                        sISTAT_ACCESSO = "6,283"
                        sISTAT_PERMANENZA = "8,435"
                        sISTAT_DECADENZA = "8,435"
                    Case "2014"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,203"
                        sISTAT_ACCESSO = "6,761"
                        sISTAT_PERMANENZA = "8,923"
                        sISTAT_DECADENZA = "8,923"
                    Case "2015"
                        LimitePensioni = 11824
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,363"
                        sISTAT_ACCESSO = "6,921"
                        sISTAT_PERMANENZA = "9,086"
                        sISTAT_DECADENZA = "9,086"
                    Case "2016"
                        LimitePensioni = 12336.87
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,4420"
                        sISTAT_ACCESSO = "7,0010"
                        sISTAT_PERMANENZA = "9,1680"
                        sISTAT_DECADENZA = "9,1680"
                    Case "2017", "2018"
                        LimitePensioni = 12336.87
                        NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                        LimiteA4 = 8713
                        InizioUltimaArea = 48001
                        LimiteDecadenza = 35000
                        LimiteA5 = 9803
                        InizioB1 = 9804
                        InizioC13 = 30498
                        sISTAT_PROTEZIONE = "6,6020"
                        sISTAT_ACCESSO = "7,1710"
                        sISTAT_PERMANENZA = "9,3310"
                        sISTAT_DECADENZA = "9,3310"
                End Select

                If DATA_EVENTO = "" Then
                    LimitePensioni = 12336.87
                    NOME_TABELLA_REDDITI = "CANONE_SOPPORTABILE_2014"
                    LimiteA4 = 8713
                    InizioUltimaArea = 48001
                    LimiteDecadenza = 35000
                    LimiteA5 = 9803
                    InizioB1 = 9804
                    InizioC13 = 30498
                    sISTAT_PROTEZIONE = "6,6020"
                    sISTAT_ACCESSO = "7,1710"
                    sISTAT_PERMANENZA = "9,3310"
                    sISTAT_DECADENZA = "9,3310"
                End If

                StringaFile = "COMUNE DI MILANO - PROSPETTO CANONE " & vbCrLf & vbCrLf


                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = StringaFile & "CALCOLO CANONE L.R. 27/07   - Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf
                    sLOCALITA = par.IfNull(myReader("COMUNE_DI"), "")

                    'If Cod_Contratto <> "" Then
                    '    StringaFile = StringaFile & "CONTRATTO COD: " & Cod_Contratto & vbCrLf & vbCrLf
                    'End If
                    If Cod_Contratto <> "" Then
                        par.cmd.CommandText = "SELECT CASE WHEN anagrafica.ragione_sociale is not null THEN ragione_sociale  ELSE RTRIM(LTRIM(COGNOME ||' ' ||NOME)) END AS ""INTESTATARIO"" FROM SISCOM_MI.ANAGRAFICA,SISCOM_MI.SOGGETTI_CONTRATTUALI,siscom_mi.rapporti_utenza WHERE RAPPORTI_UTENZA.COD_CONTRATTO='" & Cod_Contratto & "' AND SOGGETTI_CONTRATTUALI.ID_CONTRATTO=RAPPORTI_UTENZA.ID AND (SOGGETTI_CONTRATTUALI.COD_TIPOLOGIA_OCCUPANTE='INTE') AND ANAGRAFICA.ID=SOGGETTI_CONTRATTUALI.ID_ANAGRAFICA ORDER BY SOGGETTI_CONTRATTUALI.COD_TIPOLOGIA_OCCUPANTE DESC"
                        Dim myReader345 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader345.Read Then
                            StringaFile = StringaFile & vbCrLf & "CODICE CONTRATTO: " & Cod_Contratto & " - INTESTATARIO: " & par.IfNull(myReader345("INTESTATARIO"), "") & vbCrLf & vbCrLf
                        End If
                        myReader345.Close()
                    End If

                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf
                    If SUP_CONVENZIONALE = 0 Then
                        Note = Note & "SUP.CONVENZIONALE UGUALE A 0 O ASSENTE/"
                        BUONO = False
                    End If

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111") = "1111" And par.IfNull(myReader("DATA_COSTRUZIONE"), "1111") = "1111" Then
                        Note = Note & "DATA RISTRUTTURAZIONE E COSTRUZIONE ASSENTI/"
                        BUONO = False
                    End If


                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000

                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4)
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), ""), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf
                        sANNOCOSTRUZIONE = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4)
                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    StringaFile = StringaFile & vbTab & "Indice Ubicazione:..............." & ZONA & vbCrLf

                    If ZONA = 0 Then
                        Note = Note & "INDICE ZONA UGUALE A 0/"
                        BUONO = False
                    End If


                    'LIVELLO PIANO
                    'par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO,SISCOM_MI.PIANI where PIANI.COD_TIPO_LIVELLO_PIANO=" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & " AND TIPO_LIVELLO_PIANO.COD=PIANI.COD_TIPO_LIVELLO_PIANO"
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                        End If
                        sDESCRIZIONEPIANO = par.IfNull(myReaderA("DESCRIZIONE"), "")
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT * FROM SISCOM_MI.DIMENSIONI WHERE COD_TIPOLOGIA='SUP_NETTA' AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPNETTA = par.IfNull(myReaderA("VALORE"), 0)
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI WHERE COD_TIPOLOGIA<>'SUP_NETTA' AND COD_TIPOLOGIA<>'SUP_CONV' AND TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND ID_UNITA_IMMOBILIARE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sALTRESUP = sALTRESUP & par.IfNull(myReaderA("DESCRIZIONE"), "") & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    par.cmd.CommandText = "SELECT TIPOLOGIA_DIMENSIONI.DESCRIZIONE,DIMENSIONI.VALORE FROM SISCOM_MI.DIMENSIONI,SISCOM_MI.TIPOLOGIA_DIMENSIONI,SISCOM_MI.UNITA_IMMOBILIARI WHERE TIPOLOGIA_DIMENSIONI.COD=DIMENSIONI.COD_TIPOLOGIA AND DIMENSIONI.ID_UNITA_IMMOBILIARE=UNITA_IMMOBILIARI.ID AND UNITA_IMMOBILIARI.ID_UNITA_PRINCIPALE=" & id_unita
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        sSUPACCESSORI = sSUPACCESSORI & par.IfNull(myReaderA("DESCRIZIONE"), "") & "=" & par.IfNull(myReaderA("VALORE"), 0) & "/"
                    End If
                    myReaderA.Close()

                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    If CONSERVAZIONE = 0 Then
                        Note = Note & "INDICE CONSERVAZIONE UGUALE A 0/"
                        BUONO = False
                    End If

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1234"), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetusta':.................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    If VETUSTA = 0 Then
                        Note = Note & "INDICE VETUSTA UGUALE A 0/"
                        BUONO = False
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00") & vbCrLf & vbCrLf
                    VAL_LOCATIVO_UNITA = Format(VALORELOCATIVO, "##,##0.00")
                    sVALORELOCATIVO = VALORELOCATIVO

                    sDEM = DEM
                    sSUPCONVENZIONALE = SUP_CONVENZIONALE
                    sCOSTOBASE = COSTO_BASE_MC
                    sZONA = ZONA
                    sPIANO = PIANO
                    sCONSERVAZIONE = CONSERVAZIONE
                    sVETUSTA = VETUSTA

                    If myReader("cod_tipo_disponibilita") = "VEND" Then
                        UnitaVenduta = True
                    End If
                    'Decadenza = "1"

                    'If Decadenza = "0" Then
                    If Id <> -1 Then
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "DATI REDDITUALI - CALCOLO ISE-ERP ED ISEE-ERP" & vbCrLf


                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. ................................................." & sNUMCOMP
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MINORI 15 ANNI..................................." & sMINORI15
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. MAGGIORI 65 ANNI................................." & sMAGGIORI65
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 66%-99%................................." & sNUMCOMP66
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100%...................................." & sNUMCOMP100
                        StringaFile = StringaFile & vbCrLf & vbTab & "N. COMP. INVALIDI 100% CON IND. ACC......................." & sNUMCOMP100C
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI................................................" & Format(CDbl(par.IfEmpty(sDETRAZIONI, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "DETRAZIONI PER FRAGILITA'................................." & Format(CDbl(par.IfEmpty(sDETRAZIONIF, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI MOBILIARI.........................................." & Format(CDbl(par.IfEmpty(sMOBILIARI, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORI IMMOBILIARI........................................" & Format(CDbl(par.IfEmpty(sIMMOBILIARI, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "REDDITO COMPLESSIVO......................................." & Format(CDbl(par.IfEmpty(sCOMPLESSIVO, 0)), "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISEE ERP EFF.............................................." & Format(ISEE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISE ERP EFF..............................................." & Format(ISE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISR:......................................................" & Format(ISR, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "ISP:......................................................" & Format(ISP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "VSE:......................................................" & Format(VSE, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Redditi Dipendenti o Assimilati:.........................." & Format(REDD_DIP, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "Altri tipi di reddito Imponibili:........................." & Format(REDD_ALT, "##,##0.00")
                    Else
                        Decadenza = "1"
                        sMOTIVODECADENZA = sMOTIVODECADENZA & "CONTRATTO DI TIPO ABUSIVO/"
                    End If

                    If ISEE > LimiteDecadenza Or StatoDichiarazione = 0 Or StatoDichiarazione = 2 Then
                        Decadenza = "1"

                    End If



                    Dim CatCatastale As String = ""

                    If Id <> -1 Then
                        Select Case Prov
                            Case 0
                                par.cmd.CommandText = "SELECT * FROM UTENZA_COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 1
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 2
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_CAMBI WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_CAMBI WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 3, 11, 4, 5
                                par.cmd.CommandText = "SELECT * FROM COMP_PATR_IMMOB_VSA WHERE (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        End Select

                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then


                            Do While myReaderA.Read
                                If Mid(par.IfNull(myReaderA("cat_catastale"), "X"), 1, 1) = "A" Then
                                    Select Case NumComponenti
                                        Case 1, 2
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 54 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 1-2 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 3, 4
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 74 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 3-4 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case 5, 6
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 90 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 5-6 COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                        Case Is > 7
                                            If par.IfNull(myReaderA("sup_utile"), 0) >= 114 Then
                                                Decadenza = "1"
                                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ALLOGGIO IDONEO (" & par.IfNull(myReaderA("sup_utile"), 0) & "mq) PER 7 O + COMP./"
                                                sALLOGGIOIDONEO = "1"
                                                ISEE = InizioUltimaArea
                                                sSOTTOAREA = "D9"
                                                Exit Do
                                            End If
                                    End Select
                                End If
                            Loop
                        End If
                        myReaderA.Close()

                        Select Case Prov
                            Case 0
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM UTENZA_COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM UTENZA_COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 1
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 2
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_CAMBI WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_CAMBI WHERE id_dichiarazione=" & IdDichiarazione & ") "
                            Case 3, 11, 4, 5
                                par.cmd.CommandText = "SELECT SUM(VALORE) FROM COMP_PATR_IMMOB_VSA WHERE  substr(cat_catastale,1,1)='A' and (perc_patr_immobiliare=100 or piena_proprieta=1) and (FL_70KM=1 OR UPPER(COMUNE) IN (SELECT NOME FROM COMUNI_NAZIONI WHERE SIGLA='MI')) AND id_componente IN (SELECT ID FROM COMP_NUCLEO_VSA WHERE id_dichiarazione=" & IdDichiarazione & ") "
                        End Select


                        myReaderA = par.cmd.ExecuteReader()
                        If myReaderA.HasRows = True Then
                            Do While myReaderA.Read

                                Select Case NumComponenti
                                    Case 1, 2
                                        If par.IfNull(myReaderA(0), 0) >= 42026.25 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 1-2 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 3, 4
                                        If par.IfNull(myReaderA(0), 0) >= 54634.13 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE  PER 3-4 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case 5, 6
                                        If par.IfNull(myReaderA(0), 0) >= 58836.75 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 5-6 COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                    Case Is > 7
                                        If par.IfNull(myReaderA(0), 0) >= 75647.25 Then
                                            Decadenza = "1"
                                            sMOTIVODECADENZA = sMOTIVODECADENZA & "VALORE ICI ALLOGGIO (" & par.IfNull(myReaderA(0), 0) & ") SUPERIORE PER 7 O + COMP./"
                                            sVALOCIICI = "1"
                                            ISEE = InizioUltimaArea
                                            sSOTTOAREA = "D8"
                                            Exit Do
                                        End If
                                End Select
                            Loop
                        End If
                        myReaderA.Close()


                        'par.cmd.CommandText = "select COD_TIPOLOGIA_CONTR_LOC from siscom_MI.RAPPORTI_UTENZA where COD_CONTRATTO='" & Cod_Contratto & "'"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.Read Then
                        '    If par.IfNull(myReaderA("COD_TIPOLOGIA_CONTR_LOC"), "") = "NONE" Then
                        '        Decadenza = "1"
                        '        sMOTIVODECADENZA = sMOTIVODECADENZA & "TIPOLOGIA RAPPORTO ABUSIVO/"
                        '        ISEE = InizioUltimaArea
                        '        sSOTTOAREA = "D7"
                        '    End If
                        'End If
                        'myReaderA.Close()
                    End If

                    'StringaFile = StringaFile & vbCrLf & vbTab & "Anno situazione economica:................................" & ANNO_SIT_ECONOMICA

                    If Decadenza = "0" Then
                        'PENSIONE INPS

                        'par.cmd.CommandText = "select valore from siscom_MI.parametri where parametro= 'LIMITE 2 PENSIONI'"
                        'myReaderA = par.cmd.ExecuteReader()
                        'If myReaderA.Read Then
                        '    LimitePensioni = 10903 'par.IfNull(myReaderA("VALORE"), 0)
                        'End If
                        'myReaderA.Close()

                        'If ISEE <> 0 Then
                        StringaFile = StringaFile & vbCrLf & vbTab & "Limite 2 pensioni INPS, minima + sociale:................." & Format(LimitePensioni, "##,##0.00")
                        'End If
                        '
                        'VERIFICA SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE O NO
                        Dim prev_dip As Boolean
                        prev_dip = False

                        If ISEE = 0 Then
                            Beep()
                            'prev_dip = True
                        End If

                        If REDD_DIP > ((REDD_ALT + REDD_DIP) * 80) / 100 Then
                            prev_dip = True
                            'If ISEE <> 0 Then
                            StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................SI"
                            'End If
                        Else
                            'If ISEE <> 0 Then
                            StringaFile = StringaFile & vbCrLf & vbTab & "Prevalentemente dipendente:...............................NO"
                            'End If
                        End If

                        If prev_dip = True Then
                            sPREVDIP = "1"
                        Else
                            sPREVDIP = "0"
                        End If

                        'DEFINIZIONE PARAMETRI L.R27 TENENDO CONTO ANCHE SE IL REDDITO E' PREVALENTEMENTE DIPENDENTE E ISEE-ERP<9000

                        ISEE = Math.Truncate(ISEE)
                        ISE = Math.Truncate(ISE)

                        par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " ORDER BY ISEE_ERP ASC"
                        myReaderA = par.cmd.ExecuteReader()
                        If prev_dip = True Then
                            If ISEE <= LimiteA4 Then
                                If REDD_DIP + REDD_ALT < LimitePensioni Then
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    AREA = 1
                                    PER_VAL_LOC = 36
                                    PERC_INC_MAX_ISE_ERP = 16
                                    CANONE_MIN = 20
                                    sSOTTOAREA = "A5"
                                    ISE_MIN = ISEE
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                End If
                            Else
                                If ISEE <= LimiteA5 Then
                                    If REDD_DIP + REDD_ALT > LimitePensioni Then
                                        AREA = 1
                                        PER_VAL_LOC = 36
                                        PERC_INC_MAX_ISE_ERP = 16
                                        CANONE_MIN = 20
                                        sSOTTOAREA = "A5"
                                        ISE_MIN = ISEE
                                        sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato A5 redditi superiori p.minima+sociale/"
                                    Else
                                        Do While myReaderA.Read
                                            If ISEE <= myReaderA("ISEE_ERP") Then
                                                AREA = myReaderA("AREE")
                                                PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                                PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                                CANONE_MIN = myReaderA("CANONE_MINIMO")
                                                sSOTTOAREA = myReaderA("SOTTO_AREA")
                                                ISE_MIN = ISEE
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = IfNull(myReaderA("INC_MAX_ISEE_ERP"), 0)
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            ISE_MIN = ISEE
                                            Exit Do
                                        End If
                                    Loop
                                End If

                            End If
                        Else
                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE <> 0 Then
                                Comunicazioni = "Probabile Errore...non sono stati inseriti i redditi convenzionali!"
                            End If

                            If REDD_DIP = 0 And REDD_ALT = 0 And ISEE = 0 Then
                                AREA = 2
                                PER_VAL_LOC = 43
                                PERC_INC_MAX_ISE_ERP = 20
                                CANONE_MIN = 70
                                ISE_MIN = InizioB1
                                sSOTTOAREA = "B1"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                            Else


                                If ISEE <= LimiteA5 Then
                                    AREA = 2
                                    PER_VAL_LOC = 43
                                    PERC_INC_MAX_ISE_ERP = 20
                                    CANONE_MIN = 70
                                    sSOTTOAREA = "B1"
                                    ISE_MIN = InizioB1
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Forzato B1 reddito prevalente=NO/"
                                Else
                                    Do While myReaderA.Read
                                        If ISEE <= myReaderA("ISEE_ERP") Then
                                            AREA = myReaderA("AREE")
                                            PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                            PERC_INC_MAX_ISE_ERP = myReaderA("INC_MAX_ISEE_ERP")
                                            CANONE_MIN = myReaderA("CANONE_MINIMO")
                                            ISE_MIN = ISEE
                                            sSOTTOAREA = myReaderA("SOTTO_AREA")
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                'End If
                            End If
                        End If




                    Else
                        If ISEE > LimiteDecadenza And ISEE <> InizioUltimaArea And Id <> -1 Then
                            If Disabilita66 = True Then
                                Decadenza = "0"
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & " ma invalidi > 66% nel nucleo/"
                                sSOTTOAREA = ""
                            Else
                                par.cmd.CommandText = "select data_decorrenza from siscom_mi.rapporti_utenza where cod_contratto='" & Cod_Contratto & "'"
                                Dim myReaderY As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                                If myReaderY.Read Then
                                    DataDecorrenzaContratto = par.IfNull(myReaderY(0), 0)
                                End If
                                myReaderY.Close()

                                If Minori65 = False And par.RicavaEtaChiusura(par.FormattaData(DataDecorrenzaContratto), Format(Now, "yyyyMMdd")) >= 30 Then
                                    Decadenza = "0"
                                    sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & " ma data stipula>=30 e tutti i comp.>65 anni/"
                                    sSOTTOAREA = ""
                                Else


                                End If
                            End If

                            If Decadenza = "1" Then
                                sMOTIVODECADENZA = sMOTIVODECADENZA & "ISEE>" & LimiteDecadenza & "/"
                                'sSOTTOAREA = "D4"
                            End If
                        End If

                        If StatoDichiarazione = 0 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE INCOMPLETA/"
                            ISEE = InizioUltimaArea
                            sSOTTOAREA = "D5"
                        End If

                        If StatoDichiarazione = 2 Then
                            Decadenza = "1"
                            sMOTIVODECADENZA = sMOTIVODECADENZA & "DICHIARAZIONE DA CANCELLARE/"
                            ISEE = InizioUltimaArea
                            sSOTTOAREA = "D5"
                        End If

                        If Decadenza = "1" And Id <> -1 Then
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI." & NOME_TABELLA_REDDITI & " where aree=4 ORDER BY ISEE_ERP ASC"
                            myReaderA = par.cmd.ExecuteReader()
                            Do While myReaderA.Read
                                If ISEE <= myReaderA("ISEE_ERP") Then
                                    AREA = myReaderA("AREE")
                                    PER_VAL_LOC = myReaderA("PERC_VAL_LOCATIVO")
                                    PERC_INC_MAX_ISE_ERP = 0
                                    CANONE_MIN = myReaderA("CANONE_MINIMO")
                                    ISE_MIN = ISEE
                                    If sSOTTOAREA = "" Then
                                        sSOTTOAREA = myReaderA("SOTTO_AREA")
                                    End If
                                    Exit Do
                                End If
                            Loop
                        Else
                            If Id <> -1 Then
                                AREA = 3
                                PER_VAL_LOC = 120
                                PERC_INC_MAX_ISE_ERP = 24
                                CANONE_MIN = 200
                                ISE_MIN = InizioC13
                                sSOTTOAREA = "C13"

                            Else
                                AREA = 4
                                PER_VAL_LOC = 200
                                PERC_INC_MAX_ISE_ERP = 0
                                CANONE_MIN = 250
                                ISE_MIN = InizioUltimaArea
                                sSOTTOAREA = "D7"
                            End If
                        End If


                    End If

                    StringaFile = StringaFile & vbCrLf & vbCrLf & "DETERMINAZIONE DEL CANONE" & vbCrLf

                    AREAMIA = AREA

                    If Decadenza = "0" Then
                        Select Case AREA
                            Case 1
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PROTEZIONE"
                                'sISTAT = "1,275"
                                sISTAT = sISTAT_PROTEZIONE
                            Case 2
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................ACCESSO"
                                'sISTAT = "1,806"
                                sISTAT = sISTAT_ACCESSO
                            Case 3
                                StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................PERMANENZA"
                                'sISTAT = "3,868"
                                sISTAT = sISTAT_PERMANENZA
                        End Select
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "Area:.....................................................DECADENZA"
                        'sISTAT = "3,868"
                        sISTAT = sISTAT_DECADENZA
                    End If

                    StringaFile = StringaFile & vbCrLf & vbTab & "Fascia:..................................................." & sSOTTOAREA


                    'DATI FINALI PER LA STRINGA STAMPA

                    'If ISEE <> 0 Then
                    StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(ISE_MIN, "##,##0.00")
                    'Else
                    'If Decadenza = "0" Then
                    'StringaFile = StringaFile & vbCrLf & vbTab & "ISEE-ERP L.R 27:.........................................." & Format(0, "##,##0.00")
                    'End If
                    'End If



                    If Decadenza = "0" Then
                        'SE L 'ISE ERP E' MAGGIORE DELL'ISEE SI PRENDE QUELLO ALTRIMENTI L'ISEE PER LA LEGGE 27 DIVENTA ISE!SEMPRE IL MAGGIORE VA PRESO!

                        If ISE > (ISE_MIN * VSE) Then
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE, "##,##0.00")
                            'End If

                            Ise_erp_new = ISE
                        Else
                            'If ISEE <> 0 Then
                            'StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "ISE-ERP L.R 27:..........................................." & Format(ISE_MIN * VSE, "##,##0.00")
                            'End If

                            Ise_erp_new = (ISE_MIN * VSE)
                        End If
                    End If

                    If Decadenza = "0" Then

                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "INCIDENZA PERCENTUALE MASSIMA SU ISE-ERP:................." & PERC_INC_MAX_ISE_ERP & "%"
                        StringaFile = StringaFile & vbCrLf & vbTab & "VALORE INCIDENZA SU ISE-ERP:.............................." & Format((PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100, "##,##0.00")
                    Else
                        StringaFile = StringaFile & vbCrLf & vbTab & "PERCENTUALE DEL VALORE LOCATIVO:.........................." & PER_VAL_LOC & "%"

                    End If
                    'DEFINIZIONE COEFFICIENTE NUCLEI FAMILIARI CON UN SOLO COMPONENTE

                    Dim TOT_COMPONENTI As Integer = 1

                    If Decadenza = "0" Then
                        COEF_NUCLEO_FAM = 1
                        If NumComponenti = 1 Then
                            If AREA = 1 Then
                                COEF_NUCLEO_FAM = 0.7
                            ElseIf AREA = 2 Then
                                COEF_NUCLEO_FAM = 0.8
                            ElseIf AREA = 3 Then
                                COEF_NUCLEO_FAM = 0.85
                            End If
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI CON UN SOLO COMPONENTE: " & COEF_NUCLEO_FAM
                        Else
                            StringaFile = StringaFile & vbCrLf & vbTab & "COEFFICIENTE PER NUCLEI FAMILIARI:........................" & COEF_NUCLEO_FAM

                        End If
                    End If
                    '  CANONE MINIMO
                    StringaFile = StringaFile & vbCrLf & vbTab & "CANONE MINIMO MENSILE.................................. : " & Format(CANONE_MIN, "0.00")
                    'End If



                    'CALCOLO CANONE ERP A REGIME ANNUALE
                    Dim CanoneMIN As Double = 0
                    Dim canoneA As Double = 0
                    Dim canoneB As Double = 0
                    Dim canoneB1 As Double = 0
                    Dim CanoneErpRegime As Double = 0
                    Dim CANONEERPMIO As Double = 0
                    Dim CANONEAPP As Double = 0


                    If Decadenza = "0" Then

                        CanoneMIN = CANONE_MIN * 12
                        canoneA = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100

                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = (CANONEAPP + ((CANONEAPP * CDbl(par.IfEmpty(sISTAT, 0))) / 100)) * COEF_NUCLEO_FAM
                        canoneB1 = CANONEAPP * COEF_NUCLEO_FAM

                        If canoneA < canoneB Then
                            If canoneA > CanoneMIN Then
                                CanoneErpRegime = canoneA
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                        Else
                            If canoneB > CanoneMIN Then
                                CanoneErpRegime = canoneB
                            Else
                                CanoneErpRegime = CanoneMIN
                            End If
                            CANONEERPMIO = CanoneErpRegime

                        End If
                        If CanoneErpRegime > CanoneMIN Then
                            CanoneDaPagare = CanoneErpRegime
                        Else
                            CanoneDaPagare = CanoneMIN
                        End If
                    Else
                        CANONEAPP = (PER_VAL_LOC * VALORELOCATIVO) / 100
                        canoneB = CANONEAPP + ((CANONEAPP * CDbl(par.IfEmpty(sISTAT, 0))) / 100)
                        canoneB1 = CANONEAPP

                        CanoneDaPagare = canoneB
                        If CanoneDaPagare < 3000 Then
                            CanoneDaPagare = 3000
                        End If
                    End If

                    If UnitaVenduta = True Then
                        'CalcolaCanone27 = "Unità VENDUTA, Canone impostato a 0!"
                        'sMOTIVODECADENZA = sMOTIVODECADENZA & "Unità VENDUTA, Canone impostato a 0!"

                        sCANONECLASSE = "0"
                        sCANONECLASSEISTAT = "0"

                        sCANONESOPP = "0"

                        IMPORTO = Format("0", "0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(0, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & "0"
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(0, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(0, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(0 / 12, "##,##0.00")
                        CanoneDaPagare = 0
                        CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace("Unità VENDUTA, Canone impostato a 0!", "/", vbCrLf)


                        CalcolaCanone27Abusivi = StringaFile
                    Else
                        sCANONECLASSE = Format(canoneB1, "0.00")
                        sCANONECLASSEISTAT = Format(canoneB, "0.00")

                        sCANONESOPP = Format(canoneA, "0.00")

                        IMPORTO = Format(CanoneDaPagare, "0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE:............................................" & Format(canoneB1, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "% ISTAT APPLICATA CANONE CLASSE:.........................." & sISTAT
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE CLASSE CON ISTAT:.................................." & Format(canoneB, "##,##0.00")

                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP ANNUALE REGIME CALCOLATO:......................" & Format(CanoneDaPagare, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbTab & "CANONE ERP MENSILE REGIME CALCOLATO:......................" & Format(Round(CanoneDaPagare, 2) / 12, "##,##0.00")

                        CanoneDaPagare = Format(CanoneDaPagare, "##,##0.00")
                        StringaFile = StringaFile & vbCrLf & vbCrLf & "ANNOTAZIONI: " & Replace(sMOTIVODECADENZA, "/", vbCrLf)
                        CalcolaCanone27Abusivi = StringaFile

                    End If
                Else
                    CalcolaCanone27Abusivi = "Canone non calcolabile per mancanza di dati!"
                    sMOTIVODECADENZA = sMOTIVODECADENZA & "Canone non calcolabile per mancanza di dati Unità!/"
                End If

                If sMOTIVODECADENZA <> "Canone non calcolabile per mancanza di dati Unità!/" Then
                    AreaEconomica = AREAMIA
                    sLimitePensione = LimitePensioni
                    sPER_VAL_LOC = PER_VAL_LOC
                    sPERC_INC_MAX_ISE_ERP = PERC_INC_MAX_ISE_ERP
                    sCANONE_MIN = CANONE_MIN
                    sISE_MIN = ISE_MIN
                    sCANONE = CanoneDaPagare
                    sNOTE = Note
                    sCOEFFFAM = COEF_NUCLEO_FAM
                    sINCIDENZAISE = (PERC_INC_MAX_ISE_ERP * Ise_erp_new) / 100
                Else
                    AreaEconomica = -1
                End If

                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                IMPORTO = 0
                sNOTE = ex.Message
                CalcolaCanone27Abusivi = ex.Message
            End Try


        End Function
        Function CalcolaCanoneAbusivi(ByVal id_unita As Long, ByRef IMPORTO As Double, Optional ByVal tipo As Integer = 0) As String

            Dim par As New CM.Global
            Dim StringaFile As String = ""
            Dim DEM As Double = 0
            Dim SUP_CONVENZIONALE As Double = 0
            Dim COSTO_BASE_MC As Double = 0
            Dim ZONA As Double = 0
            Dim PIANO As Double = 0
            Dim CONSERVAZIONE As Double = 0
            Dim VETUSTA As Double = 0
            Dim VALORECONVENZIONALE As Double = 0
            Dim VALORELOCATIVO As Double

            Dim ISEE As Double = 0
            Dim PSE As Double = 0
            Dim VSE As Double = 0
            Dim ISE As Double = 0
            Dim ISR As Double = 0
            Dim ISP As Double = 0
            Dim REDD_DIP As Double = 0
            Dim REDD_ALT As Double = 0
            Dim totS As Double = 0
            Dim NumComponenti As Integer = 0
            Dim IdDichiarazione As Long
            Dim Minori65 As Boolean = False
            Dim sASCENSORE As String = ""

            Try
                CalcolaCanoneAbusivi = 0

                par.OracleConn.Open()
                par.SettaCommand(par)



                par.cmd.CommandText = "select EDIFICI.NUM_ASCENSORI, TIPO_UBICAZIONE_LG_392_78.DESCRIZIONE AS ""UBICAZIONE"",TIPO_UBICAZIONE_LG_392_78.VALORE_PER_CANONE AS ""FTERR"",EDIFICI.DATA_COSTRUZIONE,EDIFICI.DATA_RISTRUTTURAZIONE,EDIFICI.COD_COMUNE,COMUNI_NAZIONI.SIGLA AS ""PROVINCIA"",COMUNI_NAZIONI.NOME AS ""COMUNE_DI"",DIMENSIONI.VALORE AS ""SUP_CONV"", INDIRIZZI.DESCRIZIONE AS ""INDIRIZZO"",INDIRIZZI.CIVICO,INDIRIZZI.CAP,unita_immobiliari.*,TIPO_LIVELLO_PIANO.DESCRIZIONE AS ""PIANO"",TIPOLOGIA_UNITA_IMMOBILIARI.DESCRIZIONE AS ""TIPO_ALLOGGIO"",IDENTIFICATIVI_CATASTALI.FOGLIO,IDENTIFICATIVI_CATASTALI.NUMERO,IDENTIFICATIVI_CATASTALI.SUB,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita,identificativi_catastali.cod_classe_catastale from SEPA.COMUNI_NAZIONI, SISCOM_MI.DIMENSIONI,SISCOM_MI.INDIRIZZI,SISCOM_MI.EDIFICI,SISCOM_MI.IDENTIFICATIVI_CATASTALI,SISCOM_MI.TIPOLOGIA_UNITA_IMMOBILIARI,SISCOM_MI.TIPO_LIVELLO_PIANO,siscom_mi.unita_immobiliari,SISCOM_MI.TIPO_UBICAZIONE_LG_392_78,SISCOM_MI.COMPLESSI_IMMOBILIARI where TIPO_UBICAZIONE_LG_392_78.COD=COMPLESSI_IMMOBILIARI.COD_TIPO_UBICAZIONE_LG_392_78 AND COMPLESSI_IMMOBILIARI.ID=EDIFICI.ID_COMPLESSO AND COMUNI_NAZIONI.COD=INDIRIZZI.COD_COMUNE AND UNITA_IMMOBILIARI.ID=DIMENSIONI.ID_UNITA_IMMOBILIARE AND DIMENSIONI.COD_TIPOLOGIA='SUP_CONV' AND EDIFICI.ID=UNITA_IMMOBILIARI.ID_EDIFICIO AND INDIRIZZI.ID=UNITA_IMMOBILIARI.ID_INDIRIZZO AND UNITA_IMMOBILIARI.ID_CATASTALE=IDENTIFICATIVI_CATASTALI.ID (+) AND TIPOLOGIA_UNITA_IMMOBILIARI.COD=UNITA_IMMOBILIARI.COD_TIPOLOGIA (+) AND  TIPO_LIVELLO_PIANO.COD=UNITA_IMMOBILIARI.COD_TIPO_LIVELLO_PIANO AND UNITA_IMMOBILIARI.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    StringaFile = "Data Calcolo: " & Format(Now, "dd/MM/yyyy") & vbCrLf & vbCrLf
                    StringaFile = StringaFile & "ALLOGGIO COD.: " & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & vbCrLf
                    StringaFile = StringaFile & "INDIRIZZO    : " & par.IfNull(myReader("INDIRIZZO"), "") & ", " & par.IfNull(myReader("CIVICO"), "") & " " & par.IfNull(myReader("CAP"), "") & " " & par.IfNull(myReader("COMUNE_DI"), "") & " (" & par.IfNull(myReader("PROVINCIA"), "") & ")" & vbCrLf


                    StringaFile = StringaFile & "DATI UNITA' ABITATIVA" & vbCrLf
                    'If par.IfNull(myReader("COD_COMUNE"), "") = "F205" Then
                    '    DEM = 1.2 'BISOGNA VEDERE SE SI TROVA IN ALTRO COMUNE QUANTO VALE!! MANCA NEL PED
                    'End If

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            DEM = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            DEM = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            DEM = 0.95
                        Case "H264", "C707"
                            DEM = 1
                        Case "E639", "E313", "A473", "M102", "F260"
                            DEM = 0.8
                        Case Else
                            DEM = 1.2
                    End Select

                    StringaFile = StringaFile & vbTab & "Coeff. Demografia:..............." & DEM & vbCrLf

                    SUP_CONVENZIONALE = par.IfNull(myReader("SUP_CONV"), 0)
                    StringaFile = StringaFile & vbTab & "Sup. Convenzionale:.............." & SUP_CONVENZIONALE & vbCrLf

                    'COSTO CONVENZIONALE
                    'COSTO BASE METRO QUADRO Modifica dovuta alla L.r 27/07
                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO RISTRUTTURAZIONE " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1977 Then
                            COSTO_BASE_MC = 1000
                        Else
                            COSTO_BASE_MC = 1250
                        End If
                        StringaFile = StringaFile & vbTab & "Costo Base mq:...................ANNO COSTRUZIONE " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & COSTO_BASE_MC & vbCrLf

                    End If

                    'ZONA TERRITORIALE ALIAS UBICAZIONE
                    ZONA = par.IfNull(myReader("FTERR"), 0)
                    StringaFile = StringaFile & vbTab & "Indice Zona:....................." & ZONA & vbCrLf


                    'tipo = 1 dal 01/12/2007 al 31/12/2009, tipo = 0 dal 01/01/2010 in poi...
                    If tipo = 1 Then
                        If ZONA = 1.25 Then ZONA = 1.3

                    End If

                    'LIVELLO PIANO
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO.COD,TIPO_LIVELLO_PIANO.DESCRIZIONE,TIPO_LIVELLO_PIANO.VALORE_PER_CANONE from SISCOM_MI.TIPO_LIVELLO_PIANO where TIPO_LIVELLO_PIANO.cod='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"

                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        PIANO = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 1)))

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM SISCOM_MI.IMPIANTI,SISCOM_MI.IMPIANTI_SCALE,SISCOM_MI.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then

                            If PIANO = 1.2 Then PIANO = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                PIANO = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                PIANO = 0.95
                            End If
                            sASCENSORE = "0"
                        Else
                            sASCENSORE = "1"
                        End If
                        myReader3.Close()

                        StringaFile = StringaFile & vbTab & "Indice Piano:....................Piano " & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - Indice: " & PIANO & vbCrLf
                        If sASCENSORE = "1" Then
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................SI" & vbCrLf
                        Else
                            StringaFile = StringaFile & vbTab & "Ascensore:.......................NO" & vbCrLf
                        End If

                    End If
                    myReaderA.Close()


                    'STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERVATIVO_LG_392_78 where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        CONSERVAZIONE = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        StringaFile = StringaFile & vbTab & "Indice Conservazione:............" & par.IfNull(myReaderA("DESCRIZIONE"), "") & " - " & CONSERVAZIONE & vbCrLf
                    End If
                    myReaderA.Close()

                    'VETUSTA

                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione: " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Ristrutturazione " & Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    Else
                        If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) > 1986 Then
                            VETUSTA = 1
                            StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione: " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                        Else
                            If Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) < 1956 Then
                                VETUSTA = 0.875
                                StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                            Else
                                par.cmd.CommandText = "select VALORE  from SISCOM_MI.T_VETUSTA_27 where DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1234), 1, 4) & "'"
                                myReaderA = par.cmd.ExecuteReader()
                                If myReaderA.Read Then
                                    VETUSTA = par.IfNull(myReaderA("VALORE"), 0)
                                    StringaFile = StringaFile & vbTab & "Indice Vetustà:..................Anno Costruzione " & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) & " - " & VETUSTA & vbCrLf
                                End If
                                myReaderA.Close()
                            End If
                        End If
                    End If

                    VALORECONVENZIONALE = COSTO_BASE_MC * SUP_CONVENZIONALE * DEM * ZONA * PIANO * CONSERVAZIONE * VETUSTA
                    StringaFile = StringaFile & vbTab & "Valore Convenzionale:............" & Format(VALORECONVENZIONALE, "##,##0.00") & vbCrLf
                    VALORELOCATIVO = (VALORECONVENZIONALE * 5) / 100
                    IMPORTO = VALORELOCATIVO * 2
                    If IMPORTO < 3000 Then
                        IMPORTO = 3000
                    End If
                    StringaFile = StringaFile & vbTab & "Valore Locativo:................." & Format(VALORELOCATIVO, "##,##0.00")
                    CalcolaCanoneAbusivi = StringaFile
                Else
                    CalcolaCanoneAbusivi = "Dati Patrimoniali non trovati!"
                    IMPORTO = 0
                End If
                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                IMPORTO = 0
                CalcolaCanoneAbusivi = ex.Message
            End Try
        End Function

        Function CalcolaEQCAbusivi(ByVal id_unita As Long, ByVal annoStipula As String) As Decimal

            Dim par As New CM.Global
            Dim IndDemografia As Decimal = 0
            Dim SupConvenzionale As Decimal = 0
            Dim CostoBase As Decimal = 0
            Dim IndiceZona As Decimal = 0
            Dim IndicePiano As Decimal = 0
            Dim IndiceConservazione As Decimal = 0
            Dim IndiceVetusta As Decimal = 0
            Dim DescrCostoBase As String = ""
            Dim DescrIndicePiano As String = ""
            Dim DescrConservazione As String = ""
            Dim DescrVetusta As String = ""
            Dim IndiceCatCatastale As Decimal = 0
            Dim DescrCatatastale As String = ""
            Dim ValoreLocativo As Decimal = 0
            Dim CostoUnitario As Decimal = 0
            Dim CanoneOggettivo As Decimal = 0
            Dim EquoCanoneAnnuo As Decimal = 0
            Dim PercentualeIstat As Decimal = 0

            Try
                CalcolaEQCAbusivi = 0

                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "SELECT edifici.num_ascensori, tipo_ubicazione_lg_392_78_eqc.descrizione AS ""ubicazione"",tipo_ubicazione_lg_392_78_eqc.valore_per_canone AS ""fterr""," _
                & "comuni_nazioni.popolazione AS ""num_abitanti"",edifici.data_costruzione,edifici.data_ristrutturazione,edifici.cod_comune,comuni_nazioni.sigla AS ""provincia""," _
                & "comuni_nazioni.nome AS ""comune_di"",dimensioni.valore AS ""sup_conv"", indirizzi.descrizione AS ""indirizzo"",indirizzi.civico," _
                & "indirizzi.cap,unita_immobiliari.*,tipo_livello_piano_eqc.descrizione AS ""piano"",tipologia_unita_immobiliari.descrizione AS ""tipo_alloggio""," _
                & "identificativi_catastali.foglio,identificativi_catastali.numero,identificativi_catastali.sub,identificativi_catastali.cod_categoria_catastale,identificativi_catastali.rendita," _
                & "identificativi_catastali.cod_classe_catastale FROM sepa.comuni_nazioni, siscom_mi.dimensioni,siscom_mi.indirizzi," _
                & "siscom_mi.edifici,siscom_mi.identificativi_catastali,siscom_mi.tipologia_unita_immobiliari,siscom_mi.tipo_livello_piano_eqc," _
                & "siscom_mi.unita_immobiliari,siscom_mi.tipo_ubicazione_lg_392_78_eqc,siscom_mi.complessi_immobiliari " _
                & "WHERE tipo_ubicazione_lg_392_78_eqc.cod=complessi_immobiliari.cod_tipo_ubicazione_lg_392_78 " _
                & "AND complessi_immobiliari.id=edifici.id_complesso AND comuni_nazioni.cod=indirizzi.cod_comune AND unita_immobiliari.id=dimensioni.id_unita_immobiliare " _
                & "AND dimensioni.cod_tipologia='SUP_CONV' AND edifici.id=unita_immobiliari.id_edificio AND indirizzi.id=unita_immobiliari.id_indirizzo AND " _
                & "unita_immobiliari.id_catastale=identificativi_catastali.id (+) AND tipologia_unita_immobiliari.cod=unita_immobiliari.cod_tipologia (+) AND " _
                & "tipo_livello_piano_eqc.cod=unita_immobiliari.cod_tipo_livello_piano AND unita_immobiliari.id=" & id_unita
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then

                    Select Case par.IfNull(myReader("COD_COMUNE"), "")
                        Case "F205"
                            IndDemografia = 1.2
                        Case "L409", "G488", "D912", "C986", "B162", "E415", "F797"
                            IndDemografia = 0.9
                        Case "H930", "G220", "A940", "D286", "B212"
                            IndDemografia = 0.95
                        Case "H264", "C707"
                            IndDemografia = 0.95
                        Case "E639", "E313", "A473", "M102", "F260"
                            IndDemografia = 0.8
                        Case Else
                            IndDemografia = 1.2
                    End Select

                    SupConvenzionale = par.IfNull(myReader("SUP_CONV"), 0)

                    '*** COSTO base mq ***
                    'SE è precedente al 1975 (quello del '75)
                    If par.IfNull(myReader("DATA_COSTRUZIONE"), "1111") <> "1111" Then

                        If par.IfNull(myReader("DATA_COSTRUZIONE"), "1111") < "1975" Then
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI.T_COSTO_BASE_MC_EQC WHERE DESCRIZIONE='1975'"
                            Dim myReaderCC As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                            If myReaderCC.Read Then
                                CostoBase = par.IfNull(myReaderCC("VALORE"), 0)
                                DescrCostoBase = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4)
                            End If
                            myReaderCC.Close()
                        Else
                            par.cmd.CommandText = "SELECT * FROM SISCOM_MI.T_COSTO_BASE_MC_EQC WHERE DESCRIZIONE='" & Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), "1111"), 1, 4) & "'"
                            Dim myReaderCC As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                            If myReaderCC.Read Then
                                CostoBase = par.IfNull(myReaderCC("VALORE"), 0)
                                DescrCostoBase = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4)
                            End If
                            myReaderCC.Close()
                        End If
                    Else
                        CostoBase = 0
                        DescrCostoBase = "---"
                    End If
                    '*** 


                    '*** ZONA TERRITORIALE ALIAS UBICAZIONE (Considerare il coefficiente in base al numero di abitanti) ***
                    IndiceZona = par.IfNull(myReader("FTERR"), 0)


                    If par.IfNull(myReader("NUM_ABITANTI"), 0) < 20000 Then
                        If IndiceZona = 1.3 Then
                            IndiceZona = 1.1
                        End If
                    End If


                    '*** LIVELLO PIANO
                    par.cmd.CommandText = "select TIPO_LIVELLO_PIANO_EQC.COD,TIPO_LIVELLO_PIANO_EQC.DESCRIZIONE,TIPO_LIVELLO_PIANO_EQC.VALORE_PER_CANONE from siscom_mi.TIPO_LIVELLO_PIANO_EQC where TIPO_LIVELLO_PIANO_EQC.COD='" & par.IfNull(myReader("COD_TIPO_LIVELLO_PIANO"), 0) & "'"
                    Dim myReaderA As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        IndicePiano = CDbl(PuntiInVirgole(par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)))
                        DescrIndicePiano = par.IfNull(myReaderA("DESCRIZIONE"), 0)

                        par.cmd.CommandText = "SELECT IMPIANTI.* FROM siscom_mi.IMPIANTI,siscom_mi.IMPIANTI_SCALE,siscom_mi.UNITA_IMMOBILIARI WHERE UNITA_IMMOBILIARI.COD_UNITA_IMMOBILIARE='" & par.IfNull(myReader("COD_UNITA_IMMOBILIARE"), "") & "' AND IMPIANTI.COD_TIPOLOGIA='SO' AND IMPIANTI_SCALE.ID_SCALA=UNITA_IMMOBILIARI.ID_SCALA AND IMPIANTI.ID=IMPIANTI_SCALE.ID_IMPIANTO"
                        Dim myReader3 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                        If myReader3.HasRows = False Then
                            If IndicePiano = 1.2 Then IndicePiano = 1.1
                            If par.IfNull(myReaderA("COD"), 0) >= 5 And par.IfNull(myReaderA("COD"), 0) <= 31 Then
                                IndicePiano = 0.95
                            End If
                            If par.IfNull(myReaderA("COD"), 0) >= 46 And par.IfNull(myReaderA("COD"), 0) <= 71 Then
                                IndicePiano = 0.95
                            End If
                        End If
                        myReader3.Close()
                    End If
                    myReaderA.Close()



                    '*** STATO CONSERVAZIONE IMMOBILE
                    par.cmd.CommandText = "select *  from SISCOM_MI.STATO_CONSERV_LG392_78_EQC where COD='" & par.IfNull(myReader("COD_STATO_CONS_LG_392_78"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        IndiceConservazione = par.IfNull(myReaderA("VALORE_PER_CANONE"), 0)
                        DescrConservazione = par.IfNull(myReaderA("DESCRIZIONE"), "")
                    End If
                    myReaderA.Close()


                    '*** VETUSTA
                    Dim DATA_VETUSTA As String = ""
                    If Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4) > Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4) Then
                        DATA_VETUSTA = Mid(par.IfNull(myReader("DATA_RISTRUTTURAZIONE"), 1111), 1, 4)
                    Else
                        DATA_VETUSTA = Mid(par.IfNull(myReader("DATA_COSTRUZIONE"), 1111), 1, 4)
                    End If
                    If Year(Now) - DATA_VETUSTA >= 50 Then
                        IndiceVetusta = 0.7
                        DescrVetusta = "Maggiore/Uguale 50 anni"
                    Else
                        If Year(Now) - DATA_VETUSTA <= 5 Then
                            IndiceVetusta = 1
                            DescrVetusta = "Minore/Uguale 5 anni"
                        Else
                            par.cmd.CommandText = "select VALORE from SISCOM_MI.T_VETUSTA_EQC where DESCRIZIONE='ANNI " & Year(Now) - DATA_VETUSTA & "'"
                            Dim myReaderVet As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                            If myReaderVet.Read Then
                                IndiceVetusta = par.IfNull(myReaderVet("VALORE"), 0)
                                DescrVetusta = Year(Now) - DATA_VETUSTA
                            End If
                            myReaderVet.Close()
                        End If
                    End If


                    par.cmd.CommandText = "select * from SISCOM_MI.CATEGORIA_CATASTALE_EQC where COD='" & par.IfNull(myReader("cod_categoria_catastale"), "") & "'"
                    myReaderA = par.cmd.ExecuteReader()
                    If myReaderA.Read Then
                        IndiceCatCatastale = par.IfNull(myReaderA("COEFFICIENTE"), 0)
                        DescrCatatastale = par.IfNull(myReader("cod_categoria_catastale"), "")
                    End If
                    myReaderA.Close()

                    CostoUnitario = CostoBase * IndDemografia * IndiceZona * IndicePiano * IndiceConservazione * IndiceVetusta * IndiceCatCatastale
                    ValoreLocativo = CostoUnitario * SupConvenzionale

                    If DATA_VETUSTA <= "1975" Then
                        PercentualeIstat = Format((CalcolaAggiornamentoISTAT("197806", annoStipula & "06") * 75) / 100, "0.000")
                    End If
                    If DATA_VETUSTA >= "1976" And DATA_VETUSTA <= "1978" Then
                        PercentualeIstat = Format((CalcolaAggiornamentoISTAT("197812", annoStipula & "12") * 75) / 100, "0.000")
                    End If
                    If DATA_VETUSTA >= "1979" Then
                        PercentualeIstat = Format((CalcolaAggiornamentoISTAT(DATA_VETUSTA & "12", annoStipula & "12") * 75) / 100, "0.000")
                    End If

                    CanoneOggettivo = (3.85 * ValoreLocativo) / 100

                    EquoCanoneAnnuo = Format(((CanoneOggettivo * PercentualeIstat) / 100), "0.00")
                Else
                    'CalcolaEQCAbusivi = "Dati Patrimoniali non trovati!"
                    EquoCanoneAnnuo = 0
                End If

                myReader.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

                Return EquoCanoneAnnuo

            Catch ex As Exception
                par.OracleConn.Close()
                EquoCanoneAnnuo = 0
                CalcolaEQCAbusivi = ex.Message
            End Try

        End Function

        Private Function CalcolaAggiornamentoISTAT(ByVal AnnoMesePartenza As String, ByVal AnnoMeseFine As String) As Double
            Dim par As New CM.Global

            Dim BaseIndicePartenza As Double = 0
            Dim BaseIndiceFine As Double = 0
            Dim IndicePartenza As Double = 0
            Dim IndiceFine As Double = 0
            Dim Cst As Double = 1.0009
            Dim AggiungiCst As Boolean = False
            Dim Coefficiente As Double = 0
            Dim BaseRif As Double = 0

            Try
                par.OracleConn.Open()
                par.SettaCommand(par)
                CalcolaAggiornamentoISTAT = 0

                par.cmd.CommandText = "select indice_nazionale,base_indice from siscom_mi.VARIAZIONI_ISTAT where substr(data_validita,1,6)='" & AnnoMesePartenza & "'"
                Dim myReader As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    IndicePartenza = par.IfNull(myReader(0), 0)
                    BaseIndicePartenza = par.IfNull(myReader(1), 0)
                End If
                myReader.Close()

                par.cmd.CommandText = "select indice_nazionale,base_indice from siscom_mi.VARIAZIONI_ISTAT where substr(data_validita,1,6)='" & AnnoMeseFine & "'"
                myReader = par.cmd.ExecuteReader()
                If myReader.Read Then
                    IndiceFine = par.IfNull(myReader(0), 0)
                    BaseIndiceFine = par.IfNull(myReader(1), 0)
                End If
                myReader.Close()

                If BaseIndiceFine = BaseIndicePartenza Then
                    CalcolaAggiornamentoISTAT = Format(((IndiceFine / IndicePartenza) * 100) - 100, "0.0")
                Else
                    If AnnoMesePartenza <= "199202" And AnnoMeseFine >= "199202" Then
                        AggiungiCst = True
                    Else
                        AggiungiCst = False
                    End If

                    Coefficiente = 1
                    BaseRif = BaseIndicePartenza

                    Do While BaseRif <> BaseIndiceFine
                        'cmd.CommandText = "select * from COEFFICIENTI_RACCORDO where DA_BASE=" & BaseRif & " AND TABACCHI_DA=0 AND TABACCHI_A=0 ORDER BY A_BASE ASC"
                        par.cmd.CommandText = "select * from siscom_mi.COEFF_RACCORDO where DA_BASE=" & BaseRif
                        myReader = par.cmd.ExecuteReader()
                        If myReader.HasRows = True Then
                            If myReader.Read Then
                                Coefficiente = Coefficiente * par.IfNull(myReader("Coefficiente"), 0)
                                BaseRif = par.IfNull(myReader("A_BASE"), 0)
                            End If
                        Else
                            'cmd.CommandText = "select * from COEFFCIENTI_RACCORDO where DA_BASE=" & BaseRif & " AND TABACCHI_DA=1 AND TABACCHI_A=1 ORDER BY A_BASE ASC"
                            par.cmd.CommandText = "select * from siscom_mi.COEFF_RACCORDO where DA_BASE=" & BaseRif
                            Dim myReader1 As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                            If myReader1.Read Then
                                Coefficiente = Coefficiente * par.IfNull(myReader1("Coefficiente"), 0)
                                BaseRif = par.IfNull(myReader1("A_BASE"), 0)
                            End If
                            myReader1.Close()
                        End If
                        myReader.Close()
                    Loop
                    If AggiungiCst = True Then
                        Coefficiente = Coefficiente * Cst
                    End If
                    CalcolaAggiornamentoISTAT = Format(((IndiceFine / IndicePartenza) * Coefficiente * 100) - 100, "0.0")
                End If

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                CalcolaAggiornamentoISTAT = 0
            End Try

        End Function

        Function RicavaEsercizio(ByVal Anno As Integer) As Long

            Try



                Dim idEsercizio As Long = 0
                Dim ConOpenNow As Boolean = False
                If OracleConn.State = Data.ConnectionState.Closed Then
                    ConOpenNow = True
                    OracleConn.Open()
                    cmd = OracleConn.CreateCommand()
                End If
                cmd.CommandText = "select * from siscom_mi.t_esercizio_finanziario where substr(inizio,1,4)='" & Anno & "' and substr(fine,1,4)='" & Anno & "'"
                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = cmd.ExecuteReader()
                If myReaderW.Read Then
                    idEsercizio = IfNull(myReaderW("id"), 0)
                End If
                myReaderW.Close()
                cmd.Dispose()
                If ConOpenNow = True Then
                    cmd.Dispose()
                    OracleConn.Close()
                    'aggiunto da Max, perchè rimanevano appese connessioni
                    Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
                End If
                Return idEsercizio

            Catch ex As Exception
                OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()
            End Try
        End Function



        Function RicavaEsercizioCorrente() As Long
            Dim par As New CM.Global

            Try



                RicavaEsercizioCorrente = 0
                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select * from siscom_mi.t_esercizio_finanziario where inizio<='" & Format(Now, "yyyyMMdd") & "' and fine>='" & Format(Now, "yyyyMMdd") & "'"
                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderW.Read Then
                    RicavaEsercizioCorrente = par.IfNull(myReaderW("id"), 0)
                End If
                myReaderW.Close()
                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()

            End Try
        End Function


        Function RicavaEsercizioUltimoApprovato() As Long
            Dim par As New CM.Global

            Try

                RicavaEsercizioUltimoApprovato = 0
                par.OracleConn.Open()
                par.SettaCommand(par)

                par.cmd.CommandText = "select * from SISCOM_MI.PF_MAIN where ID_STATO=5 order by ID desc"

                Dim myReaderW As Oracle.DataAccess.Client.OracleDataReader = par.cmd.ExecuteReader()
                If myReaderW.Read Then
                    RicavaEsercizioUltimoApprovato = par.IfNull(myReaderW("ID_ESERCIZIO_FINANZIARIO"), 0)
                End If
                myReaderW.Close()

                par.cmd.Dispose()
                par.OracleConn.Close()
                Oracle.DataAccess.Client.OracleConnection.ClearAllPools()

            Catch ex As Exception
                par.OracleConn.Close()

            End Try
        End Function


        Function ProssimaRata(ByVal NumRate As Integer, ByVal DataDecorrenza As String, ByRef DataRata As String) As Integer
            Dim DaRata As Integer
            Dim anno As Integer

            If DataDecorrenza < Format(Now, "yyyyMMdd") Then
                DataDecorrenza = Format(Now, "yyyyMMdd")
            End If
            ProssimaRata = 0

            Select Case NumRate
                Case 12
                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("1201") Then
                        'parte dal 01/01
                        DaRata = 1
                        anno = Year(Now) + 1
                        DataRata = anno & "0101"

                    Else
                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("1101") Then
                            'parte dal 12/01
                            DaRata = 12
                            DataRata = Year(Now) & "1201"
                        Else
                            If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("1001") Then
                                'parte dal 11/01

                                DaRata = 11
                                DataRata = Year(Now) & "1101"
                            Else
                                If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0901") Then
                                    'parte dal 10/01

                                    DaRata = 10
                                    DataRata = Year(Now) & "1001"
                                Else
                                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0801") Then
                                        'parte dal 09/01

                                        DaRata = 9
                                        DataRata = Year(Now) & "0901"
                                    Else
                                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0701") Then
                                            'parte dal 08/01

                                            DaRata = 8
                                            DataRata = Year(Now) & "0801"
                                        Else
                                            If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0601") Then
                                                'parte dal 07/01

                                                DaRata = 7
                                                DataRata = Year(Now) & "0701"
                                            Else
                                                If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0501") Then
                                                    'parte dal 06/01

                                                    DaRata = 6
                                                    DataRata = Year(Now) & "0601"
                                                Else
                                                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0401") Then
                                                        'parte dal 05/01

                                                        DaRata = 5
                                                        DataRata = Year(Now) & "0501"
                                                    Else
                                                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0301") Then
                                                            'parte dal 04/01

                                                            DaRata = 4
                                                            DataRata = Year(Now) & "0401"
                                                        Else
                                                            If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0201") Then
                                                                'parte dal 03/01

                                                                DaRata = 3
                                                                If CLng(Mid(DataDecorrenza, 1, 4)) > Year(Now) Then
                                                                    DataRata = Year(Now) + 1 & "0301"
                                                                Else
                                                                    DataRata = Year(Now) & "0301"
                                                                End If

                                                            Else
                                                                If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0101") Then
                                                                    'parte dal 02/01

                                                                    DaRata = 2
                                                                    If CLng(Mid(DataDecorrenza, 1, 4)) > Year(Now) Then
                                                                        DataRata = Year(Now) + 1 & "0201"
                                                                    Else
                                                                        DataRata = Year(Now) & "0201"
                                                                    End If

                                                                Else
                                                                    If CLng(Mid(DataDecorrenza, 5, 4)) = CLng("0101") Then
                                                                        'parte dal 02/01

                                                                        DaRata = 1
                                                                        DataRata = Mid(DataDecorrenza, 1, 4) & "0101"
                                                                    End If
                                                                End If
                                                            End If
                                                        End If
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If
                Case 6
                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("1101") Then
                        'parte dal 01/01

                        DaRata = 1
                        anno = Year(Now) + 1
                        DataRata = anno & "0101"
                    Else
                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0901") Then
                            'parte dal 11/01

                            DaRata = 6
                            DataRata = Year(Now) & "1101"
                        Else
                            If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0701") Then
                                'parte dal 09/01

                                DaRata = 5
                                DataRata = Year(Now) & "0901"
                            Else
                                If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0501") Then
                                    'parte dal 07/01

                                    DaRata = 4
                                    DataRata = Year(Now) & "0701"
                                Else
                                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0301") Then
                                        'parte dal 05/01

                                        DaRata = 3
                                        DataRata = Year(Now) & "0501"
                                    Else
                                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0101") Then
                                            'parte dal 03/01

                                            DaRata = 2
                                            DataRata = Year(Now) & "0301"
                                        Else
                                            If CLng(Mid(DataDecorrenza, 5, 4)) = CLng("0101") Then
                                                'parte dal 02/01

                                                DaRata = 1
                                                DataRata = Year(Now) & "0101"
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If

                Case 4
                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("1001") Then
                        'parte dal 01/01

                        DaRata = 1
                        anno = Year(Now) + 1
                        DataRata = anno & "0101"
                    Else
                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0701") Then
                            'parte dal 10/01

                            DaRata = 4
                            DataRata = Year(Now) & "1001"
                        Else
                            If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0401") Then
                                'parte dal 07/01

                                DaRata = 3
                                DataRata = Year(Now) & "0701"
                            Else
                                If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0101") Then
                                    'parte dal 04/01

                                    DaRata = 2
                                    DataRata = Year(Now) & "0401"
                                Else
                                    If CLng(Mid(DataDecorrenza, 5, 4)) = CLng("0101") Then
                                        'parte dal 02/01

                                        DaRata = 1
                                        DataRata = Year(Now) & "0101"
                                    End If
                                End If
                            End If
                        End If
                    End If

                Case 3
                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0901") Then
                        'parte dal 01/01

                        DaRata = 1
                        anno = Year(Now) + 1
                        DataRata = anno & "0101"
                    Else
                        If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0501") Then
                            'parte dal 09/01

                            DaRata = 3
                            DataRata = Year(Now) & "0901"
                        Else
                            If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0101") Then
                                'parte dal 03/01

                                DaRata = 2
                                DataRata = Year(Now) & "0301"
                            Else
                                If CLng(Mid(DataDecorrenza, 5, 4)) = CLng("0101") Then
                                    'parte dal 02/01

                                    DaRata = 1
                                    DataRata = Year(Now) & "0101"
                                End If
                            End If
                        End If
                    End If
                Case 2
                    If CLng(Mid(DataDecorrenza, 5, 4)) > CLng("0701") Then
                        'parte dal 01/01

                        DaRata = 1
                        anno = Year(Now) + 1
                        DataRata = anno & "0101"
                    Else
                        'parte dal 07/01

                        DaRata = 2
                        DataRata = Year(Now) & "0701"
                    End If
                Case 1

                    DaRata = 1
                    DataRata = Year(Now) + 1 & "0101"

            End Select
            ProssimaRata = DaRata
        End Function

        Function CalcolaPeriodo(ByVal inizio As String, ByVal Rate As String) As String
            CalcolaPeriodo = ""
            Select Case Rate
                Case "12"
                    If inizio = "01" Then CalcolaPeriodo = "02"
                    If inizio = "02" Then CalcolaPeriodo = "03"
                    If inizio = "03" Then CalcolaPeriodo = "04"
                    If inizio = "04" Then CalcolaPeriodo = "05"
                    If inizio = "05" Then CalcolaPeriodo = "06"
                    If inizio = "06" Then CalcolaPeriodo = "07"
                    If inizio = "07" Then CalcolaPeriodo = "08"
                    If inizio = "08" Then CalcolaPeriodo = "09"
                    If inizio = "09" Then CalcolaPeriodo = "10"
                    If inizio = "10" Then CalcolaPeriodo = "11"
                    If inizio = "11" Then CalcolaPeriodo = "12"
                    If inizio = "12" Then CalcolaPeriodo = "01"
                Case "6"
                    If inizio = "01" Then CalcolaPeriodo = "03"
                    If inizio = "03" Then CalcolaPeriodo = "05"
                    If inizio = "05" Then CalcolaPeriodo = "07"
                    If inizio = "07" Then CalcolaPeriodo = "09"
                    If inizio = "09" Then CalcolaPeriodo = "11"
                    If inizio = "11" Then CalcolaPeriodo = "01"
                Case "4"
                    If inizio = "01" Then CalcolaPeriodo = "04"
                    If inizio = "04" Then CalcolaPeriodo = "07"
                    If inizio = "07" Then CalcolaPeriodo = "10"
                    If inizio = "10" Then CalcolaPeriodo = "01"
                Case "3"
                    If inizio = "01" Then CalcolaPeriodo = "03"
                    If inizio = "05" Then CalcolaPeriodo = "09"
                    If inizio = "09" Then CalcolaPeriodo = "01"
                Case "2"
                    If inizio = "01" Then CalcolaPeriodo = "07"
                    If inizio = "07" Then CalcolaPeriodo = "01"
                Case "1"
                    CalcolaPeriodo = "01"
            End Select
        End Function

        Function VerificaSePeriodoOk(ByVal inizio As String, ByVal Rate As String, ByRef DataInizio As String, ByRef DataFine As String) As Integer
            Dim par As New CM.Global
            Dim AnnoInizio As String = ""


            If Len(inizio) = 2 Then
                AnnoInizio = Year(Now)
            Else
                AnnoInizio = Mid(inizio, 1, 4)
                inizio = Mid(inizio, 5, 2)
            End If

            VerificaSePeriodoOk = -1
            Select Case Rate
                Case "12"
                    If inizio = "01" Then
                        VerificaSePeriodoOk = 1
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0101"
                            DataFine = AnnoInizio + 1 & "0131"
                        Else
                            DataInizio = AnnoInizio & "0101"
                            DataFine = AnnoInizio & "0131"
                        End If
                    End If
                    If inizio = "02" Then
                        VerificaSePeriodoOk = 2
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0201"
                            DataFine = AnnoInizio + 1 & "0228"
                        Else
                            DataInizio = AnnoInizio & "0201"
                            DataFine = AnnoInizio & "0228"
                        End If

                    End If
                    If inizio = "03" Then
                        VerificaSePeriodoOk = 3
                        DataInizio = AnnoInizio & "0301"
                        DataFine = AnnoInizio & "0331"
                    End If
                    If inizio = "04" Then
                        VerificaSePeriodoOk = 4
                        DataInizio = AnnoInizio & "0401"
                        DataFine = AnnoInizio & "0430"
                    End If
                    If inizio = "05" Then
                        VerificaSePeriodoOk = 5
                        DataInizio = AnnoInizio & "0501"
                        DataFine = AnnoInizio & "0531"
                    End If
                    If inizio = "06" Then
                        VerificaSePeriodoOk = 6
                        DataInizio = AnnoInizio & "0601"
                        DataFine = AnnoInizio & "0630"
                    End If
                    If inizio = "07" Then
                        VerificaSePeriodoOk = 7
                        DataInizio = AnnoInizio & "0701"
                        DataFine = AnnoInizio & "0731"
                    End If
                    If inizio = "08" Then
                        VerificaSePeriodoOk = 8
                        DataInizio = AnnoInizio & "0801"
                        DataFine = AnnoInizio & "0831"
                    End If
                    If inizio = "09" Then
                        VerificaSePeriodoOk = 9
                        DataInizio = AnnoInizio & "0901"
                        DataFine = AnnoInizio & "0930"
                    End If
                    If inizio = "10" Then
                        VerificaSePeriodoOk = 10
                        DataInizio = AnnoInizio & "1001"
                        DataFine = AnnoInizio & "1031"
                    End If
                    If inizio = "11" Then
                        VerificaSePeriodoOk = 11
                        DataInizio = AnnoInizio & "1101"
                        DataFine = AnnoInizio & "1130"
                    End If
                    If inizio = "12" Then
                        VerificaSePeriodoOk = 12
                        DataInizio = AnnoInizio & "1201"
                        DataFine = AnnoInizio & "1231"
                    End If
                Case "6"
                    If inizio = "01" Then
                        VerificaSePeriodoOk = 1
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0101"
                            DataFine = AnnoInizio + 1 & "0228"
                        Else
                            DataInizio = AnnoInizio & "0101"
                            DataFine = AnnoInizio & "0228"
                        End If
                    End If
                    If inizio = "03" Then
                        VerificaSePeriodoOk = 2
                        DataInizio = AnnoInizio & "0301"
                        DataFine = AnnoInizio & "0430"
                    End If
                    If inizio = "05" Then
                        VerificaSePeriodoOk = 3
                        DataInizio = AnnoInizio & "0501"
                        DataFine = AnnoInizio & "0630"
                    End If
                    If inizio = "07" Then
                        VerificaSePeriodoOk = 4
                        DataInizio = AnnoInizio & "0701"
                        DataFine = AnnoInizio & "0831"
                    End If
                    If inizio = "09" Then
                        VerificaSePeriodoOk = 5
                        DataInizio = AnnoInizio & "0901"
                        DataFine = AnnoInizio & "1031"
                    End If
                    If inizio = "11" Then
                        VerificaSePeriodoOk = 6
                        DataInizio = AnnoInizio & "1101"
                        DataFine = AnnoInizio & "1231"
                    End If
                Case "4"
                    If inizio = "01" Then
                        VerificaSePeriodoOk = 1
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0101"
                            DataFine = AnnoInizio + 1 & "0331"
                        Else
                            DataInizio = AnnoInizio & "0101"
                            DataFine = AnnoInizio & "0331"
                        End If
                    End If
                    If inizio = "04" Then
                        VerificaSePeriodoOk = 2
                        DataInizio = AnnoInizio & "0401"
                        DataFine = AnnoInizio & "0630"
                    End If
                    If inizio = "07" Then
                        VerificaSePeriodoOk = 3
                        DataInizio = AnnoInizio & "0701"
                        DataFine = AnnoInizio & "0930"
                    End If
                    If inizio = "10" Then
                        VerificaSePeriodoOk = 4
                        DataInizio = AnnoInizio & "1001"
                        DataFine = AnnoInizio & "1231"
                    End If
                Case "3"
                    If inizio = "01" Then
                        VerificaSePeriodoOk = 1
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0101"
                            DataFine = AnnoInizio + 1 & "0131"
                        Else
                            DataInizio = AnnoInizio & "0101"
                            DataFine = AnnoInizio & "0131"
                        End If
                    End If
                    If inizio = "05" Then
                        VerificaSePeriodoOk = 2
                        DataInizio = AnnoInizio & "0501"
                        DataFine = AnnoInizio & "0831"
                    End If
                    If inizio = "09" Then
                        VerificaSePeriodoOk = 3
                        DataInizio = AnnoInizio & "0901"
                        DataFine = AnnoInizio & "1231"
                    End If
                Case "2"
                    If inizio = "01" Then
                        VerificaSePeriodoOk = 1
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0101"
                            DataFine = AnnoInizio + 1 & "0630"
                        Else
                            DataInizio = AnnoInizio & "0101"
                            DataFine = AnnoInizio & "0630"
                        End If
                    End If
                    If inizio = "07" Then
                        VerificaSePeriodoOk = 2
                        DataInizio = AnnoInizio & "0701"
                        DataFine = AnnoInizio & "1231"
                    End If
                Case "1"
                    If inizio = "01" Then
                        VerificaSePeriodoOk = 1
                        If Month(Now) = 12 Then
                            DataInizio = AnnoInizio + 1 & "0101"
                            DataFine = AnnoInizio + 1 & "1231"
                        Else
                            DataInizio = AnnoInizio & "0101"
                            DataFine = AnnoInizio & "1231"
                        End If
                    Else
                        VerificaSePeriodoOk = 1
                        DataInizio = DataInizio
                        DataFine = Format(DateAdd(DateInterval.Day, 364, CDate(par.FormattaData(DataInizio))), "yyyyMMdd")
                    End If
            End Select

        End Function

        Public Function PulisciStringaInvio(ByVal Str1 As String, ByVal val1 As Integer) As String
            'Pulisce la stringa da eventuali invii 
            '(nella griglia da errore se il primo campo contiene una stringa con l'invio)

            PulisciStringaInvio = Strings.Left(Strings.Replace(Str1, vbCrLf, " "), val1)

        End Function


        Public Function InserisciEvento(ByVal MyPar As Oracle.DataAccess.Client.OracleCommand, ByVal vIdImpianto As Long, ByVal vIdOperatore As Long, ByVal Tab_Eventi As Integer, ByRef Motivazione As String) As Boolean
            Dim par As New CM.Global

            Try

                InserisciEvento = False


                MyPar.Parameters.Clear()
                MyPar.CommandText = "insert into SISCOM_MI.EVENTI_IMPIANTI (ID_IMPIANTO,ID_OPERATORE,DATA_ORA,COD_EVENTO,MOTIVAZIONE) " _
                                    & "VALUES (" & vIdImpianto & "," & vIdOperatore & ",'" & Format(Now, "yyyyMMddHHmmss") & "'," _
                                    & "'F" & Tab_Eventi & "','" & par.PulisciStrSql(Motivazione) & "')"
                MyPar.ExecuteNonQuery()
                MyPar.CommandText = ""
                MyPar.Parameters.Clear()


            Catch ex As Exception
                InserisciEvento = False
                MyPar.Parameters.Clear()
            End Try


        End Function

        Public Function InserisciEventoManu(ByVal MyPar As Oracle.DataAccess.Client.OracleCommand, ByVal vIdImpianto As Long, ByVal vIdOperatore As Long, ByVal Tab_Eventi As Integer, ByRef Motivazione As String) As Boolean
            Dim par As New CM.Global

            Try

                InserisciEventoManu = False

                MyPar.Parameters.Clear()
                MyPar.CommandText = "insert into SISCOM_MI.EVENTI_MANUTENZIONE (ID_MANUTENZIONE,ID_OPERATORE,DATA_ORA,COD_EVENTO,MOTIVAZIONE) " _
                                    & "VALUES (" & vIdImpianto & "," & vIdOperatore & ",'" & Format(Now, "yyyyMMddHHmmss") & "'," _
                                    & "'F" & Tab_Eventi & "','" & par.PulisciStrSql(Motivazione) & "')"
                MyPar.ExecuteNonQuery()
                MyPar.CommandText = ""
                MyPar.Parameters.Clear()


            Catch ex As Exception
                InserisciEventoManu = False
                MyPar.Parameters.Clear()
            End Try

        End Function


#Region "Errore"
        Public Sub visualizzaErrore(ByVal eccezione As Exception, ByVal pagina As Object)
            Dim s = New StackTrace(eccezione)
            'Dim errore As Object = System.Web.HttpContext.Current.Session.Item("ERRORE")
            System.Web.HttpContext.Current.Session.Remove("ERRORE")
            System.Web.HttpContext.Current.Session.Add("ERRORE", "Provenienza: " & pagina.ToString().Replace("ASP.", "").Replace("_aspx", "") & " - " & s.GetFrames(s.FrameCount - 1).GetMethod().Name & " - " & eccezione.Message)
        End Sub
        Public Sub visualizzaErroreGenerico(ByVal erroreMsg As String, ByVal pagina As Object)
            Dim s = New StackTrace()
            Dim errore As Object = System.Web.HttpContext.Current.Session.Item("ERRORE")
            If IsNothing(errore) Then System.Web.HttpContext.Current.Session.Add("ERRORE", "Provenienza: " & pagina.ToString().Replace("ASP.", "").Replace("_aspx", "") & " - " & s.GetFrames(1).GetMethod().Name & " - " & erroreMsg)
        End Sub
#End Region
        Public Sub NotificaTelerik(ByVal Messaggio As String, ByVal RadNotification As RadNotification, ByVal Pagina As Page, Optional ByVal Titolo As String = "Sep@Com", Optional FunzioniJavascript As String = "")
            ScriptManager.RegisterStartupScript(Pagina, Pagina.[GetType](), "NotificaTelerik" & Format(Now, "ddMMyyyyHHmmss"), "function f(){NotificaTelerik('" & RadNotification.ClientID & "', '" & Titolo.ToString & "', '" & Messaggio.ToString & "');" & FunzioniJavascript & " Sys.Application.remove_load(f);}Sys.Application.add_load(f);", True)
        End Sub
        Public Sub MessaggioNoPostback(ByVal messaggio As String, ByVal pagina As Page, Optional ByVal width As Integer = 300, Optional ByVal height As Integer = 120, Optional ByVal Titolo As String = "Sep@com", Optional ByVal callBack As String = "null", Optional ByVal tipoImmagine As immagineMessaggio = immagineMessaggio.alert, Optional BlockPosition As Boolean = False)
            Dim nomeImmagine As String = "null"
            Select Case tipoImmagine
                Case 1
                    nomeImmagine = "'../StandardTelerik/Immagini/Messaggi/alert.png'"
                Case 2
                    nomeImmagine = "'../StandardTelerik/Immagini/Messaggi/completo.png'"
                Case 3
                    nomeImmagine = "'../StandardTelerik/Immagini/Messaggi/conferma.png'"
                Case Else
                    nomeImmagine = "'../StandardTelerik/Immagini/Messaggi/alert.png'"
            End Select
            Dim ScriptBlockPosition As String = ""
            If BlockPosition Then
                ScriptBlockPosition = "oAlert.set_behaviors(Telerik.Web.UI.WindowBehaviors.Close);"
            End If
            Dim sb As String = "function f(){var oAlert = radalert('" & messaggio.ToString & "', " & width & ", " & height & ",'" & Titolo & "'," & callBack & "," & nomeImmagine & ");" & ScriptBlockPosition & " Sys.Application.remove_load(f);}; Sys.Application.add_load(f);"
            pagina.ClientScript.RegisterStartupScript(GetType(Page), "messaggioNoPostback" & Format(Now, "ddMMyyyyHHmmss"), sb.ToString(), True)
        End Sub
        Public Sub MessaggioAlert(ByVal RadWindowManager As RadWindowManager, ByVal messaggio As String, Optional ByVal width As Integer = 300, Optional ByVal height As Integer = 120, Optional ByVal Titolo As String = "Sep@com", Optional ByVal callBack As String = Nothing, Optional ByVal tipoImmagine As immagineMessaggio = immagineMessaggio.alert)
            Dim nomeImmagine As String = "null"
            Select Case tipoImmagine
                Case 1
                    nomeImmagine = "../StandardTelerik/Immagini/Messaggi/alert.png"
                Case 2
                    nomeImmagine = "../StandardTelerik/Immagini/Messaggi/completo.png"
                Case 3
                    nomeImmagine = "../StandardTelerik/Immagini/Messaggi/conferma.png"
                Case Else
                    nomeImmagine = "../StandardTelerik/Immagini/Messaggi/alert.png"
            End Select
            RadWindowManager.RadAlert(messaggio, width, height, Titolo, callBack, nomeImmagine)
        End Sub

    End Class






    Public Class ExcelFile
        'Class file for writing Microsoft Excel BIFF 2.1 files.

        'This class is intended for users who do not want to use the huge
        'Jet or ADO providers if they only want to export their data to
        'an Excel compatible file.

        'Newer versions of Excel use the OLE Structure Storage methods
        'which are quite complicated.

        'Paul Squires, November 10, 2001
        'rambo2000@canada.com

        'Added default-cellformats: Dieter Hauk January 8, 2001 dieter.hauk@epost.de
        'Added default row height: Matthew Brewster November 9, 2001

        'ARMANDO: commentata
        'the memory copy API is used in the MKI$ function which converts an integer
        'value to a 2-byte string value to write to the file. (used by the Horizontal
        'Page Break function).
        'UPGRADE_ISSUE: La dichiarazione di un parametro 'As Any' non è supportata. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="FAE78A8D-8978-4FD4-8208-5B7324A8F795"'
        'UPGRADE_ISSUE: La dichiarazione di un parametro 'As Any' non è supportata. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="FAE78A8D-8978-4FD4-8208-5B7324A8F795"'
        'Private Declare Sub CopyMemory Lib "KERNEL32" Alias "RtlMoveMemory" (ByRef lpvDest As Any, ByRef lpvSource As Any, ByVal cbCopy As Integer)


        'enum to handle the various types of values that can be written
        'to the excel file.
        Public Enum ValueTypes
            xlsInteger = 0
            xlsNumber = 1
            xlsText = 2
        End Enum

        'enum to hold cell alignment
        Public Enum CellAlignment
            xlsGeneralAlign = 0
            xlsLeftAlign = 1
            xlsCentreAlign = 2
            xlsRightAlign = 3
            xlsFillCell = 4
            xlsLeftBorder = 8
            xlsRightBorder = 16
            xlsTopBorder = 32
            xlsBottomBorder = 64
            xlsShaded = 128
        End Enum

        'enum to handle selecting the font for the cell
        Public Enum CellFont
            'used by rgbAttr2
            'bits 0-5 handle the *picture* formatting, not bold/underline etc...
            'bits 6-7 handle the font number
            xlsFont0 = 0
            xlsFont1 = 64
            xlsFont2 = 128
            xlsFont3 = 192
        End Enum

        Public Enum CellHiddenLocked
            'used by rgbAttr1
            'bits 0-5 must be zero
            'bit 6 locked/unlocked
            'bit 7 hidden/not hidden
            xlsNormal = 0
            xlsLocked = 64
            xlsHidden = 128
        End Enum


        'set up variables to hold the spreadsheet's layout
        Public Enum MarginTypes
            xlsLeftMargin = 38
            xlsRightMargin = 39
            xlsTopMargin = 40
            xlsBottomMargin = 41
        End Enum


        Public Enum FontFormatting
            'add these enums together. For example: xlsBold + xlsUnderline
            xlsNoFormat = 0
            xlsBold = 1
            xlsItalic = 2
            xlsUnderline = 4
            xlsStrikeout = 8
        End Enum

        Private Structure FONT_RECORD
            Dim opcode As Short '49
            Dim length As Short '5+len(fontname)
            Dim FontHeight As Short
            'bit0 bold, bit1 italic, bit2 underline, bit3 strikeout, bit4-7 reserved
            Dim FontAttributes1 As Byte
            Dim FontAttributes2 As Byte 'reserved - always 0
            Dim FontNameLength As Byte
        End Structure


        Private Structure PASSWORD_RECORD
            Dim opcode As Short '47
            Dim length As Short 'len(password)
        End Structure


        Private Structure HEADER_FOOTER_RECORD
            Dim opcode As Short '20 Header, 21 Footer
            Dim length As Short '1+len(text)
            Dim TextLength As Byte
        End Structure


        Private Structure PROTECT_SPREADSHEET_RECORD
            Dim opcode As Short '18
            Dim length As Short '2
            Dim Protect As Short
        End Structure

        Private Structure FORMAT_COUNT_RECORD
            Dim opcode As Short '1f
            Dim length As Short '2
            Dim Count As Short
        End Structure

        Private Structure FORMAT_RECORD
            Dim opcode As Short '1e
            Dim length As Short '1+len(format)
            Dim FormatLenght As Byte 'len(format)
        End Structure '+ followed by the Format-Picture



        Private Structure COLWIDTH_RECORD
            Dim opcode As Short '36
            Dim length As Short '4
            Dim col1 As Byte 'first column
            Dim col2 As Byte 'last column
            Dim ColumnWidth As Short 'at 1/256th of a character
        End Structure

        'Beginning Of File record
        Private Structure BEG_FILE_RECORD
            Dim opcode As Short
            Dim length As Short
            Dim version As Short
            Dim ftype As Short
        End Structure

        'End Of File record
        Private Structure END_FILE_RECORD
            Dim opcode As Short
            Dim length As Short
        End Structure

        'true/false to print gridlines
        Private Structure PRINT_GRIDLINES_RECORD
            Dim opcode As Short
            Dim length As Short
            Dim PrintFlag As Short
        End Structure

        'Integer record
        Private Structure tInteger
            Dim opcode As Short
            Dim length As Short
            Dim Row As Short 'unsigned integer
            Dim col As Short
            'rgbAttr1 handles whether cell is hidden and/or locked
            Dim rgbAttr1 As Byte
            'rgbAttr2 handles the Font# and Formatting assigned to this cell
            Dim rgbAttr2 As Byte
            'rgbAttr3 handles the Cell Alignment/borders/shading
            Dim rgbAttr3 As Byte
            Dim intValue As Short 'the actual integer value
        End Structure

        'Number record
        Private Structure tNumber
            Dim opcode As Short
            Dim length As Short
            Dim Row As Short
            Dim col As Short
            Dim rgbAttr1 As Byte
            Dim rgbAttr2 As Byte
            Dim rgbAttr3 As Byte
            Dim NumberValue As Double '8 Bytes
        End Structure

        'Label (Text) record
        Private Structure tText
            Dim opcode As Short
            Dim length As Short
            Dim Row As Short
            Dim col As Short
            Dim rgbAttr1 As Byte
            Dim rgbAttr2 As Byte
            Dim rgbAttr3 As Byte
            Dim TextLength As Byte
        End Structure

        Private Structure MARGIN_RECORD_LAYOUT
            Dim opcode As Short
            Dim length As Short
            Dim MarginValue As Double '8 bytes
        End Structure

        Private Structure HPAGE_BREAK_RECORD
            Dim opcode As Short
            Dim length As Short
            Dim NumPageBreaks As Short
        End Structure

        Private Structure DEF_ROWHEIGHT_RECORD
            Dim opcode As Short
            Dim length As Short
            Dim RowHeight As Short
        End Structure

        Private Structure ROW_HEIGHT_RECORD
            Dim opcode As Short '08
            Dim length As Short 'should always be 16 bytes
            Dim RowNumber As Short
            Dim FirstColumn As Short
            Dim LastColumn As Short
            Dim RowHeight As Short 'written to file as 1/20ths of a point
            Dim internal As Short
            Dim DefaultAttributes As Byte 'set to zero for no default attributes
            Dim FileOffset As Short
            Dim rgbAttr1 As Byte
            Dim rgbAttr2 As Byte
            Dim rgbAttr3 As Byte
        End Structure

        Private FileNumber As Short
        Private BEG_FILE_MARKER As BEG_FILE_RECORD
        Private END_FILE_MARKER As END_FILE_RECORD
        Private HORIZ_PAGE_BREAK As HPAGE_BREAK_RECORD

        'create an array that will hold the rows where a horizontal page
        'break will be inserted just before.
        Private HorizPageBreakRows() As Short
        Private NumHorizPageBreaks As Short




        Public Function CreateFile(ByVal FileName As String) As Short
            Dim OpenFile As Object

            On Error GoTo Write_Error

            'UPGRADE_WARNING: Dir ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            If Dir(FileName) > "" Then
                Kill(FileName)
            End If

            FileNumber = FreeFile()
            FileOpen(FileNumber, FileName, OpenMode.Binary)
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, BEG_FILE_MARKER) 'must always be written first

            Call WriteDefaultFormats()

            'create the Horizontal Page Break array
            ReDim HorizPageBreakRows(0)
            NumHorizPageBreaks = 0

            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto OpenFile. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            OpenFile = 0 'return with no error

            Exit Function

Write_Error:
            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto OpenFile. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            OpenFile = Err.Number
            Exit Function

        End Function

        Public Function CloseFile() As Short
            Dim x As Short

            On Error GoTo Write_Error

            If FileNumber = 0 Then Exit Function


            'write the horizontal page breaks if necessary
            Dim lLoop1 As Integer
            Dim lLoop2 As Integer
            Dim lTemp As Integer
            If NumHorizPageBreaks > 0 Then
                'the Horizontal Page Break array must be in sorted order.
                'Use a simple Bubble sort because the size of this array would
                'be pretty small most of the time. A QuickSort would probably
                'be overkill.
                For lLoop1 = UBound(HorizPageBreakRows) To LBound(HorizPageBreakRows) Step -1
                    For lLoop2 = LBound(HorizPageBreakRows) + 1 To lLoop1
                        If HorizPageBreakRows(lLoop2 - 1) > HorizPageBreakRows(lLoop2) Then
                            lTemp = HorizPageBreakRows(lLoop2 - 1)
                            HorizPageBreakRows(lLoop2 - 1) = HorizPageBreakRows(lLoop2)
                            HorizPageBreakRows(lLoop2) = lTemp
                        End If
                    Next lLoop2
                Next lLoop1

                'write the Horizontal Page Break Record
                With HORIZ_PAGE_BREAK
                    .opcode = 27
                    .length = 2 + (NumHorizPageBreaks * 2)
                    .NumPageBreaks = NumHorizPageBreaks
                End With
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, HORIZ_PAGE_BREAK)

                'ARMANDO: commentata
                'now write the actual page break values
                'the MKI$ function is standard in other versions of BASIC but
                'VisualBasic does not have it. A KnowledgeBase article explains
                'how to recreate it (albeit using 16-bit API, I switched it
                'to 32-bit).
                'For x = 1 To UBound(HorizPageBreakRows)
                '	FilePut(FileNumber, MKI(HorizPageBreakRows(x)))
                'Next 
                'ARMANDO: commentata fine
            End If

            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, END_FILE_MARKER)
            FileClose(FileNumber)

            CloseFile = 0 'return with no error code

            Exit Function

Write_Error:
            CloseFile = Err.Number
            Exit Function

        End Function


        'UPGRADE_NOTE: Class_Initialize è stato aggiornato a Class_Initialize_Renamed. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="A9E4979A-37FA-4718-9994-97DD76ED70A7"'
        Private Sub Class_Initialize_Renamed()

            'Set up default values for records
            'These should be the values that are the same for every record of these types

            With BEG_FILE_MARKER 'beginning of file
                .opcode = 9
                .length = 4
                .version = 2
                .ftype = 10
            End With

            With END_FILE_MARKER 'end of file marker
                .opcode = 10
            End With


        End Sub
        Public Sub New()
            MyBase.New()
            Class_Initialize_Renamed()
        End Sub


        Public Function InsertHorizPageBreak(ByRef lrow As Integer) As Short
            Dim Row As Short

            On Error GoTo Page_Break_Error

            'the row and column values are written to the excel file as
            'unsigned integers. Therefore, must convert the longs to integer.
            If lrow > 32767 Then
                Row = CShort(lrow - 65536)
            Else
                Row = CShort(lrow) - 1 'rows/cols in Excel binary file are zero based
            End If

            NumHorizPageBreaks = NumHorizPageBreaks + 1
            ReDim Preserve HorizPageBreakRows(NumHorizPageBreaks)

            HorizPageBreakRows(NumHorizPageBreaks) = Row

            Exit Function


Page_Break_Error:
            InsertHorizPageBreak = Err.Number
            Exit Function


        End Function



        Public Function WriteValue(ByRef ValueType As ValueTypes, ByRef CellFontUsed As CellFont, ByRef Alignment As CellAlignment, ByRef HiddenLocked As CellHiddenLocked, ByRef lrow As Integer, ByRef lcol As Integer, ByRef value As Object, Optional ByRef CellFormat As Integer = 0) As Short
            Dim a As Object
            Dim l As Short
            Dim st As String
            Dim col As Short
            Dim Row As Short

            On Error GoTo Write_Error

            'the row and column values are written to the excel file as
            'unsigned integers. Therefore, must convert the longs to integer.

            If lrow > 32767 Then
                Row = CShort(lrow - 65536)
            Else
                Row = CShort(lrow) - 1 'rows/cols in Excel binary file are zero based
                '
            End If

            If lcol > 32767 Then
                col = CShort(lcol - 65536)
            Else
                col = CShort(lcol) - 1 'rows/cols in Excel binary file are zero based
            End If


            Dim INTEGER_RECORD As tInteger
            Dim NUMBER_RECORD As tNumber
            Dim b As Byte
            Dim TEXT_RECORD As tText
            Select Case ValueType
                Case ValueTypes.xlsInteger
                    With INTEGER_RECORD
                        .opcode = 2
                        .length = 9
                        .Row = Row
                        .col = col
                        .rgbAttr1 = CByte(HiddenLocked)
                        .rgbAttr2 = CByte(CellFontUsed + CellFormat)
                        .rgbAttr3 = CByte(Alignment)
                        'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto value. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                        .intValue = CShort(value)
                    End With
                    'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                    FilePut(FileNumber, INTEGER_RECORD)


                Case ValueTypes.xlsNumber

                    With NUMBER_RECORD
                        .opcode = 3
                        .length = 15
                        .Row = Row
                        .col = col
                        .rgbAttr1 = CByte(HiddenLocked)
                        .rgbAttr2 = CByte(CellFontUsed + CellFormat)
                        .rgbAttr3 = CByte(Alignment)
                        'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto value. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                        If Trim(CStr(value)) <> "" Then
                            .NumberValue = CDbl(value)
                        End If

                    End With
                    'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                    FilePut(FileNumber, NUMBER_RECORD)

                Case ValueTypes.xlsText
                    'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto value. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                    st = CStr(value)
                    If Len(st) > 255 Then
                        st = st.Substring(0, 255)
                    End If
                    l = Len(st)

                    With TEXT_RECORD
                        .opcode = 4
                        .length = 10
                        'Length of the text portion of the record
                        .TextLength = l

                        'Total length of the record
                        .length = 8 + l

                        .Row = Row
                        .col = col

                        .rgbAttr1 = CByte(HiddenLocked)
                        .rgbAttr2 = CByte(CellFontUsed + CellFormat)
                        .rgbAttr3 = CByte(Alignment)

                        'Put record header
                        'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                        FilePut(FileNumber, TEXT_RECORD)

                        'Then the actual string data
                        For a = 1 To l
                            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto a. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                            b = Asc(Mid(st, a, 1))
                            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                            FilePut(FileNumber, b)
                        Next
                    End With

            End Select

            WriteValue = 0 'return with no error

            Exit Function

Write_Error:
            WriteValue = Err.Number
            Exit Function

        End Function


        Public Function SetMargin(ByRef Margin As MarginTypes, ByRef MarginValue As Double) As Short

            On Error GoTo Write_Error

            'write the spreadsheet's layout information (in inches)
            Dim MarginRecord As MARGIN_RECORD_LAYOUT

            With MarginRecord
                .opcode = Margin
                .length = 8
                .MarginValue = MarginValue 'in inches
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, MarginRecord)

            SetMargin = 0

            Exit Function

Write_Error:
            SetMargin = Err.Number
            Exit Function

        End Function


        Public Function SetColumnWidth(ByRef FirstColumn As Byte, ByRef LastColumn As Byte, ByRef WidthValue As Short) As Object

            On Error GoTo Write_Error

            Dim COLWIDTH As COLWIDTH_RECORD

            With COLWIDTH
                .opcode = 36
                .length = 4
                .col1 = FirstColumn - 1
                .col2 = LastColumn - 1
                .ColumnWidth = WidthValue * 256 'values are specified as 1/256 of a character
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, COLWIDTH)

            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto SetColumnWidth. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            SetColumnWidth = 0

            Exit Function

Write_Error:
            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto SetColumnWidth. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            SetColumnWidth = Err.Number
            Exit Function

        End Function


        Public Function SetFont(ByRef FontName As String, ByRef FontHeight As Short, ByRef FontFormat As FontFormatting) As Short
            Dim a As Object
            Dim l As Short

            On Error GoTo Write_Error

            'you can set up to 4 fonts in the spreadsheet file. When writing a value such
            'as a Text or Number you can specify one of the 4 fonts (numbered 0 to 3)

            Dim FONTNAME_RECORD As FONT_RECORD

            l = Len(FontName)

            With FONTNAME_RECORD
                .opcode = 49
                .length = 5 + l
                .FontHeight = FontHeight * 20
                .FontAttributes1 = CByte(FontFormat) 'bold/underline etc...
                .FontAttributes2 = CByte(0) 'reserved-always zero!!
                .FontNameLength = CByte(Len(FontName))
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, FONTNAME_RECORD)

            'Then the actual font name data
            Dim b As Byte
            For a = 1 To l
                'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto a. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                b = Asc(Mid(FontName, a, 1))
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, b)
            Next

            SetFont = 0

            Exit Function

Write_Error:
            SetFont = Err.Number
            Exit Function


        End Function


        Public Function SetHeader(ByRef HeaderText As String) As Short
            Dim a As Object
            Dim l As Short

            On Error GoTo Write_Error

            Dim HEADER_RECORD As HEADER_FOOTER_RECORD

            l = Len(HeaderText)

            With HEADER_RECORD
                .opcode = 20
                .length = 1 + l
                .TextLength = CByte(Len(HeaderText))
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, HEADER_RECORD)

            'Then the actual Header text
            Dim b As Byte
            For a = 1 To l
                'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto a. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                b = Asc(Mid(HeaderText, a, 1))
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, b)
            Next

            SetHeader = 0

            Exit Function

Write_Error:
            SetHeader = Err.Number
            Exit Function

        End Function



        Public Function SetFooter(ByRef FooterText As String) As Short
            Dim a As Object
            Dim l As Short

            On Error GoTo Write_Error

            Dim FOOTER_RECORD As HEADER_FOOTER_RECORD

            l = Len(FooterText)

            With FOOTER_RECORD
                .opcode = 21
                .length = 1 + l
                .TextLength = CByte(Len(FooterText))
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, FOOTER_RECORD)

            'Then the actual Header text
            Dim b As Byte
            For a = 1 To l
                'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto a. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                b = Asc(Mid(FooterText, a, 1))
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, b)
            Next

            SetFooter = 0

            Exit Function

Write_Error:
            SetFooter = Err.Number
            Exit Function

        End Function



        Public Function SetFilePassword(ByRef PasswordText As String) As Short
            Dim a As Object
            Dim l As Short

            On Error GoTo Write_Error

            Dim FILE_PASSWORD_RECORD As PASSWORD_RECORD

            l = Len(PasswordText)

            With FILE_PASSWORD_RECORD
                .opcode = 47
                .length = l
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, FILE_PASSWORD_RECORD)

            'Then the actual Password text
            Dim b As Byte
            For a = 1 To l
                'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto a. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
                b = Asc(Mid(PasswordText, a, 1))
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, b)
            Next

            SetFilePassword = 0

            Exit Function

Write_Error:
            SetFilePassword = Err.Number
            Exit Function

        End Function




        Public WriteOnly Property PrintGridLines() As Boolean
            Set(ByVal Value As Boolean)

                On Error GoTo Write_Error

                Dim GRIDLINES_RECORD As PRINT_GRIDLINES_RECORD

                With GRIDLINES_RECORD
                    .opcode = 43
                    .length = 2
                    If Value = True Then
                        .PrintFlag = 1
                    Else
                        .PrintFlag = 0
                    End If

                End With
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, GRIDLINES_RECORD)

                Exit Property

Write_Error:
                Exit Property


            End Set
        End Property




        Public WriteOnly Property ProtectSpreadsheet() As Boolean
            Set(ByVal Value As Boolean)

                On Error GoTo Write_Error

                Dim PROTECT_RECORD As PROTECT_SPREADSHEET_RECORD

                With PROTECT_RECORD
                    .opcode = 18
                    .length = 2
                    If Value = True Then
                        .Protect = 1
                    Else
                        .Protect = 0
                    End If

                End With
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, PROTECT_RECORD)

                Exit Property

Write_Error:
                Exit Property


            End Set
        End Property


        Public Function WriteDefaultFormats() As Short

            Dim cFORMAT_COUNT_RECORD As FORMAT_COUNT_RECORD
            Dim cFORMAT_RECORD As FORMAT_RECORD
            Dim lIndex As Integer
            Dim aFormat(23) As String
            Dim l As Integer
            Dim q As String
            q = Chr(34)

            aFormat(0) = "General"
            aFormat(1) = "0"
            aFormat(2) = "0.00"
            aFormat(3) = "#,##0"
            aFormat(4) = "#,##0.00"
            aFormat(5) = "#,##0\ " & q & "$" & q & ";\-#,##0\ " & q & "$" & q
            aFormat(6) = "#,##0\ " & q & "$" & q & ";[Red]\-#,##0\ " & q & "$" & q
            aFormat(7) = "#,##0.00\ " & q & "$" & q & ";\-#,##0.00\ " & q & "$" & q
            aFormat(8) = "#,##0.00\ " & q & "$" & q & ";[Red]\-#,##0.00\ " & q & "$" & q
            aFormat(9) = "0%"
            aFormat(10) = "0.00%"
            aFormat(11) = "0.00E+00"
            aFormat(12) = "dd/mm/yy"
            aFormat(13) = "dd/\ mmm\ yy"
            aFormat(14) = "dd/\ mmm"
            aFormat(15) = "mmm\ yy"
            aFormat(16) = "h:mm\ AM/PM"
            aFormat(17) = "h:mm:ss\ AM/PM"
            aFormat(18) = "hh:mm"
            aFormat(19) = "hh:mm:ss"
            aFormat(20) = "dd/mm/yy\ hh:mm"
            aFormat(21) = "##0.0E+0"
            aFormat(22) = "mm:ss"
            aFormat(23) = "@"

            With cFORMAT_COUNT_RECORD
                .opcode = &H1FS
                .length = &H2S
                .Count = CShort(UBound(aFormat))
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, cFORMAT_COUNT_RECORD)

            Dim b As Byte
            Dim a As Integer
            For lIndex = LBound(aFormat) To UBound(aFormat)
                l = Len(aFormat(lIndex))
                With cFORMAT_RECORD
                    .opcode = &H1ES
                    .length = CShort(l + 1)
                    .FormatLenght = CShort(l)
                End With
                'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                FilePut(FileNumber, cFORMAT_RECORD)

                'Then the actual format
                For a = 1 To l
                    b = Asc(Mid(aFormat(lIndex), a, 1))
                    'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
                    FilePut(FileNumber, b)
                Next
            Next lIndex

            Exit Function

        End Function

        'ARMANDO
        'Function MKI(ByRef x As Short) As String
        '	Dim temp As String
        '	'used for writing integer array values to the disk file
        '	temp = Space(2)
        '	CopyMemory(temp, x, 2)
        '	MKI = temp
        'End Function
        'ARMANDO: commentata fine


        Public Function SetDefaultRowHeight(ByRef HeightValue As Short) As Object

            On Error GoTo Write_Error

            'Height is defined in units of 1/20th of a point. Therefore, a 10-point font
            'would be 200 (i.e. 200/20 = 10). This function takes a HeightValue such as
            '14 point and converts it the correct size before writing it to the file.

            Dim DEFHEIGHT As DEF_ROWHEIGHT_RECORD

            With DEFHEIGHT
                .opcode = 37
                .length = 2
                .RowHeight = HeightValue * 20 'convert points to 1/20ths of point
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, DEFHEIGHT)

            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto SetDefaultRowHeight. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            SetDefaultRowHeight = 0

            Exit Function

Write_Error:
            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto SetDefaultRowHeight. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            SetDefaultRowHeight = Err.Number
            Exit Function

        End Function


        Public Function SetRowHeight(ByRef lrow As Integer, ByRef HeightValue As Short) As Object
            Dim Row As Short

            On Error GoTo Write_Error

            'the row and column values are written to the excel file as
            'unsigned integers. Therefore, must convert the longs to integer.

            If lrow > 32767 Then
                Row = CShort(lrow - 65536)
            Else
                Row = CShort(lrow) - 1 'rows/cols in Excel binary file are zero based
            End If


            'Height is defined in units of 1/20th of a point. Therefore, a 10-point font
            'would be 200 (i.e. 200/20 = 10). This function takes a HeightValue such as
            '14 point and converts it the correct size before writing it to the file.

            Dim ROWHEIGHTREC As ROW_HEIGHT_RECORD

            With ROWHEIGHTREC
                .opcode = 8
                .length = 16
                .RowNumber = Row
                .FirstColumn = 0
                .LastColumn = 256
                .RowHeight = HeightValue * 20 'convert points to 1/20ths of point
                .internal = 0
                .DefaultAttributes = 0
                .FileOffset = 0
                .rgbAttr1 = 0
                .rgbAttr2 = 0
                .rgbAttr3 = 0
            End With
            'UPGRADE_WARNING: Put è stato aggiornato a FilePut e ha un nuovo comportamento. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="9B7D5ADD-D8FE-4819-A36C-6DEDAF088CC7"'
            FilePut(FileNumber, ROWHEIGHTREC)

            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto SetRowHeight. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            SetRowHeight = 0

            Exit Function

Write_Error:
            'UPGRADE_WARNING: Impossibile risolvere la proprietà predefinita dell'oggetto SetRowHeight. Fare clic per ulteriori informazioni: 'ms-help://MS.VSCC.v80/dv_commoner/local/redirect.htm?keyword="6A50421D-15FE-4896-8A1B-2EC21E9037B2"'
            SetRowHeight = Err.Number
            Exit Function

        End Function
    End Class


    '************CLASSI CONTABILITA'-COMPENSI GESTORE ***************PUCCIA********************
    Public Class CompensiMensili
        Private _id As Integer

        Private _Anno As String
        Private _Mese As String
        Private _Importo As Double


        Public Property ID() As Integer
            Get
                Return _id
            End Get
            Set(ByVal value As Integer)
                Me._id = value
            End Set
        End Property

        Public Property ANNO() As String
            Get
                Return _Anno
            End Get
            Set(ByVal value As String)
                Me._Anno = value
            End Set
        End Property
        Public Property MESE() As String
            Get
                Return _Mese
            End Get
            Set(ByVal value As String)
                Me._Mese = value
            End Set
        End Property
        Public Property IMPORTO() As Double
            Get
                Return _Importo
            End Get
            Set(ByVal value As Double)
                Me._Importo = value
            End Set
        End Property

        Public Sub New(ByVal id As Integer, ByVal anno As String, ByVal mese As String, ByVal importo As Double)
            Me.ID = id
            Me.ANNO = anno
            Me.MESE = mese
            Me.IMPORTO = importo
        End Sub

    End Class

    Public Class Competenze

        Private _id As Integer
        Private _id_Compensi As Integer

        Private _Anno As String
        Private _MeseRif As String
        Private _Bimestre As String
        Private _Importo As Double


        Public Property ID() As Integer
            Get
                Return _id
            End Get
            Set(ByVal value As Integer)
                Me._id = value
            End Set
        End Property

        Public Property ID_COMPENSI() As Integer
            Get
                Return _id_Compensi
            End Get
            Set(ByVal value As Integer)
                Me._id_Compensi = value
            End Set
        End Property

        Public Property ANNO() As String
            Get
                Return _Anno
            End Get
            Set(ByVal value As String)
                Me._Anno = value
            End Set
        End Property
        Public Property MESERIF() As String
            Get
                Return _MeseRif
            End Get
            Set(ByVal value As String)
                Me._MeseRif = value
            End Set
        End Property
        Public Property BIMESTRE() As String
            Get
                Return _Bimestre
            End Get
            Set(ByVal value As String)
                Me._Bimestre = value
            End Set
        End Property
        Public Property IMPORTO() As Double
            Get
                Return _Importo
            End Get
            Set(ByVal value As Double)
                Me._Importo = value
            End Set
        End Property

        Public Sub New(ByVal id As Integer, ByVal id_compenso As Integer, ByVal anno As String, ByVal meserif As String, ByVal bimestre As String, ByVal importo As Double)

            Me.ID = id
            Me.ID_COMPENSI = id_compenso
            Me.ANNO = anno
            Me.MESERIF = meserif
            Me.BIMESTRE = bimestre
            Me.IMPORTO = importo
        End Sub
    End Class




End Namespace